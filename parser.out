Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> definiciones main
Rule 2     definiciones -> var_def definiciones
Rule 3     definiciones -> funcion_def definiciones
Rule 4     definiciones -> clase_def definiciones
Rule 5     definiciones -> empty
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> ID COLON type_simple params_op
Rule 18    params_op -> COMMA params
Rule 19    params_op -> empty
Rule 20    bloque_func -> LBRACE op_var estatutos RBRACE
Rule 21    main -> MAIN LPAREN RPAREN bloque_func
Rule 22    var_def -> VAR type_compuesto ID ids SEMICOLON
Rule 23    var_def -> VAR type_simple ID op_vardef SEMICOLON
Rule 24    ids -> COMMA ID ids
Rule 25    ids -> empty
Rule 26    op_vardef -> LBRACKET CTEI RBRACKET
Rule 27    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 28    op_vardef -> empty
Rule 29    type_simple -> INT
Rule 30    type_simple -> FLOAT
Rule 31    type_simple -> STRING
Rule 32    type_compuesto -> ID
Rule 33    estatutos -> estatuto
Rule 34    estatutos -> estatuto estatutos
Rule 35    estatutos -> empty
Rule 36    estatuto -> asignacion
Rule 37    estatuto -> expr
Rule 38    estatuto -> returns
Rule 39    estatuto -> llamada_void
Rule 40    estatuto -> llamada_objeto
Rule 41    estatuto -> lectura
Rule 42    estatuto -> escritura
Rule 43    estatuto -> decision
Rule 44    estatuto -> repeticion
Rule 45    asignacion -> variable EQUAL expr SEMICOLON
Rule 46    expr -> expresion
Rule 47    expr -> expresion binop expresion
Rule 48    expresion -> termino op_expresion
Rule 49    op_expresion -> plus_minus expresion
Rule 50    op_expresion -> empty
Rule 51    termino -> factor op_factor
Rule 52    op_factor -> mulop factor
Rule 53    op_factor -> empty
Rule 54    factor -> LPAREN expr RPAREN
Rule 55    factor -> var_cte
Rule 56    factor -> variable
Rule 57    binop -> SAME
Rule 58    binop -> NOTEQ
Rule 59    binop -> GTHAN
Rule 60    binop -> LTHAN
Rule 61    mulop -> TIMES
Rule 62    mulop -> DIVIDE
Rule 63    plus_minus -> PLUS
Rule 64    plus_minus -> MINUS
Rule 65    var_cte -> ID
Rule 66    var_cte -> CTEF
Rule 67    var_cte -> CTEI
Rule 68    returns -> RETURN expr SEMICOLON
Rule 69    llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON
Rule 70    param_llamada -> expr
Rule 71    param_llamada -> empty
Rule 72    llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
Rule 73    lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON
Rule 74    op_lectura -> COMMA variable op_lectura
Rule 75    op_lectura -> empty
Rule 76    variable -> ID variable_op
Rule 77    variable_op -> DOT ID
Rule 78    variable_op -> LBRACKET expr RBRACKET matrix
Rule 79    variable_op -> empty
Rule 80    matrix -> LBRACKET expr RBRACKET matrix
Rule 81    matrix -> empty
Rule 82    escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
Rule 83    type_escritura -> CTESTRING
Rule 84    type_escritura -> expr
Rule 85    op_escritura -> COMMA CTESTRING op_escritura
Rule 86    op_escritura -> COMMA expr op_escritura
Rule 87    op_escritura -> empty
Rule 88    decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
Rule 89    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 90    op_decision -> empty
Rule 91    repeticion -> condicional
Rule 92    repeticion -> no_condicional
Rule 93    condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
Rule 94    no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
Rule 95    type_no_condicional -> ID
Rule 96    type_no_condicional -> ID LBRACKET expr RBRACKET
Rule 97    type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET
Rule 98    empty -> <empty>

Terminals, with rules where they appear

CLASS                : 6
COLON                : 17
COMMA                : 18 24 74 85 86
CTEF                 : 66
CTEI                 : 26 27 27 67
CTESTRING            : 83 85
DIVIDE               : 62
DO                   : 93 94
DOT                  : 72 77
ELSE                 : 89
EQUAL                : 45 94
FLOAT                : 30
FROM                 : 94
FUNC                 : 12
GTHAN                : 59
ID                   : 6 7 12 17 22 23 24 32 65 69 72 72 76 77 95 96 97
IF                   : 88
INHERIT              : 7
INT                  : 29
LBRACE               : 9 20 88 89 93 94
LBRACKET             : 26 27 27 78 80 96 97 97
LPAREN               : 12 21 54 69 72 73 82 88 93
LTHAN                : 60
MAIN                 : 21
MINUS                : 64
NOTEQ                : 58
PLUS                 : 63
RBRACE               : 9 20 88 89 93 94
RBRACKET             : 26 27 27 78 80 96 97 97
READ                 : 73
RET                  : 15
RETURN               : 68
RPAREN               : 12 21 54 69 72 73 82 88 93
SAME                 : 57
SEMICOLON            : 22 23 45 68 69 72 73 82
STRING               : 31
THEN                 : 88
TIMES                : 61
TO                   : 94
VAR                  : 22 23
WHILE                : 93
WRITE                : 82
error                : 

Nonterminals, with rules where they appear

asignacion           : 36
binop                : 47
bloque_clase         : 6
bloque_func          : 12 21
clase_def            : 4
clase_op             : 6
condicional          : 91
decision             : 43
definiciones         : 1 2 3 4
empty                : 5 8 11 14 16 19 25 28 35 50 53 71 75 79 81 87 90
escritura            : 42
estatuto             : 33 34
estatutos            : 20 34 88 89 93 94
expr                 : 37 45 54 68 70 78 80 84 86 88 93 94 94 96 97 97
expresion            : 46 47 47 49
factor               : 51 52
funcion_def          : 3 10
ids                  : 22 24
lectura              : 41
llamada_objeto       : 40
llamada_void         : 39
main                 : 1
matrix               : 78 80
mulop                : 52
no_condicional       : 92
op_decision          : 88
op_escritura         : 82 85 86
op_expresion         : 48
op_factor            : 51
op_func              : 9
op_lectura           : 73 74
op_var               : 9 20
op_vardef            : 23
param_llamada        : 69 72
params               : 12 18
params_op            : 17
plus_minus           : 49
programa             : 0
repeticion           : 44
return_option        : 12
returns              : 38
termino              : 48
type_compuesto       : 22
type_escritura       : 82
type_no_condicional  : 94
type_simple          : 15 17 23
var_cte              : 55
var_def              : 2 13
variable             : 45 56 73 74
variable_op          : 76

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . definiciones main
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (98) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 98 (empty -> .)

    programa                       shift and go to state 1
    definiciones                   shift and go to state 2
    var_def                        shift and go to state 3
    funcion_def                    shift and go to state 4
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 1

    (0) S' -> programa .



state 2

    (1) programa -> definiciones . main
    (21) main -> . MAIN LPAREN RPAREN bloque_func

    MAIN            shift and go to state 11

    main                           shift and go to state 10

state 3

    (2) definiciones -> var_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (98) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 98 (empty -> .)

    var_def                        shift and go to state 3
    definiciones                   shift and go to state 12
    funcion_def                    shift and go to state 4
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 4

    (3) definiciones -> funcion_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (98) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 98 (empty -> .)

    funcion_def                    shift and go to state 4
    definiciones                   shift and go to state 13
    var_def                        shift and go to state 3
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 5

    (4) definiciones -> clase_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (98) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 98 (empty -> .)

    clase_def                      shift and go to state 5
    definiciones                   shift and go to state 14
    var_def                        shift and go to state 3
    funcion_def                    shift and go to state 4
    empty                          shift and go to state 6

state 6

    (5) definiciones -> empty .

    MAIN            reduce using rule 5 (definiciones -> empty .)


state 7

    (22) var_def -> VAR . type_compuesto ID ids SEMICOLON
    (23) var_def -> VAR . type_simple ID op_vardef SEMICOLON
    (32) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING

    ID              shift and go to state 16
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_compuesto                 shift and go to state 15
    type_simple                    shift and go to state 17

state 8

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 21


state 9

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 22


state 10

    (1) programa -> definiciones main .

    $end            reduce using rule 1 (programa -> definiciones main .)


state 11

    (21) main -> MAIN . LPAREN RPAREN bloque_func

    LPAREN          shift and go to state 23


state 12

    (2) definiciones -> var_def definiciones .

    MAIN            reduce using rule 2 (definiciones -> var_def definiciones .)


state 13

    (3) definiciones -> funcion_def definiciones .

    MAIN            reduce using rule 3 (definiciones -> funcion_def definiciones .)


state 14

    (4) definiciones -> clase_def definiciones .

    MAIN            reduce using rule 4 (definiciones -> clase_def definiciones .)


state 15

    (22) var_def -> VAR type_compuesto . ID ids SEMICOLON

    ID              shift and go to state 24


state 16

    (32) type_compuesto -> ID .

    ID              reduce using rule 32 (type_compuesto -> ID .)


state 17

    (23) var_def -> VAR type_simple . ID op_vardef SEMICOLON

    ID              shift and go to state 25


state 18

    (29) type_simple -> INT .

    ID              reduce using rule 29 (type_simple -> INT .)
    COMMA           reduce using rule 29 (type_simple -> INT .)
    RPAREN          reduce using rule 29 (type_simple -> INT .)
    LBRACE          reduce using rule 29 (type_simple -> INT .)


state 19

    (30) type_simple -> FLOAT .

    ID              reduce using rule 30 (type_simple -> FLOAT .)
    COMMA           reduce using rule 30 (type_simple -> FLOAT .)
    RPAREN          reduce using rule 30 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 30 (type_simple -> FLOAT .)


state 20

    (31) type_simple -> STRING .

    ID              reduce using rule 31 (type_simple -> STRING .)
    COMMA           reduce using rule 31 (type_simple -> STRING .)
    RPAREN          reduce using rule 31 (type_simple -> STRING .)
    LBRACE          reduce using rule 31 (type_simple -> STRING .)


state 21

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 26


state 22

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (98) empty -> .

    INHERIT         shift and go to state 28
    LBRACE          reduce using rule 98 (empty -> .)

    clase_op                       shift and go to state 27
    empty                          shift and go to state 29

state 23

    (21) main -> MAIN LPAREN . RPAREN bloque_func

    RPAREN          shift and go to state 30


state 24

    (22) var_def -> VAR type_compuesto ID . ids SEMICOLON
    (24) ids -> . COMMA ID ids
    (25) ids -> . empty
    (98) empty -> .

    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 98 (empty -> .)

    ids                            shift and go to state 31
    empty                          shift and go to state 33

state 25

    (23) var_def -> VAR type_simple ID . op_vardef SEMICOLON
    (26) op_vardef -> . LBRACKET CTEI RBRACKET
    (27) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (28) op_vardef -> . empty
    (98) empty -> .

    LBRACKET        shift and go to state 35
    SEMICOLON       reduce using rule 98 (empty -> .)

    op_vardef                      shift and go to state 34
    empty                          shift and go to state 36

state 26

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . ID COLON type_simple params_op

    ID              shift and go to state 37

    params                         shift and go to state 38

state 27

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 40

    bloque_clase                   shift and go to state 39

state 28

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 41


state 29

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 30

    (21) main -> MAIN LPAREN RPAREN . bloque_func
    (20) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 43

    bloque_func                    shift and go to state 42

state 31

    (22) var_def -> VAR type_compuesto ID ids . SEMICOLON

    SEMICOLON       shift and go to state 44


state 32

    (24) ids -> COMMA . ID ids

    ID              shift and go to state 45


state 33

    (25) ids -> empty .

    SEMICOLON       reduce using rule 25 (ids -> empty .)


state 34

    (23) var_def -> VAR type_simple ID op_vardef . SEMICOLON

    SEMICOLON       shift and go to state 46


state 35

    (26) op_vardef -> LBRACKET . CTEI RBRACKET
    (27) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 47


state 36

    (28) op_vardef -> empty .

    SEMICOLON       reduce using rule 28 (op_vardef -> empty .)


state 37

    (17) params -> ID . COLON type_simple params_op

    COLON           shift and go to state 48


state 38

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 49


state 39

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    VAR             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 40

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (98) empty -> .

    VAR             shift and go to state 7
    FUNC            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)

    op_var                         shift and go to state 50
    var_def                        shift and go to state 51
    empty                          shift and go to state 52

state 41

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 42

    (21) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 21 (main -> MAIN LPAREN RPAREN bloque_func .)


state 43

    (20) bloque_func -> LBRACE . op_var estatutos RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (22) var_def -> . VAR type_compuesto ID ids SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (98) empty -> .

    VAR             shift and go to state 7
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)

    op_var                         shift and go to state 53
    var_def                        shift and go to state 51
    empty                          shift and go to state 52

state 44

    (22) var_def -> VAR type_compuesto ID ids SEMICOLON .

    VAR             reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    FUNC            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    CLASS           reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    MAIN            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    RBRACE          reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    RETURN          reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    ID              reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    READ            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    WRITE           reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    IF              reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    WHILE           reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    FROM            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    LPAREN          reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    CTEF            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)
    CTEI            reduce using rule 22 (var_def -> VAR type_compuesto ID ids SEMICOLON .)


state 45

    (24) ids -> COMMA ID . ids
    (24) ids -> . COMMA ID ids
    (25) ids -> . empty
    (98) empty -> .

    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 98 (empty -> .)

    ids                            shift and go to state 54
    empty                          shift and go to state 33

state 46

    (23) var_def -> VAR type_simple ID op_vardef SEMICOLON .

    VAR             reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FUNC            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CLASS           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    MAIN            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RBRACE          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RETURN          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    ID              reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    READ            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WRITE           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    IF              reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WHILE           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FROM            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    LPAREN          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEF            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEI            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)


state 47

    (26) op_vardef -> LBRACKET CTEI . RBRACKET
    (27) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 55


state 48

    (17) params -> ID COLON . type_simple params_op
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 56

state 49

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (98) empty -> .

    RET             shift and go to state 58
    LBRACE          reduce using rule 98 (empty -> .)

    return_option                  shift and go to state 57
    empty                          shift and go to state 59

state 50

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (98) empty -> .

    FUNC            shift and go to state 8
    RBRACE          reduce using rule 98 (empty -> .)

    op_func                        shift and go to state 60
    funcion_def                    shift and go to state 61
    empty                          shift and go to state 62

state 51

    (13) op_var -> var_def .

    FUNC            reduce using rule 13 (op_var -> var_def .)
    RBRACE          reduce using rule 13 (op_var -> var_def .)
    RETURN          reduce using rule 13 (op_var -> var_def .)
    ID              reduce using rule 13 (op_var -> var_def .)
    READ            reduce using rule 13 (op_var -> var_def .)
    WRITE           reduce using rule 13 (op_var -> var_def .)
    IF              reduce using rule 13 (op_var -> var_def .)
    WHILE           reduce using rule 13 (op_var -> var_def .)
    FROM            reduce using rule 13 (op_var -> var_def .)
    LPAREN          reduce using rule 13 (op_var -> var_def .)
    CTEF            reduce using rule 13 (op_var -> var_def .)
    CTEI            reduce using rule 13 (op_var -> var_def .)


state 52

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)
    RETURN          reduce using rule 14 (op_var -> empty .)
    ID              reduce using rule 14 (op_var -> empty .)
    READ            reduce using rule 14 (op_var -> empty .)
    WRITE           reduce using rule 14 (op_var -> empty .)
    IF              reduce using rule 14 (op_var -> empty .)
    WHILE           reduce using rule 14 (op_var -> empty .)
    FROM            reduce using rule 14 (op_var -> empty .)
    LPAREN          reduce using rule 14 (op_var -> empty .)
    CTEF            reduce using rule 14 (op_var -> empty .)
    CTEI            reduce using rule 14 (op_var -> empty .)


state 53

    (20) bloque_func -> LBRACE op_var . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

    RBRACE          reduce using rule 98 (empty -> .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    estatutos                      shift and go to state 63
    estatuto                       shift and go to state 64
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    expr                           shift and go to state 67
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 54

    (24) ids -> COMMA ID ids .

    SEMICOLON       reduce using rule 24 (ids -> COMMA ID ids .)


state 55

    (26) op_vardef -> LBRACKET CTEI RBRACKET .
    (27) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 92


state 56

    (17) params -> ID COLON type_simple . params_op
    (18) params_op -> . COMMA params
    (19) params_op -> . empty
    (98) empty -> .

    COMMA           shift and go to state 94
    RPAREN          reduce using rule 98 (empty -> .)

    params_op                      shift and go to state 93
    empty                          shift and go to state 95

state 57

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (20) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 43

    bloque_func                    shift and go to state 96

state 58

    (15) return_option -> RET . type_simple
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 97

state 59

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 60

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 98


state 61

    (10) op_func -> funcion_def .

    RBRACE          reduce using rule 10 (op_func -> funcion_def .)


state 62

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 63

    (20) bloque_func -> LBRACE op_var estatutos . RBRACE

    RBRACE          shift and go to state 99


state 64

    (33) estatutos -> estatuto .
    (34) estatutos -> estatuto . estatutos
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

  ! reduce/reduce conflict for RBRACE resolved using rule 33 (estatutos -> estatuto .)
    RBRACE          reduce using rule 33 (estatutos -> estatuto .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

  ! RBRACE          [ reduce using rule 98 (empty -> .) ]

    estatuto                       shift and go to state 64
    estatutos                      shift and go to state 100
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    expr                           shift and go to state 67
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 65

    (35) estatutos -> empty .

    RBRACE          reduce using rule 35 (estatutos -> empty .)


state 66

    (36) estatuto -> asignacion .

    RETURN          reduce using rule 36 (estatuto -> asignacion .)
    ID              reduce using rule 36 (estatuto -> asignacion .)
    READ            reduce using rule 36 (estatuto -> asignacion .)
    WRITE           reduce using rule 36 (estatuto -> asignacion .)
    IF              reduce using rule 36 (estatuto -> asignacion .)
    WHILE           reduce using rule 36 (estatuto -> asignacion .)
    FROM            reduce using rule 36 (estatuto -> asignacion .)
    LPAREN          reduce using rule 36 (estatuto -> asignacion .)
    CTEF            reduce using rule 36 (estatuto -> asignacion .)
    CTEI            reduce using rule 36 (estatuto -> asignacion .)
    RBRACE          reduce using rule 36 (estatuto -> asignacion .)


state 67

    (37) estatuto -> expr .

    RETURN          reduce using rule 37 (estatuto -> expr .)
    ID              reduce using rule 37 (estatuto -> expr .)
    READ            reduce using rule 37 (estatuto -> expr .)
    WRITE           reduce using rule 37 (estatuto -> expr .)
    IF              reduce using rule 37 (estatuto -> expr .)
    WHILE           reduce using rule 37 (estatuto -> expr .)
    FROM            reduce using rule 37 (estatuto -> expr .)
    LPAREN          reduce using rule 37 (estatuto -> expr .)
    CTEF            reduce using rule 37 (estatuto -> expr .)
    CTEI            reduce using rule 37 (estatuto -> expr .)
    RBRACE          reduce using rule 37 (estatuto -> expr .)


state 68

    (38) estatuto -> returns .

    RETURN          reduce using rule 38 (estatuto -> returns .)
    ID              reduce using rule 38 (estatuto -> returns .)
    READ            reduce using rule 38 (estatuto -> returns .)
    WRITE           reduce using rule 38 (estatuto -> returns .)
    IF              reduce using rule 38 (estatuto -> returns .)
    WHILE           reduce using rule 38 (estatuto -> returns .)
    FROM            reduce using rule 38 (estatuto -> returns .)
    LPAREN          reduce using rule 38 (estatuto -> returns .)
    CTEF            reduce using rule 38 (estatuto -> returns .)
    CTEI            reduce using rule 38 (estatuto -> returns .)
    RBRACE          reduce using rule 38 (estatuto -> returns .)


state 69

    (39) estatuto -> llamada_void .

    RETURN          reduce using rule 39 (estatuto -> llamada_void .)
    ID              reduce using rule 39 (estatuto -> llamada_void .)
    READ            reduce using rule 39 (estatuto -> llamada_void .)
    WRITE           reduce using rule 39 (estatuto -> llamada_void .)
    IF              reduce using rule 39 (estatuto -> llamada_void .)
    WHILE           reduce using rule 39 (estatuto -> llamada_void .)
    FROM            reduce using rule 39 (estatuto -> llamada_void .)
    LPAREN          reduce using rule 39 (estatuto -> llamada_void .)
    CTEF            reduce using rule 39 (estatuto -> llamada_void .)
    CTEI            reduce using rule 39 (estatuto -> llamada_void .)
    RBRACE          reduce using rule 39 (estatuto -> llamada_void .)


state 70

    (40) estatuto -> llamada_objeto .

    RETURN          reduce using rule 40 (estatuto -> llamada_objeto .)
    ID              reduce using rule 40 (estatuto -> llamada_objeto .)
    READ            reduce using rule 40 (estatuto -> llamada_objeto .)
    WRITE           reduce using rule 40 (estatuto -> llamada_objeto .)
    IF              reduce using rule 40 (estatuto -> llamada_objeto .)
    WHILE           reduce using rule 40 (estatuto -> llamada_objeto .)
    FROM            reduce using rule 40 (estatuto -> llamada_objeto .)
    LPAREN          reduce using rule 40 (estatuto -> llamada_objeto .)
    CTEF            reduce using rule 40 (estatuto -> llamada_objeto .)
    CTEI            reduce using rule 40 (estatuto -> llamada_objeto .)
    RBRACE          reduce using rule 40 (estatuto -> llamada_objeto .)


state 71

    (41) estatuto -> lectura .

    RETURN          reduce using rule 41 (estatuto -> lectura .)
    ID              reduce using rule 41 (estatuto -> lectura .)
    READ            reduce using rule 41 (estatuto -> lectura .)
    WRITE           reduce using rule 41 (estatuto -> lectura .)
    IF              reduce using rule 41 (estatuto -> lectura .)
    WHILE           reduce using rule 41 (estatuto -> lectura .)
    FROM            reduce using rule 41 (estatuto -> lectura .)
    LPAREN          reduce using rule 41 (estatuto -> lectura .)
    CTEF            reduce using rule 41 (estatuto -> lectura .)
    CTEI            reduce using rule 41 (estatuto -> lectura .)
    RBRACE          reduce using rule 41 (estatuto -> lectura .)


state 72

    (42) estatuto -> escritura .

    RETURN          reduce using rule 42 (estatuto -> escritura .)
    ID              reduce using rule 42 (estatuto -> escritura .)
    READ            reduce using rule 42 (estatuto -> escritura .)
    WRITE           reduce using rule 42 (estatuto -> escritura .)
    IF              reduce using rule 42 (estatuto -> escritura .)
    WHILE           reduce using rule 42 (estatuto -> escritura .)
    FROM            reduce using rule 42 (estatuto -> escritura .)
    LPAREN          reduce using rule 42 (estatuto -> escritura .)
    CTEF            reduce using rule 42 (estatuto -> escritura .)
    CTEI            reduce using rule 42 (estatuto -> escritura .)
    RBRACE          reduce using rule 42 (estatuto -> escritura .)


state 73

    (43) estatuto -> decision .

    RETURN          reduce using rule 43 (estatuto -> decision .)
    ID              reduce using rule 43 (estatuto -> decision .)
    READ            reduce using rule 43 (estatuto -> decision .)
    WRITE           reduce using rule 43 (estatuto -> decision .)
    IF              reduce using rule 43 (estatuto -> decision .)
    WHILE           reduce using rule 43 (estatuto -> decision .)
    FROM            reduce using rule 43 (estatuto -> decision .)
    LPAREN          reduce using rule 43 (estatuto -> decision .)
    CTEF            reduce using rule 43 (estatuto -> decision .)
    CTEI            reduce using rule 43 (estatuto -> decision .)
    RBRACE          reduce using rule 43 (estatuto -> decision .)


state 74

    (44) estatuto -> repeticion .

    RETURN          reduce using rule 44 (estatuto -> repeticion .)
    ID              reduce using rule 44 (estatuto -> repeticion .)
    READ            reduce using rule 44 (estatuto -> repeticion .)
    WRITE           reduce using rule 44 (estatuto -> repeticion .)
    IF              reduce using rule 44 (estatuto -> repeticion .)
    WHILE           reduce using rule 44 (estatuto -> repeticion .)
    FROM            reduce using rule 44 (estatuto -> repeticion .)
    LPAREN          reduce using rule 44 (estatuto -> repeticion .)
    CTEF            reduce using rule 44 (estatuto -> repeticion .)
    CTEI            reduce using rule 44 (estatuto -> repeticion .)
    RBRACE          reduce using rule 44 (estatuto -> repeticion .)


state 75

    (45) asignacion -> variable . EQUAL expr SEMICOLON
    (56) factor -> variable .

    EQUAL           shift and go to state 101
    TIMES           reduce using rule 56 (factor -> variable .)
    DIVIDE          reduce using rule 56 (factor -> variable .)
    PLUS            reduce using rule 56 (factor -> variable .)
    MINUS           reduce using rule 56 (factor -> variable .)
    SAME            reduce using rule 56 (factor -> variable .)
    NOTEQ           reduce using rule 56 (factor -> variable .)
    GTHAN           reduce using rule 56 (factor -> variable .)
    LTHAN           reduce using rule 56 (factor -> variable .)
    RETURN          reduce using rule 56 (factor -> variable .)
    ID              reduce using rule 56 (factor -> variable .)
    READ            reduce using rule 56 (factor -> variable .)
    WRITE           reduce using rule 56 (factor -> variable .)
    IF              reduce using rule 56 (factor -> variable .)
    WHILE           reduce using rule 56 (factor -> variable .)
    FROM            reduce using rule 56 (factor -> variable .)
    LPAREN          reduce using rule 56 (factor -> variable .)
    CTEF            reduce using rule 56 (factor -> variable .)
    CTEI            reduce using rule 56 (factor -> variable .)
    RBRACE          reduce using rule 56 (factor -> variable .)


state 76

    (46) expr -> expresion .
    (47) expr -> expresion . binop expresion
    (57) binop -> . SAME
    (58) binop -> . NOTEQ
    (59) binop -> . GTHAN
    (60) binop -> . LTHAN

    RETURN          reduce using rule 46 (expr -> expresion .)
    ID              reduce using rule 46 (expr -> expresion .)
    READ            reduce using rule 46 (expr -> expresion .)
    WRITE           reduce using rule 46 (expr -> expresion .)
    IF              reduce using rule 46 (expr -> expresion .)
    WHILE           reduce using rule 46 (expr -> expresion .)
    FROM            reduce using rule 46 (expr -> expresion .)
    LPAREN          reduce using rule 46 (expr -> expresion .)
    CTEF            reduce using rule 46 (expr -> expresion .)
    CTEI            reduce using rule 46 (expr -> expresion .)
    RBRACE          reduce using rule 46 (expr -> expresion .)
    SEMICOLON       reduce using rule 46 (expr -> expresion .)
    RPAREN          reduce using rule 46 (expr -> expresion .)
    RBRACKET        reduce using rule 46 (expr -> expresion .)
    COMMA           reduce using rule 46 (expr -> expresion .)
    TO              reduce using rule 46 (expr -> expresion .)
    DO              reduce using rule 46 (expr -> expresion .)
    SAME            shift and go to state 103
    NOTEQ           shift and go to state 104
    GTHAN           shift and go to state 105
    LTHAN           shift and go to state 106

    binop                          shift and go to state 102

state 77

    (68) returns -> RETURN . expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 107
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 78

    (69) llamada_void -> ID . LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (76) variable -> ID . variable_op
    (65) var_cte -> ID .
    (77) variable_op -> . DOT ID
    (78) variable_op -> . LBRACKET expr RBRACKET matrix
    (79) variable_op -> . empty
    (98) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for SAME resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for GTHAN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for LTHAN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for READ resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for WRITE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for FROM resolved using rule 65 (var_cte -> ID .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for CTEF resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for CTEI resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 65 (var_cte -> ID .)
    LPAREN          shift and go to state 110
    DOT             shift and go to state 111
    TIMES           reduce using rule 65 (var_cte -> ID .)
    DIVIDE          reduce using rule 65 (var_cte -> ID .)
    PLUS            reduce using rule 65 (var_cte -> ID .)
    MINUS           reduce using rule 65 (var_cte -> ID .)
    SAME            reduce using rule 65 (var_cte -> ID .)
    NOTEQ           reduce using rule 65 (var_cte -> ID .)
    GTHAN           reduce using rule 65 (var_cte -> ID .)
    LTHAN           reduce using rule 65 (var_cte -> ID .)
    RETURN          reduce using rule 65 (var_cte -> ID .)
    ID              reduce using rule 65 (var_cte -> ID .)
    READ            reduce using rule 65 (var_cte -> ID .)
    WRITE           reduce using rule 65 (var_cte -> ID .)
    IF              reduce using rule 65 (var_cte -> ID .)
    WHILE           reduce using rule 65 (var_cte -> ID .)
    FROM            reduce using rule 65 (var_cte -> ID .)
    CTEF            reduce using rule 65 (var_cte -> ID .)
    CTEI            reduce using rule 65 (var_cte -> ID .)
    RBRACE          reduce using rule 65 (var_cte -> ID .)
    LBRACKET        shift and go to state 113
    EQUAL           reduce using rule 98 (empty -> .)

  ! LPAREN          [ reduce using rule 65 (var_cte -> ID .) ]
  ! TIMES           [ reduce using rule 98 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 98 (empty -> .) ]
  ! PLUS            [ reduce using rule 98 (empty -> .) ]
  ! MINUS           [ reduce using rule 98 (empty -> .) ]
  ! SAME            [ reduce using rule 98 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 98 (empty -> .) ]
  ! GTHAN           [ reduce using rule 98 (empty -> .) ]
  ! LTHAN           [ reduce using rule 98 (empty -> .) ]
  ! RETURN          [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! READ            [ reduce using rule 98 (empty -> .) ]
  ! WRITE           [ reduce using rule 98 (empty -> .) ]
  ! IF              [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! FROM            [ reduce using rule 98 (empty -> .) ]
  ! LPAREN          [ reduce using rule 98 (empty -> .) ]
  ! CTEF            [ reduce using rule 98 (empty -> .) ]
  ! CTEI            [ reduce using rule 98 (empty -> .) ]
  ! RBRACE          [ reduce using rule 98 (empty -> .) ]

    variable_op                    shift and go to state 112
    empty                          shift and go to state 114

state 79

    (54) factor -> LPAREN . expr RPAREN
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 115
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 80

    (73) lectura -> READ . LPAREN variable op_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 116


state 81

    (82) escritura -> WRITE . LPAREN type_escritura op_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 117


state 82

    (88) decision -> IF . LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 118


state 83

    (91) repeticion -> condicional .

    RETURN          reduce using rule 91 (repeticion -> condicional .)
    ID              reduce using rule 91 (repeticion -> condicional .)
    READ            reduce using rule 91 (repeticion -> condicional .)
    WRITE           reduce using rule 91 (repeticion -> condicional .)
    IF              reduce using rule 91 (repeticion -> condicional .)
    WHILE           reduce using rule 91 (repeticion -> condicional .)
    FROM            reduce using rule 91 (repeticion -> condicional .)
    LPAREN          reduce using rule 91 (repeticion -> condicional .)
    CTEF            reduce using rule 91 (repeticion -> condicional .)
    CTEI            reduce using rule 91 (repeticion -> condicional .)
    RBRACE          reduce using rule 91 (repeticion -> condicional .)


state 84

    (92) repeticion -> no_condicional .

    RETURN          reduce using rule 92 (repeticion -> no_condicional .)
    ID              reduce using rule 92 (repeticion -> no_condicional .)
    READ            reduce using rule 92 (repeticion -> no_condicional .)
    WRITE           reduce using rule 92 (repeticion -> no_condicional .)
    IF              reduce using rule 92 (repeticion -> no_condicional .)
    WHILE           reduce using rule 92 (repeticion -> no_condicional .)
    FROM            reduce using rule 92 (repeticion -> no_condicional .)
    LPAREN          reduce using rule 92 (repeticion -> no_condicional .)
    CTEF            reduce using rule 92 (repeticion -> no_condicional .)
    CTEI            reduce using rule 92 (repeticion -> no_condicional .)
    RBRACE          reduce using rule 92 (repeticion -> no_condicional .)


state 85

    (48) expresion -> termino . op_expresion
    (49) op_expresion -> . plus_minus expresion
    (50) op_expresion -> . empty
    (63) plus_minus -> . PLUS
    (64) plus_minus -> . MINUS
    (98) empty -> .

    PLUS            shift and go to state 122
    MINUS           shift and go to state 123
    SAME            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    GTHAN           reduce using rule 98 (empty -> .)
    LTHAN           reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)
    SEMICOLON       reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    RBRACKET        reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    TO              reduce using rule 98 (empty -> .)
    DO              reduce using rule 98 (empty -> .)

    op_expresion                   shift and go to state 119
    plus_minus                     shift and go to state 120
    empty                          shift and go to state 121

state 86

    (93) condicional -> WHILE . LPAREN expr RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 124


state 87

    (94) no_condicional -> FROM . type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (95) type_no_condicional -> . ID
    (96) type_no_condicional -> . ID LBRACKET expr RBRACKET
    (97) type_no_condicional -> . ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET

    ID              shift and go to state 126

    type_no_condicional            shift and go to state 125

state 88

    (51) termino -> factor . op_factor
    (52) op_factor -> . mulop factor
    (53) op_factor -> . empty
    (61) mulop -> . TIMES
    (62) mulop -> . DIVIDE
    (98) empty -> .

    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131
    PLUS            reduce using rule 98 (empty -> .)
    MINUS           reduce using rule 98 (empty -> .)
    SAME            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    GTHAN           reduce using rule 98 (empty -> .)
    LTHAN           reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)
    SEMICOLON       reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    RBRACKET        reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    TO              reduce using rule 98 (empty -> .)
    DO              reduce using rule 98 (empty -> .)

    op_factor                      shift and go to state 127
    mulop                          shift and go to state 128
    empty                          shift and go to state 129

state 89

    (55) factor -> var_cte .

    TIMES           reduce using rule 55 (factor -> var_cte .)
    DIVIDE          reduce using rule 55 (factor -> var_cte .)
    PLUS            reduce using rule 55 (factor -> var_cte .)
    MINUS           reduce using rule 55 (factor -> var_cte .)
    SAME            reduce using rule 55 (factor -> var_cte .)
    NOTEQ           reduce using rule 55 (factor -> var_cte .)
    GTHAN           reduce using rule 55 (factor -> var_cte .)
    LTHAN           reduce using rule 55 (factor -> var_cte .)
    RETURN          reduce using rule 55 (factor -> var_cte .)
    ID              reduce using rule 55 (factor -> var_cte .)
    READ            reduce using rule 55 (factor -> var_cte .)
    WRITE           reduce using rule 55 (factor -> var_cte .)
    IF              reduce using rule 55 (factor -> var_cte .)
    WHILE           reduce using rule 55 (factor -> var_cte .)
    FROM            reduce using rule 55 (factor -> var_cte .)
    LPAREN          reduce using rule 55 (factor -> var_cte .)
    CTEF            reduce using rule 55 (factor -> var_cte .)
    CTEI            reduce using rule 55 (factor -> var_cte .)
    RBRACE          reduce using rule 55 (factor -> var_cte .)
    SEMICOLON       reduce using rule 55 (factor -> var_cte .)
    RPAREN          reduce using rule 55 (factor -> var_cte .)
    RBRACKET        reduce using rule 55 (factor -> var_cte .)
    COMMA           reduce using rule 55 (factor -> var_cte .)
    TO              reduce using rule 55 (factor -> var_cte .)
    DO              reduce using rule 55 (factor -> var_cte .)


state 90

    (66) var_cte -> CTEF .

    TIMES           reduce using rule 66 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 66 (var_cte -> CTEF .)
    PLUS            reduce using rule 66 (var_cte -> CTEF .)
    MINUS           reduce using rule 66 (var_cte -> CTEF .)
    SAME            reduce using rule 66 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 66 (var_cte -> CTEF .)
    GTHAN           reduce using rule 66 (var_cte -> CTEF .)
    LTHAN           reduce using rule 66 (var_cte -> CTEF .)
    RETURN          reduce using rule 66 (var_cte -> CTEF .)
    ID              reduce using rule 66 (var_cte -> CTEF .)
    READ            reduce using rule 66 (var_cte -> CTEF .)
    WRITE           reduce using rule 66 (var_cte -> CTEF .)
    IF              reduce using rule 66 (var_cte -> CTEF .)
    WHILE           reduce using rule 66 (var_cte -> CTEF .)
    FROM            reduce using rule 66 (var_cte -> CTEF .)
    LPAREN          reduce using rule 66 (var_cte -> CTEF .)
    CTEF            reduce using rule 66 (var_cte -> CTEF .)
    CTEI            reduce using rule 66 (var_cte -> CTEF .)
    RBRACE          reduce using rule 66 (var_cte -> CTEF .)
    SEMICOLON       reduce using rule 66 (var_cte -> CTEF .)
    RPAREN          reduce using rule 66 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 66 (var_cte -> CTEF .)
    COMMA           reduce using rule 66 (var_cte -> CTEF .)
    TO              reduce using rule 66 (var_cte -> CTEF .)
    DO              reduce using rule 66 (var_cte -> CTEF .)


state 91

    (67) var_cte -> CTEI .

    TIMES           reduce using rule 67 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 67 (var_cte -> CTEI .)
    PLUS            reduce using rule 67 (var_cte -> CTEI .)
    MINUS           reduce using rule 67 (var_cte -> CTEI .)
    SAME            reduce using rule 67 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 67 (var_cte -> CTEI .)
    GTHAN           reduce using rule 67 (var_cte -> CTEI .)
    LTHAN           reduce using rule 67 (var_cte -> CTEI .)
    RETURN          reduce using rule 67 (var_cte -> CTEI .)
    ID              reduce using rule 67 (var_cte -> CTEI .)
    READ            reduce using rule 67 (var_cte -> CTEI .)
    WRITE           reduce using rule 67 (var_cte -> CTEI .)
    IF              reduce using rule 67 (var_cte -> CTEI .)
    WHILE           reduce using rule 67 (var_cte -> CTEI .)
    FROM            reduce using rule 67 (var_cte -> CTEI .)
    LPAREN          reduce using rule 67 (var_cte -> CTEI .)
    CTEF            reduce using rule 67 (var_cte -> CTEI .)
    CTEI            reduce using rule 67 (var_cte -> CTEI .)
    RBRACE          reduce using rule 67 (var_cte -> CTEI .)
    SEMICOLON       reduce using rule 67 (var_cte -> CTEI .)
    RPAREN          reduce using rule 67 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 67 (var_cte -> CTEI .)
    COMMA           reduce using rule 67 (var_cte -> CTEI .)
    TO              reduce using rule 67 (var_cte -> CTEI .)
    DO              reduce using rule 67 (var_cte -> CTEI .)


state 92

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 132


state 93

    (17) params -> ID COLON type_simple params_op .

    RPAREN          reduce using rule 17 (params -> ID COLON type_simple params_op .)


state 94

    (18) params_op -> COMMA . params
    (17) params -> . ID COLON type_simple params_op

    ID              shift and go to state 37

    params                         shift and go to state 133

state 95

    (19) params_op -> empty .

    RPAREN          reduce using rule 19 (params_op -> empty .)


state 96

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    VAR             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 97

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 98

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    VAR             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 99

    (20) bloque_func -> LBRACE op_var estatutos RBRACE .

    $end            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    VAR             reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    FUNC            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    CLASS           reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    MAIN            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    RBRACE          reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)


state 100

    (34) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 34 (estatutos -> estatuto estatutos .)


state 101

    (45) asignacion -> variable EQUAL . expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    variable                       shift and go to state 108
    expr                           shift and go to state 134
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 102

    (47) expr -> expresion binop . expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expresion                      shift and go to state 135
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 103

    (57) binop -> SAME .

    LPAREN          reduce using rule 57 (binop -> SAME .)
    ID              reduce using rule 57 (binop -> SAME .)
    CTEF            reduce using rule 57 (binop -> SAME .)
    CTEI            reduce using rule 57 (binop -> SAME .)


state 104

    (58) binop -> NOTEQ .

    LPAREN          reduce using rule 58 (binop -> NOTEQ .)
    ID              reduce using rule 58 (binop -> NOTEQ .)
    CTEF            reduce using rule 58 (binop -> NOTEQ .)
    CTEI            reduce using rule 58 (binop -> NOTEQ .)


state 105

    (59) binop -> GTHAN .

    LPAREN          reduce using rule 59 (binop -> GTHAN .)
    ID              reduce using rule 59 (binop -> GTHAN .)
    CTEF            reduce using rule 59 (binop -> GTHAN .)
    CTEI            reduce using rule 59 (binop -> GTHAN .)


state 106

    (60) binop -> LTHAN .

    LPAREN          reduce using rule 60 (binop -> LTHAN .)
    ID              reduce using rule 60 (binop -> LTHAN .)
    CTEF            reduce using rule 60 (binop -> LTHAN .)
    CTEI            reduce using rule 60 (binop -> LTHAN .)


state 107

    (68) returns -> RETURN expr . SEMICOLON

    SEMICOLON       shift and go to state 136


state 108

    (56) factor -> variable .

    TIMES           reduce using rule 56 (factor -> variable .)
    DIVIDE          reduce using rule 56 (factor -> variable .)
    PLUS            reduce using rule 56 (factor -> variable .)
    MINUS           reduce using rule 56 (factor -> variable .)
    SAME            reduce using rule 56 (factor -> variable .)
    NOTEQ           reduce using rule 56 (factor -> variable .)
    GTHAN           reduce using rule 56 (factor -> variable .)
    LTHAN           reduce using rule 56 (factor -> variable .)
    SEMICOLON       reduce using rule 56 (factor -> variable .)
    RPAREN          reduce using rule 56 (factor -> variable .)
    RETURN          reduce using rule 56 (factor -> variable .)
    ID              reduce using rule 56 (factor -> variable .)
    READ            reduce using rule 56 (factor -> variable .)
    WRITE           reduce using rule 56 (factor -> variable .)
    IF              reduce using rule 56 (factor -> variable .)
    WHILE           reduce using rule 56 (factor -> variable .)
    FROM            reduce using rule 56 (factor -> variable .)
    LPAREN          reduce using rule 56 (factor -> variable .)
    CTEF            reduce using rule 56 (factor -> variable .)
    CTEI            reduce using rule 56 (factor -> variable .)
    RBRACE          reduce using rule 56 (factor -> variable .)
    RBRACKET        reduce using rule 56 (factor -> variable .)
    COMMA           reduce using rule 56 (factor -> variable .)
    TO              reduce using rule 56 (factor -> variable .)
    DO              reduce using rule 56 (factor -> variable .)


state 109

    (65) var_cte -> ID .
    (76) variable -> ID . variable_op
    (77) variable_op -> . DOT ID
    (78) variable_op -> . LBRACKET expr RBRACKET matrix
    (79) variable_op -> . empty
    (98) empty -> .

  ! reduce/reduce conflict for TIMES resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for SAME resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for GTHAN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for LTHAN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for READ resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for WRITE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for FROM resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for CTEF resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for CTEI resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for TO resolved using rule 65 (var_cte -> ID .)
  ! reduce/reduce conflict for DO resolved using rule 65 (var_cte -> ID .)
    TIMES           reduce using rule 65 (var_cte -> ID .)
    DIVIDE          reduce using rule 65 (var_cte -> ID .)
    PLUS            reduce using rule 65 (var_cte -> ID .)
    MINUS           reduce using rule 65 (var_cte -> ID .)
    SAME            reduce using rule 65 (var_cte -> ID .)
    NOTEQ           reduce using rule 65 (var_cte -> ID .)
    GTHAN           reduce using rule 65 (var_cte -> ID .)
    LTHAN           reduce using rule 65 (var_cte -> ID .)
    SEMICOLON       reduce using rule 65 (var_cte -> ID .)
    RPAREN          reduce using rule 65 (var_cte -> ID .)
    RETURN          reduce using rule 65 (var_cte -> ID .)
    ID              reduce using rule 65 (var_cte -> ID .)
    READ            reduce using rule 65 (var_cte -> ID .)
    WRITE           reduce using rule 65 (var_cte -> ID .)
    IF              reduce using rule 65 (var_cte -> ID .)
    WHILE           reduce using rule 65 (var_cte -> ID .)
    FROM            reduce using rule 65 (var_cte -> ID .)
    LPAREN          reduce using rule 65 (var_cte -> ID .)
    CTEF            reduce using rule 65 (var_cte -> ID .)
    CTEI            reduce using rule 65 (var_cte -> ID .)
    RBRACE          reduce using rule 65 (var_cte -> ID .)
    RBRACKET        reduce using rule 65 (var_cte -> ID .)
    COMMA           reduce using rule 65 (var_cte -> ID .)
    TO              reduce using rule 65 (var_cte -> ID .)
    DO              reduce using rule 65 (var_cte -> ID .)
    DOT             shift and go to state 137
    LBRACKET        shift and go to state 113

  ! TIMES           [ reduce using rule 98 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 98 (empty -> .) ]
  ! PLUS            [ reduce using rule 98 (empty -> .) ]
  ! MINUS           [ reduce using rule 98 (empty -> .) ]
  ! SAME            [ reduce using rule 98 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 98 (empty -> .) ]
  ! GTHAN           [ reduce using rule 98 (empty -> .) ]
  ! LTHAN           [ reduce using rule 98 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 98 (empty -> .) ]
  ! RPAREN          [ reduce using rule 98 (empty -> .) ]
  ! RETURN          [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! READ            [ reduce using rule 98 (empty -> .) ]
  ! WRITE           [ reduce using rule 98 (empty -> .) ]
  ! IF              [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! FROM            [ reduce using rule 98 (empty -> .) ]
  ! LPAREN          [ reduce using rule 98 (empty -> .) ]
  ! CTEF            [ reduce using rule 98 (empty -> .) ]
  ! CTEI            [ reduce using rule 98 (empty -> .) ]
  ! RBRACE          [ reduce using rule 98 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 98 (empty -> .) ]
  ! COMMA           [ reduce using rule 98 (empty -> .) ]
  ! TO              [ reduce using rule 98 (empty -> .) ]
  ! DO              [ reduce using rule 98 (empty -> .) ]

    variable_op                    shift and go to state 112
    empty                          shift and go to state 114

state 110

    (69) llamada_void -> ID LPAREN . param_llamada RPAREN SEMICOLON
    (70) param_llamada -> . expr
    (71) param_llamada -> . empty
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (98) empty -> .
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    RPAREN          reduce using rule 98 (empty -> .)
    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    param_llamada                  shift and go to state 138
    expr                           shift and go to state 139
    empty                          shift and go to state 140
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 111

    (72) llamada_objeto -> ID DOT . ID LPAREN param_llamada RPAREN SEMICOLON
    (77) variable_op -> DOT . ID

    ID              shift and go to state 141


state 112

    (76) variable -> ID variable_op .

    EQUAL           reduce using rule 76 (variable -> ID variable_op .)
    TIMES           reduce using rule 76 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 76 (variable -> ID variable_op .)
    PLUS            reduce using rule 76 (variable -> ID variable_op .)
    MINUS           reduce using rule 76 (variable -> ID variable_op .)
    SAME            reduce using rule 76 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 76 (variable -> ID variable_op .)
    GTHAN           reduce using rule 76 (variable -> ID variable_op .)
    LTHAN           reduce using rule 76 (variable -> ID variable_op .)
    RETURN          reduce using rule 76 (variable -> ID variable_op .)
    ID              reduce using rule 76 (variable -> ID variable_op .)
    READ            reduce using rule 76 (variable -> ID variable_op .)
    WRITE           reduce using rule 76 (variable -> ID variable_op .)
    IF              reduce using rule 76 (variable -> ID variable_op .)
    WHILE           reduce using rule 76 (variable -> ID variable_op .)
    FROM            reduce using rule 76 (variable -> ID variable_op .)
    LPAREN          reduce using rule 76 (variable -> ID variable_op .)
    CTEF            reduce using rule 76 (variable -> ID variable_op .)
    CTEI            reduce using rule 76 (variable -> ID variable_op .)
    RBRACE          reduce using rule 76 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 76 (variable -> ID variable_op .)
    RPAREN          reduce using rule 76 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 76 (variable -> ID variable_op .)
    COMMA           reduce using rule 76 (variable -> ID variable_op .)
    TO              reduce using rule 76 (variable -> ID variable_op .)
    DO              reduce using rule 76 (variable -> ID variable_op .)


state 113

    (78) variable_op -> LBRACKET . expr RBRACKET matrix
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 142
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 114

    (79) variable_op -> empty .

    EQUAL           reduce using rule 79 (variable_op -> empty .)
    TIMES           reduce using rule 79 (variable_op -> empty .)
    DIVIDE          reduce using rule 79 (variable_op -> empty .)
    PLUS            reduce using rule 79 (variable_op -> empty .)
    MINUS           reduce using rule 79 (variable_op -> empty .)
    SAME            reduce using rule 79 (variable_op -> empty .)
    NOTEQ           reduce using rule 79 (variable_op -> empty .)
    GTHAN           reduce using rule 79 (variable_op -> empty .)
    LTHAN           reduce using rule 79 (variable_op -> empty .)
    RETURN          reduce using rule 79 (variable_op -> empty .)
    ID              reduce using rule 79 (variable_op -> empty .)
    READ            reduce using rule 79 (variable_op -> empty .)
    WRITE           reduce using rule 79 (variable_op -> empty .)
    IF              reduce using rule 79 (variable_op -> empty .)
    WHILE           reduce using rule 79 (variable_op -> empty .)
    FROM            reduce using rule 79 (variable_op -> empty .)
    LPAREN          reduce using rule 79 (variable_op -> empty .)
    CTEF            reduce using rule 79 (variable_op -> empty .)
    CTEI            reduce using rule 79 (variable_op -> empty .)
    RBRACE          reduce using rule 79 (variable_op -> empty .)
    SEMICOLON       reduce using rule 79 (variable_op -> empty .)
    RPAREN          reduce using rule 79 (variable_op -> empty .)
    RBRACKET        reduce using rule 79 (variable_op -> empty .)
    COMMA           reduce using rule 79 (variable_op -> empty .)
    TO              reduce using rule 79 (variable_op -> empty .)
    DO              reduce using rule 79 (variable_op -> empty .)


state 115

    (54) factor -> LPAREN expr . RPAREN

    RPAREN          shift and go to state 143


state 116

    (73) lectura -> READ LPAREN . variable op_lectura RPAREN SEMICOLON
    (76) variable -> . ID variable_op

    ID              shift and go to state 145

    variable                       shift and go to state 144

state 117

    (82) escritura -> WRITE LPAREN . type_escritura op_escritura RPAREN SEMICOLON
    (83) type_escritura -> . CTESTRING
    (84) type_escritura -> . expr
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    CTESTRING       shift and go to state 147
    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    type_escritura                 shift and go to state 146
    expr                           shift and go to state 148
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 118

    (88) decision -> IF LPAREN . expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 149
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 119

    (48) expresion -> termino op_expresion .

    SAME            reduce using rule 48 (expresion -> termino op_expresion .)
    NOTEQ           reduce using rule 48 (expresion -> termino op_expresion .)
    GTHAN           reduce using rule 48 (expresion -> termino op_expresion .)
    LTHAN           reduce using rule 48 (expresion -> termino op_expresion .)
    RETURN          reduce using rule 48 (expresion -> termino op_expresion .)
    ID              reduce using rule 48 (expresion -> termino op_expresion .)
    READ            reduce using rule 48 (expresion -> termino op_expresion .)
    WRITE           reduce using rule 48 (expresion -> termino op_expresion .)
    IF              reduce using rule 48 (expresion -> termino op_expresion .)
    WHILE           reduce using rule 48 (expresion -> termino op_expresion .)
    FROM            reduce using rule 48 (expresion -> termino op_expresion .)
    LPAREN          reduce using rule 48 (expresion -> termino op_expresion .)
    CTEF            reduce using rule 48 (expresion -> termino op_expresion .)
    CTEI            reduce using rule 48 (expresion -> termino op_expresion .)
    RBRACE          reduce using rule 48 (expresion -> termino op_expresion .)
    SEMICOLON       reduce using rule 48 (expresion -> termino op_expresion .)
    RPAREN          reduce using rule 48 (expresion -> termino op_expresion .)
    RBRACKET        reduce using rule 48 (expresion -> termino op_expresion .)
    COMMA           reduce using rule 48 (expresion -> termino op_expresion .)
    TO              reduce using rule 48 (expresion -> termino op_expresion .)
    DO              reduce using rule 48 (expresion -> termino op_expresion .)


state 120

    (49) op_expresion -> plus_minus . expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expresion                      shift and go to state 150
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 121

    (50) op_expresion -> empty .

    SAME            reduce using rule 50 (op_expresion -> empty .)
    NOTEQ           reduce using rule 50 (op_expresion -> empty .)
    GTHAN           reduce using rule 50 (op_expresion -> empty .)
    LTHAN           reduce using rule 50 (op_expresion -> empty .)
    RETURN          reduce using rule 50 (op_expresion -> empty .)
    ID              reduce using rule 50 (op_expresion -> empty .)
    READ            reduce using rule 50 (op_expresion -> empty .)
    WRITE           reduce using rule 50 (op_expresion -> empty .)
    IF              reduce using rule 50 (op_expresion -> empty .)
    WHILE           reduce using rule 50 (op_expresion -> empty .)
    FROM            reduce using rule 50 (op_expresion -> empty .)
    LPAREN          reduce using rule 50 (op_expresion -> empty .)
    CTEF            reduce using rule 50 (op_expresion -> empty .)
    CTEI            reduce using rule 50 (op_expresion -> empty .)
    RBRACE          reduce using rule 50 (op_expresion -> empty .)
    SEMICOLON       reduce using rule 50 (op_expresion -> empty .)
    RPAREN          reduce using rule 50 (op_expresion -> empty .)
    RBRACKET        reduce using rule 50 (op_expresion -> empty .)
    COMMA           reduce using rule 50 (op_expresion -> empty .)
    TO              reduce using rule 50 (op_expresion -> empty .)
    DO              reduce using rule 50 (op_expresion -> empty .)


state 122

    (63) plus_minus -> PLUS .

    LPAREN          reduce using rule 63 (plus_minus -> PLUS .)
    ID              reduce using rule 63 (plus_minus -> PLUS .)
    CTEF            reduce using rule 63 (plus_minus -> PLUS .)
    CTEI            reduce using rule 63 (plus_minus -> PLUS .)


state 123

    (64) plus_minus -> MINUS .

    LPAREN          reduce using rule 64 (plus_minus -> MINUS .)
    ID              reduce using rule 64 (plus_minus -> MINUS .)
    CTEF            reduce using rule 64 (plus_minus -> MINUS .)
    CTEI            reduce using rule 64 (plus_minus -> MINUS .)


state 124

    (93) condicional -> WHILE LPAREN . expr RPAREN DO LBRACE estatutos RBRACE
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 151
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 125

    (94) no_condicional -> FROM type_no_condicional . EQUAL expr TO expr DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 152


state 126

    (95) type_no_condicional -> ID .
    (96) type_no_condicional -> ID . LBRACKET expr RBRACKET
    (97) type_no_condicional -> ID . LBRACKET expr RBRACKET LBRACKET expr RBRACKET

    EQUAL           reduce using rule 95 (type_no_condicional -> ID .)
    LBRACKET        shift and go to state 153


state 127

    (51) termino -> factor op_factor .

    PLUS            reduce using rule 51 (termino -> factor op_factor .)
    MINUS           reduce using rule 51 (termino -> factor op_factor .)
    SAME            reduce using rule 51 (termino -> factor op_factor .)
    NOTEQ           reduce using rule 51 (termino -> factor op_factor .)
    GTHAN           reduce using rule 51 (termino -> factor op_factor .)
    LTHAN           reduce using rule 51 (termino -> factor op_factor .)
    RETURN          reduce using rule 51 (termino -> factor op_factor .)
    ID              reduce using rule 51 (termino -> factor op_factor .)
    READ            reduce using rule 51 (termino -> factor op_factor .)
    WRITE           reduce using rule 51 (termino -> factor op_factor .)
    IF              reduce using rule 51 (termino -> factor op_factor .)
    WHILE           reduce using rule 51 (termino -> factor op_factor .)
    FROM            reduce using rule 51 (termino -> factor op_factor .)
    LPAREN          reduce using rule 51 (termino -> factor op_factor .)
    CTEF            reduce using rule 51 (termino -> factor op_factor .)
    CTEI            reduce using rule 51 (termino -> factor op_factor .)
    RBRACE          reduce using rule 51 (termino -> factor op_factor .)
    SEMICOLON       reduce using rule 51 (termino -> factor op_factor .)
    RPAREN          reduce using rule 51 (termino -> factor op_factor .)
    RBRACKET        reduce using rule 51 (termino -> factor op_factor .)
    COMMA           reduce using rule 51 (termino -> factor op_factor .)
    TO              reduce using rule 51 (termino -> factor op_factor .)
    DO              reduce using rule 51 (termino -> factor op_factor .)


state 128

    (52) op_factor -> mulop . factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    factor                         shift and go to state 154
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 129

    (53) op_factor -> empty .

    PLUS            reduce using rule 53 (op_factor -> empty .)
    MINUS           reduce using rule 53 (op_factor -> empty .)
    SAME            reduce using rule 53 (op_factor -> empty .)
    NOTEQ           reduce using rule 53 (op_factor -> empty .)
    GTHAN           reduce using rule 53 (op_factor -> empty .)
    LTHAN           reduce using rule 53 (op_factor -> empty .)
    RETURN          reduce using rule 53 (op_factor -> empty .)
    ID              reduce using rule 53 (op_factor -> empty .)
    READ            reduce using rule 53 (op_factor -> empty .)
    WRITE           reduce using rule 53 (op_factor -> empty .)
    IF              reduce using rule 53 (op_factor -> empty .)
    WHILE           reduce using rule 53 (op_factor -> empty .)
    FROM            reduce using rule 53 (op_factor -> empty .)
    LPAREN          reduce using rule 53 (op_factor -> empty .)
    CTEF            reduce using rule 53 (op_factor -> empty .)
    CTEI            reduce using rule 53 (op_factor -> empty .)
    RBRACE          reduce using rule 53 (op_factor -> empty .)
    SEMICOLON       reduce using rule 53 (op_factor -> empty .)
    RPAREN          reduce using rule 53 (op_factor -> empty .)
    RBRACKET        reduce using rule 53 (op_factor -> empty .)
    COMMA           reduce using rule 53 (op_factor -> empty .)
    TO              reduce using rule 53 (op_factor -> empty .)
    DO              reduce using rule 53 (op_factor -> empty .)


state 130

    (61) mulop -> TIMES .

    LPAREN          reduce using rule 61 (mulop -> TIMES .)
    ID              reduce using rule 61 (mulop -> TIMES .)
    CTEF            reduce using rule 61 (mulop -> TIMES .)
    CTEI            reduce using rule 61 (mulop -> TIMES .)


state 131

    (62) mulop -> DIVIDE .

    LPAREN          reduce using rule 62 (mulop -> DIVIDE .)
    ID              reduce using rule 62 (mulop -> DIVIDE .)
    CTEF            reduce using rule 62 (mulop -> DIVIDE .)
    CTEI            reduce using rule 62 (mulop -> DIVIDE .)


state 132

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 155


state 133

    (18) params_op -> COMMA params .

    RPAREN          reduce using rule 18 (params_op -> COMMA params .)


state 134

    (45) asignacion -> variable EQUAL expr . SEMICOLON

    SEMICOLON       shift and go to state 156


state 135

    (47) expr -> expresion binop expresion .

    RETURN          reduce using rule 47 (expr -> expresion binop expresion .)
    ID              reduce using rule 47 (expr -> expresion binop expresion .)
    READ            reduce using rule 47 (expr -> expresion binop expresion .)
    WRITE           reduce using rule 47 (expr -> expresion binop expresion .)
    IF              reduce using rule 47 (expr -> expresion binop expresion .)
    WHILE           reduce using rule 47 (expr -> expresion binop expresion .)
    FROM            reduce using rule 47 (expr -> expresion binop expresion .)
    LPAREN          reduce using rule 47 (expr -> expresion binop expresion .)
    CTEF            reduce using rule 47 (expr -> expresion binop expresion .)
    CTEI            reduce using rule 47 (expr -> expresion binop expresion .)
    RBRACE          reduce using rule 47 (expr -> expresion binop expresion .)
    SEMICOLON       reduce using rule 47 (expr -> expresion binop expresion .)
    RPAREN          reduce using rule 47 (expr -> expresion binop expresion .)
    RBRACKET        reduce using rule 47 (expr -> expresion binop expresion .)
    COMMA           reduce using rule 47 (expr -> expresion binop expresion .)
    TO              reduce using rule 47 (expr -> expresion binop expresion .)
    DO              reduce using rule 47 (expr -> expresion binop expresion .)


state 136

    (68) returns -> RETURN expr SEMICOLON .

    RETURN          reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    ID              reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    READ            reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    WRITE           reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    IF              reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    FROM            reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    CTEF            reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    CTEI            reduce using rule 68 (returns -> RETURN expr SEMICOLON .)
    RBRACE          reduce using rule 68 (returns -> RETURN expr SEMICOLON .)


state 137

    (77) variable_op -> DOT . ID

    ID              shift and go to state 157


state 138

    (69) llamada_void -> ID LPAREN param_llamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 158


state 139

    (70) param_llamada -> expr .

    RPAREN          reduce using rule 70 (param_llamada -> expr .)


state 140

    (71) param_llamada -> empty .

    RPAREN          reduce using rule 71 (param_llamada -> empty .)


state 141

    (72) llamada_objeto -> ID DOT ID . LPAREN param_llamada RPAREN SEMICOLON
    (77) variable_op -> DOT ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 159
    EQUAL           reduce using rule 77 (variable_op -> DOT ID .)
    TIMES           reduce using rule 77 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 77 (variable_op -> DOT ID .)
    PLUS            reduce using rule 77 (variable_op -> DOT ID .)
    MINUS           reduce using rule 77 (variable_op -> DOT ID .)
    SAME            reduce using rule 77 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 77 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 77 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 77 (variable_op -> DOT ID .)
    RETURN          reduce using rule 77 (variable_op -> DOT ID .)
    ID              reduce using rule 77 (variable_op -> DOT ID .)
    READ            reduce using rule 77 (variable_op -> DOT ID .)
    WRITE           reduce using rule 77 (variable_op -> DOT ID .)
    IF              reduce using rule 77 (variable_op -> DOT ID .)
    WHILE           reduce using rule 77 (variable_op -> DOT ID .)
    FROM            reduce using rule 77 (variable_op -> DOT ID .)
    CTEF            reduce using rule 77 (variable_op -> DOT ID .)
    CTEI            reduce using rule 77 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 77 (variable_op -> DOT ID .)

  ! LPAREN          [ reduce using rule 77 (variable_op -> DOT ID .) ]


state 142

    (78) variable_op -> LBRACKET expr . RBRACKET matrix

    RBRACKET        shift and go to state 160


state 143

    (54) factor -> LPAREN expr RPAREN .

    TIMES           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    SAME            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    NOTEQ           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    GTHAN           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    LTHAN           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    ID              reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    READ            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    WRITE           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    IF              reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    FROM            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    CTEF            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    CTEI            reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    TO              reduce using rule 54 (factor -> LPAREN expr RPAREN .)
    DO              reduce using rule 54 (factor -> LPAREN expr RPAREN .)


state 144

    (73) lectura -> READ LPAREN variable . op_lectura RPAREN SEMICOLON
    (74) op_lectura -> . COMMA variable op_lectura
    (75) op_lectura -> . empty
    (98) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 98 (empty -> .)

    op_lectura                     shift and go to state 161
    empty                          shift and go to state 163

state 145

    (76) variable -> ID . variable_op
    (77) variable_op -> . DOT ID
    (78) variable_op -> . LBRACKET expr RBRACKET matrix
    (79) variable_op -> . empty
    (98) empty -> .

    DOT             shift and go to state 137
    LBRACKET        shift and go to state 113
    COMMA           reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)

    variable_op                    shift and go to state 112
    empty                          shift and go to state 114

state 146

    (82) escritura -> WRITE LPAREN type_escritura . op_escritura RPAREN SEMICOLON
    (85) op_escritura -> . COMMA CTESTRING op_escritura
    (86) op_escritura -> . COMMA expr op_escritura
    (87) op_escritura -> . empty
    (98) empty -> .

    COMMA           shift and go to state 165
    RPAREN          reduce using rule 98 (empty -> .)

    op_escritura                   shift and go to state 164
    empty                          shift and go to state 166

state 147

    (83) type_escritura -> CTESTRING .

    COMMA           reduce using rule 83 (type_escritura -> CTESTRING .)
    RPAREN          reduce using rule 83 (type_escritura -> CTESTRING .)


state 148

    (84) type_escritura -> expr .

    COMMA           reduce using rule 84 (type_escritura -> expr .)
    RPAREN          reduce using rule 84 (type_escritura -> expr .)


state 149

    (88) decision -> IF LPAREN expr . RPAREN THEN LBRACE estatutos RBRACE op_decision

    RPAREN          shift and go to state 167


state 150

    (49) op_expresion -> plus_minus expresion .

    SAME            reduce using rule 49 (op_expresion -> plus_minus expresion .)
    NOTEQ           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    GTHAN           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    LTHAN           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    RETURN          reduce using rule 49 (op_expresion -> plus_minus expresion .)
    ID              reduce using rule 49 (op_expresion -> plus_minus expresion .)
    READ            reduce using rule 49 (op_expresion -> plus_minus expresion .)
    WRITE           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    IF              reduce using rule 49 (op_expresion -> plus_minus expresion .)
    WHILE           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    FROM            reduce using rule 49 (op_expresion -> plus_minus expresion .)
    LPAREN          reduce using rule 49 (op_expresion -> plus_minus expresion .)
    CTEF            reduce using rule 49 (op_expresion -> plus_minus expresion .)
    CTEI            reduce using rule 49 (op_expresion -> plus_minus expresion .)
    RBRACE          reduce using rule 49 (op_expresion -> plus_minus expresion .)
    SEMICOLON       reduce using rule 49 (op_expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 49 (op_expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 49 (op_expresion -> plus_minus expresion .)
    COMMA           reduce using rule 49 (op_expresion -> plus_minus expresion .)
    TO              reduce using rule 49 (op_expresion -> plus_minus expresion .)
    DO              reduce using rule 49 (op_expresion -> plus_minus expresion .)


state 151

    (93) condicional -> WHILE LPAREN expr . RPAREN DO LBRACE estatutos RBRACE

    RPAREN          shift and go to state 168


state 152

    (94) no_condicional -> FROM type_no_condicional EQUAL . expr TO expr DO LBRACE estatutos RBRACE
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 169
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 153

    (96) type_no_condicional -> ID LBRACKET . expr RBRACKET
    (97) type_no_condicional -> ID LBRACKET . expr RBRACKET LBRACKET expr RBRACKET
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 170
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 154

    (52) op_factor -> mulop factor .

    PLUS            reduce using rule 52 (op_factor -> mulop factor .)
    MINUS           reduce using rule 52 (op_factor -> mulop factor .)
    SAME            reduce using rule 52 (op_factor -> mulop factor .)
    NOTEQ           reduce using rule 52 (op_factor -> mulop factor .)
    GTHAN           reduce using rule 52 (op_factor -> mulop factor .)
    LTHAN           reduce using rule 52 (op_factor -> mulop factor .)
    RETURN          reduce using rule 52 (op_factor -> mulop factor .)
    ID              reduce using rule 52 (op_factor -> mulop factor .)
    READ            reduce using rule 52 (op_factor -> mulop factor .)
    WRITE           reduce using rule 52 (op_factor -> mulop factor .)
    IF              reduce using rule 52 (op_factor -> mulop factor .)
    WHILE           reduce using rule 52 (op_factor -> mulop factor .)
    FROM            reduce using rule 52 (op_factor -> mulop factor .)
    LPAREN          reduce using rule 52 (op_factor -> mulop factor .)
    CTEF            reduce using rule 52 (op_factor -> mulop factor .)
    CTEI            reduce using rule 52 (op_factor -> mulop factor .)
    RBRACE          reduce using rule 52 (op_factor -> mulop factor .)
    SEMICOLON       reduce using rule 52 (op_factor -> mulop factor .)
    RPAREN          reduce using rule 52 (op_factor -> mulop factor .)
    RBRACKET        reduce using rule 52 (op_factor -> mulop factor .)
    COMMA           reduce using rule 52 (op_factor -> mulop factor .)
    TO              reduce using rule 52 (op_factor -> mulop factor .)
    DO              reduce using rule 52 (op_factor -> mulop factor .)


state 155

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 27 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 156

    (45) asignacion -> variable EQUAL expr SEMICOLON .

    RETURN          reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    ID              reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    READ            reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    WRITE           reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    IF              reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    WHILE           reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    FROM            reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    LPAREN          reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    CTEF            reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    CTEI            reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)
    RBRACE          reduce using rule 45 (asignacion -> variable EQUAL expr SEMICOLON .)


state 157

    (77) variable_op -> DOT ID .

    TIMES           reduce using rule 77 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 77 (variable_op -> DOT ID .)
    PLUS            reduce using rule 77 (variable_op -> DOT ID .)
    MINUS           reduce using rule 77 (variable_op -> DOT ID .)
    SAME            reduce using rule 77 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 77 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 77 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 77 (variable_op -> DOT ID .)
    SEMICOLON       reduce using rule 77 (variable_op -> DOT ID .)
    RPAREN          reduce using rule 77 (variable_op -> DOT ID .)
    RETURN          reduce using rule 77 (variable_op -> DOT ID .)
    ID              reduce using rule 77 (variable_op -> DOT ID .)
    READ            reduce using rule 77 (variable_op -> DOT ID .)
    WRITE           reduce using rule 77 (variable_op -> DOT ID .)
    IF              reduce using rule 77 (variable_op -> DOT ID .)
    WHILE           reduce using rule 77 (variable_op -> DOT ID .)
    FROM            reduce using rule 77 (variable_op -> DOT ID .)
    LPAREN          reduce using rule 77 (variable_op -> DOT ID .)
    CTEF            reduce using rule 77 (variable_op -> DOT ID .)
    CTEI            reduce using rule 77 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 77 (variable_op -> DOT ID .)
    RBRACKET        reduce using rule 77 (variable_op -> DOT ID .)
    COMMA           reduce using rule 77 (variable_op -> DOT ID .)
    TO              reduce using rule 77 (variable_op -> DOT ID .)
    DO              reduce using rule 77 (variable_op -> DOT ID .)


state 158

    (69) llamada_void -> ID LPAREN param_llamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 171


state 159

    (72) llamada_objeto -> ID DOT ID LPAREN . param_llamada RPAREN SEMICOLON
    (70) param_llamada -> . expr
    (71) param_llamada -> . empty
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (98) empty -> .
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    RPAREN          reduce using rule 98 (empty -> .)
    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    param_llamada                  shift and go to state 172
    expr                           shift and go to state 139
    empty                          shift and go to state 140
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 160

    (78) variable_op -> LBRACKET expr RBRACKET . matrix
    (80) matrix -> . LBRACKET expr RBRACKET matrix
    (81) matrix -> . empty
    (98) empty -> .

    LBRACKET        shift and go to state 173
    EQUAL           reduce using rule 98 (empty -> .)
    TIMES           reduce using rule 98 (empty -> .)
    DIVIDE          reduce using rule 98 (empty -> .)
    PLUS            reduce using rule 98 (empty -> .)
    MINUS           reduce using rule 98 (empty -> .)
    SAME            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    GTHAN           reduce using rule 98 (empty -> .)
    LTHAN           reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)
    SEMICOLON       reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    RBRACKET        reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    TO              reduce using rule 98 (empty -> .)
    DO              reduce using rule 98 (empty -> .)

    matrix                         shift and go to state 174
    empty                          shift and go to state 175

state 161

    (73) lectura -> READ LPAREN variable op_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 176


state 162

    (74) op_lectura -> COMMA . variable op_lectura
    (76) variable -> . ID variable_op

    ID              shift and go to state 145

    variable                       shift and go to state 177

state 163

    (75) op_lectura -> empty .

    RPAREN          reduce using rule 75 (op_lectura -> empty .)


state 164

    (82) escritura -> WRITE LPAREN type_escritura op_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 178


state 165

    (85) op_escritura -> COMMA . CTESTRING op_escritura
    (86) op_escritura -> COMMA . expr op_escritura
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    CTESTRING       shift and go to state 179
    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 180
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 166

    (87) op_escritura -> empty .

    RPAREN          reduce using rule 87 (op_escritura -> empty .)


state 167

    (88) decision -> IF LPAREN expr RPAREN . THEN LBRACE estatutos RBRACE op_decision

    THEN            shift and go to state 181


state 168

    (93) condicional -> WHILE LPAREN expr RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 182


state 169

    (94) no_condicional -> FROM type_no_condicional EQUAL expr . TO expr DO LBRACE estatutos RBRACE

    TO              shift and go to state 183


state 170

    (96) type_no_condicional -> ID LBRACKET expr . RBRACKET
    (97) type_no_condicional -> ID LBRACKET expr . RBRACKET LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 184


state 171

    (69) llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .

    RETURN          reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    ID              reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    READ            reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    WRITE           reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    IF              reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    FROM            reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    LPAREN          reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    CTEF            reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    CTEI            reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON .)


state 172

    (72) llamada_objeto -> ID DOT ID LPAREN param_llamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 173

    (80) matrix -> LBRACKET . expr RBRACKET matrix
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 186
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 174

    (78) variable_op -> LBRACKET expr RBRACKET matrix .

    EQUAL           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    TIMES           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    DIVIDE          reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    PLUS            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    MINUS           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    SAME            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    NOTEQ           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    GTHAN           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    LTHAN           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    RETURN          reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    ID              reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    READ            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    WRITE           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    IF              reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    WHILE           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    FROM            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    LPAREN          reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    CTEF            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    CTEI            reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    RBRACE          reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    SEMICOLON       reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    RPAREN          reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    RBRACKET        reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    COMMA           reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    TO              reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)
    DO              reduce using rule 78 (variable_op -> LBRACKET expr RBRACKET matrix .)


state 175

    (81) matrix -> empty .

    EQUAL           reduce using rule 81 (matrix -> empty .)
    TIMES           reduce using rule 81 (matrix -> empty .)
    DIVIDE          reduce using rule 81 (matrix -> empty .)
    PLUS            reduce using rule 81 (matrix -> empty .)
    MINUS           reduce using rule 81 (matrix -> empty .)
    SAME            reduce using rule 81 (matrix -> empty .)
    NOTEQ           reduce using rule 81 (matrix -> empty .)
    GTHAN           reduce using rule 81 (matrix -> empty .)
    LTHAN           reduce using rule 81 (matrix -> empty .)
    RETURN          reduce using rule 81 (matrix -> empty .)
    ID              reduce using rule 81 (matrix -> empty .)
    READ            reduce using rule 81 (matrix -> empty .)
    WRITE           reduce using rule 81 (matrix -> empty .)
    IF              reduce using rule 81 (matrix -> empty .)
    WHILE           reduce using rule 81 (matrix -> empty .)
    FROM            reduce using rule 81 (matrix -> empty .)
    LPAREN          reduce using rule 81 (matrix -> empty .)
    CTEF            reduce using rule 81 (matrix -> empty .)
    CTEI            reduce using rule 81 (matrix -> empty .)
    RBRACE          reduce using rule 81 (matrix -> empty .)
    SEMICOLON       reduce using rule 81 (matrix -> empty .)
    RPAREN          reduce using rule 81 (matrix -> empty .)
    RBRACKET        reduce using rule 81 (matrix -> empty .)
    COMMA           reduce using rule 81 (matrix -> empty .)
    TO              reduce using rule 81 (matrix -> empty .)
    DO              reduce using rule 81 (matrix -> empty .)


state 176

    (73) lectura -> READ LPAREN variable op_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 187


state 177

    (74) op_lectura -> COMMA variable . op_lectura
    (74) op_lectura -> . COMMA variable op_lectura
    (75) op_lectura -> . empty
    (98) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 98 (empty -> .)

    op_lectura                     shift and go to state 188
    empty                          shift and go to state 163

state 178

    (82) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 179

    (85) op_escritura -> COMMA CTESTRING . op_escritura
    (85) op_escritura -> . COMMA CTESTRING op_escritura
    (86) op_escritura -> . COMMA expr op_escritura
    (87) op_escritura -> . empty
    (98) empty -> .

    COMMA           shift and go to state 165
    RPAREN          reduce using rule 98 (empty -> .)

    op_escritura                   shift and go to state 190
    empty                          shift and go to state 166

state 180

    (86) op_escritura -> COMMA expr . op_escritura
    (85) op_escritura -> . COMMA CTESTRING op_escritura
    (86) op_escritura -> . COMMA expr op_escritura
    (87) op_escritura -> . empty
    (98) empty -> .

    COMMA           shift and go to state 165
    RPAREN          reduce using rule 98 (empty -> .)

    op_escritura                   shift and go to state 191
    empty                          shift and go to state 166

state 181

    (88) decision -> IF LPAREN expr RPAREN THEN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 192


state 182

    (93) condicional -> WHILE LPAREN expr RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 193


state 183

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO . expr DO LBRACE estatutos RBRACE
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 194
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 184

    (96) type_no_condicional -> ID LBRACKET expr RBRACKET .
    (97) type_no_condicional -> ID LBRACKET expr RBRACKET . LBRACKET expr RBRACKET

    EQUAL           reduce using rule 96 (type_no_condicional -> ID LBRACKET expr RBRACKET .)
    LBRACKET        shift and go to state 195


state 185

    (72) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 196


state 186

    (80) matrix -> LBRACKET expr . RBRACKET matrix

    RBRACKET        shift and go to state 197


state 187

    (73) lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .

    RETURN          reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    ID              reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FROM            reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    LPAREN          reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEF            reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEI            reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)


state 188

    (74) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 74 (op_lectura -> COMMA variable op_lectura .)


state 189

    (82) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .

    RETURN          reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    ID              reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FROM            reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    LPAREN          reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEF            reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEI            reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)


state 190

    (85) op_escritura -> COMMA CTESTRING op_escritura .

    RPAREN          reduce using rule 85 (op_escritura -> COMMA CTESTRING op_escritura .)


state 191

    (86) op_escritura -> COMMA expr op_escritura .

    RPAREN          reduce using rule 86 (op_escritura -> COMMA expr op_escritura .)


state 192

    (88) decision -> IF LPAREN expr RPAREN THEN LBRACE . estatutos RBRACE op_decision
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

    RBRACE          reduce using rule 98 (empty -> .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 67
    estatutos                      shift and go to state 198
    estatuto                       shift and go to state 64
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 193

    (93) condicional -> WHILE LPAREN expr RPAREN DO LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

    RBRACE          reduce using rule 98 (empty -> .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 67
    estatutos                      shift and go to state 199
    estatuto                       shift and go to state 64
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 194

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO expr . DO LBRACE estatutos RBRACE

    DO              shift and go to state 200


state 195

    (97) type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET . expr RBRACKET
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (48) expresion -> . termino op_expresion
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI
    (76) variable -> . ID variable_op

    LPAREN          shift and go to state 79
    ID              shift and go to state 109
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 201
    expresion                      shift and go to state 76
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89
    variable                       shift and go to state 108

state 196

    (72) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .

    RETURN          reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    ID              reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    READ            reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    WRITE           reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    IF              reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    FROM            reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    LPAREN          reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    CTEF            reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    CTEI            reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON .)


state 197

    (80) matrix -> LBRACKET expr RBRACKET . matrix
    (80) matrix -> . LBRACKET expr RBRACKET matrix
    (81) matrix -> . empty
    (98) empty -> .

    LBRACKET        shift and go to state 173
    EQUAL           reduce using rule 98 (empty -> .)
    TIMES           reduce using rule 98 (empty -> .)
    DIVIDE          reduce using rule 98 (empty -> .)
    PLUS            reduce using rule 98 (empty -> .)
    MINUS           reduce using rule 98 (empty -> .)
    SAME            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    GTHAN           reduce using rule 98 (empty -> .)
    LTHAN           reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)
    SEMICOLON       reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    RBRACKET        reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    TO              reduce using rule 98 (empty -> .)
    DO              reduce using rule 98 (empty -> .)

    matrix                         shift and go to state 202
    empty                          shift and go to state 175

state 198

    (88) decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 203


state 199

    (93) condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 204


state 200

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 205


state 201

    (97) type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET expr . RBRACKET

    RBRACKET        shift and go to state 206


state 202

    (80) matrix -> LBRACKET expr RBRACKET matrix .

    EQUAL           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    TIMES           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    DIVIDE          reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    PLUS            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    MINUS           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    SAME            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    NOTEQ           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    GTHAN           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    LTHAN           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    RETURN          reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    ID              reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    READ            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    WRITE           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    IF              reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    WHILE           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    FROM            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    LPAREN          reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    CTEF            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    CTEI            reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    RBRACE          reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    SEMICOLON       reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    RPAREN          reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    RBRACKET        reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    COMMA           reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    TO              reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)
    DO              reduce using rule 80 (matrix -> LBRACKET expr RBRACKET matrix .)


state 203

    (88) decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE . op_decision
    (89) op_decision -> . ELSE LBRACE estatutos RBRACE
    (90) op_decision -> . empty
    (98) empty -> .

    ELSE            shift and go to state 208
    RETURN          reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    WRITE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    FROM            reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTEF            reduce using rule 98 (empty -> .)
    CTEI            reduce using rule 98 (empty -> .)
    RBRACE          reduce using rule 98 (empty -> .)

    op_decision                    shift and go to state 207
    empty                          shift and go to state 209

state 204

    (93) condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .

    RETURN          reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    LPAREN          reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 93 (condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE .)


state 205

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

    RBRACE          reduce using rule 98 (empty -> .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    expr                           shift and go to state 67
    estatutos                      shift and go to state 210
    estatuto                       shift and go to state 64
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 206

    (97) type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET .

    EQUAL           reduce using rule 97 (type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET .)


state 207

    (88) decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .

    RETURN          reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    ID              reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    READ            reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WRITE           reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    IF              reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WHILE           reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FROM            reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    LPAREN          reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEF            reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEI            reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RBRACE          reduce using rule 88 (decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision .)


state 208

    (89) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 211


state 209

    (90) op_decision -> empty .

    RETURN          reduce using rule 90 (op_decision -> empty .)
    ID              reduce using rule 90 (op_decision -> empty .)
    READ            reduce using rule 90 (op_decision -> empty .)
    WRITE           reduce using rule 90 (op_decision -> empty .)
    IF              reduce using rule 90 (op_decision -> empty .)
    WHILE           reduce using rule 90 (op_decision -> empty .)
    FROM            reduce using rule 90 (op_decision -> empty .)
    LPAREN          reduce using rule 90 (op_decision -> empty .)
    CTEF            reduce using rule 90 (op_decision -> empty .)
    CTEI            reduce using rule 90 (op_decision -> empty .)
    RBRACE          reduce using rule 90 (op_decision -> empty .)


state 210

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 212


state 211

    (89) op_decision -> ELSE LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expr
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_void
    (40) estatuto -> . llamada_objeto
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (98) empty -> .
    (45) asignacion -> . variable EQUAL expr SEMICOLON
    (46) expr -> . expresion
    (47) expr -> . expresion binop expresion
    (68) returns -> . RETURN expr SEMICOLON
    (69) llamada_void -> . ID LPAREN param_llamada RPAREN SEMICOLON
    (72) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN SEMICOLON
    (73) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (82) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (88) decision -> . IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision
    (91) repeticion -> . condicional
    (92) repeticion -> . no_condicional
    (76) variable -> . ID variable_op
    (48) expresion -> . termino op_expresion
    (93) condicional -> . WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE
    (94) no_condicional -> . FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE
    (51) termino -> . factor op_factor
    (54) factor -> . LPAREN expr RPAREN
    (55) factor -> . var_cte
    (56) factor -> . variable
    (65) var_cte -> . ID
    (66) var_cte -> . CTEF
    (67) var_cte -> . CTEI

    RBRACE          reduce using rule 98 (empty -> .)
    RETURN          shift and go to state 77
    ID              shift and go to state 78
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 79
    CTEF            shift and go to state 90
    CTEI            shift and go to state 91

    estatutos                      shift and go to state 213
    estatuto                       shift and go to state 64
    empty                          shift and go to state 65
    asignacion                     shift and go to state 66
    expr                           shift and go to state 67
    returns                        shift and go to state 68
    llamada_void                   shift and go to state 69
    llamada_objeto                 shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    decision                       shift and go to state 73
    repeticion                     shift and go to state 74
    variable                       shift and go to state 75
    expresion                      shift and go to state 76
    condicional                    shift and go to state 83
    no_condicional                 shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 88
    var_cte                        shift and go to state 89

state 212

    (94) no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .

    RETURN          reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    LPAREN          reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 94 (no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE .)


state 213

    (89) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 214


state 214

    (89) op_decision -> ELSE LBRACE estatutos RBRACE .

    RETURN          reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    ID              reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    READ            reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    IF              reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FROM            reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    LPAREN          reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 89 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 64 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 78 resolved using rule (var_cte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 109 resolved using rule (var_cte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 109
