Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    FALSE
    TRUE
    VAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaraciones main
Rule 2     declaraciones -> empty
Rule 3     declaraciones -> var_def SEMICOLON declaraciones
Rule 4     declaraciones -> funcion_def declaraciones
Rule 5     declaraciones -> clase_def declaraciones
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def op_func
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def SEMICOLON op_var
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> var_def params_op
Rule 18    params -> empty
Rule 19    params_op -> COMMA var_def params_op
Rule 20    params_op -> empty
Rule 21    bloque_func -> LBRACE estatutos RBRACE
Rule 22    main -> MAIN LPAREN RPAREN bloque_func
Rule 23    var_def -> type_compuesto ID
Rule 24    var_def -> type_simple ID op_vardef
Rule 25    op_vardef -> LBRACKET CTEI RBRACKET
Rule 26    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 27    op_vardef -> empty
Rule 28    type_simple -> INT
Rule 29    type_simple -> FLOAT
Rule 30    type_simple -> STRING
Rule 31    type_simple -> BOOL
Rule 32    type_compuesto -> ID
Rule 33    estatutos -> estatuto
Rule 34    estatutos -> estatuto estatutos
Rule 35    estatutos -> empty
Rule 36    estatuto -> asignacion
Rule 37    estatuto -> expresion
Rule 38    estatuto -> returns
Rule 39    estatuto -> llamada_funcion SEMICOLON
Rule 40    estatuto -> llamada_objeto SEMICOLON
Rule 41    estatuto -> var_def SEMICOLON
Rule 42    estatuto -> lectura
Rule 43    estatuto -> escritura
Rule 44    estatuto -> decision
Rule 45    estatuto -> repeticion
Rule 46    asignacion -> variable EQUAL expresion SEMICOLON
Rule 47    expresion -> expresion binop expresion
Rule 48    expresion -> plus_minus expresion
Rule 49    expresion -> LPAREN expresion RPAREN
Rule 50    expresion -> var_cte
Rule 51    binop -> SAME
Rule 52    binop -> NOTEQ
Rule 53    binop -> GTHAN
Rule 54    binop -> LTHAN
Rule 55    binop -> PLUS
Rule 56    binop -> MINUS
Rule 57    binop -> TIMES
Rule 58    binop -> DIVIDE
Rule 59    plus_minus -> PLUS
Rule 60    plus_minus -> MINUS
Rule 61    var_cte -> variable
Rule 62    var_cte -> CTEF
Rule 63    var_cte -> CTEI
Rule 64    returns -> RETURN expresion SEMICOLON
Rule 65    llamada_funcion -> ID LPAREN param_llamada RPAREN
Rule 66    param_llamada -> expresion
Rule 67    param_llamada -> expresion COMMA param_llamada
Rule 68    param_llamada -> empty
Rule 69    llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN
Rule 70    lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON
Rule 71    op_lectura -> COMMA variable op_lectura
Rule 72    op_lectura -> empty
Rule 73    variable -> ID variable_op
Rule 74    variable -> llamada_objeto
Rule 75    variable_op -> DOT ID
Rule 76    variable_op -> LBRACKET expresion RBRACKET
Rule 77    variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
Rule 78    variable_op -> empty
Rule 79    escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
Rule 80    type_escritura -> CTESTRING
Rule 81    type_escritura -> expresion
Rule 82    op_escritura -> COMMA CTESTRING op_escritura
Rule 83    op_escritura -> COMMA expresion op_escritura
Rule 84    op_escritura -> empty
Rule 85    decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
Rule 86    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 87    op_decision -> empty
Rule 88    repeticion -> condicional
Rule 89    repeticion -> no_condicional
Rule 90    condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
Rule 91    no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
Rule 92    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 31
CLASS                : 6
COLON                : 
COMMA                : 19 67 71 82 83
CTEF                 : 62
CTEI                 : 25 26 26 63
CTESTRING            : 80 82
DIVIDE               : 58
DO                   : 90 91
DOT                  : 69 75
ELSE                 : 86
EQUAL                : 46 91
FALSE                : 
FLOAT                : 29
FROM                 : 91
FUNC                 : 12
GTHAN                : 53
ID                   : 6 7 12 23 24 32 65 69 69 73 75
IF                   : 85
INHERIT              : 7
INT                  : 28
LBRACE               : 9 21 85 86 90 91
LBRACKET             : 25 26 26 76 77 77
LPAREN               : 12 22 49 65 69 70 79 85 90
LTHAN                : 54
MAIN                 : 22
MINUS                : 56 60
NOTEQ                : 52
PLUS                 : 55 59
RBRACE               : 9 21 85 86 90 91
RBRACKET             : 25 26 26 76 77 77
READ                 : 70
RET                  : 15
RETURN               : 64
RPAREN               : 12 22 49 65 69 70 79 85 90
SAME                 : 51
SEMICOLON            : 3 13 39 40 41 46 64 70 79
STRING               : 30
THEN                 : 85
TIMES                : 57
TO                   : 91
TRUE                 : 
VAR                  : 
WHILE                : 90
WRITE                : 79
error                : 

Nonterminals, with rules where they appear

asignacion           : 36
binop                : 47
bloque_clase         : 6
bloque_func          : 12 22
clase_def            : 5
clase_op             : 6
condicional          : 88
decision             : 44
declaraciones        : 1 3 4 5
empty                : 2 8 11 14 16 18 20 27 35 68 72 78 84 87
escritura            : 43
estatuto             : 33 34
estatutos            : 21 34 85 86 90 91
expresion            : 37 46 47 47 48 49 64 66 67 76 77 77 81 83 85 90 91 91
funcion_def          : 4 10
lectura              : 42
llamada_funcion      : 39
llamada_objeto       : 40 74
main                 : 1
no_condicional       : 89
op_decision          : 85
op_escritura         : 79 82 83
op_func              : 9 10
op_lectura           : 70 71
op_var               : 9 13
op_vardef            : 24
param_llamada        : 65 67 69
params               : 12
params_op            : 17 19
plus_minus           : 48
programa             : 0
repeticion           : 45
return_option        : 12
returns              : 38
type_compuesto       : 23
type_escritura       : 79
type_simple          : 15 24
var_cte              : 50
var_def              : 3 13 17 19 41
variable             : 46 61 70 71 91
variable_op          : 73

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaraciones main
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (92) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    MAIN            reduce using rule 92 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    programa                       shift and go to state 1
    declaraciones                  shift and go to state 2
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaraciones . main
    (22) main -> . MAIN LPAREN RPAREN bloque_func

    MAIN            shift and go to state 17

    main                           shift and go to state 16

state 3

    (2) declaraciones -> empty .

    MAIN            reduce using rule 2 (declaraciones -> empty .)


state 4

    (3) declaraciones -> var_def . SEMICOLON declaraciones

    SEMICOLON       shift and go to state 18


state 5

    (4) declaraciones -> funcion_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (92) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    MAIN            reduce using rule 92 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    funcion_def                    shift and go to state 5
    declaraciones                  shift and go to state 19
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 6

    (5) declaraciones -> clase_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (92) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    MAIN            reduce using rule 92 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    clase_def                      shift and go to state 6
    declaraciones                  shift and go to state 20
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 7

    (23) var_def -> type_compuesto . ID

    ID              shift and go to state 21


state 8

    (32) type_compuesto -> ID .

    ID              reduce using rule 32 (type_compuesto -> ID .)


state 9

    (24) var_def -> type_simple . ID op_vardef

    ID              shift and go to state 22


state 10

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 23


state 11

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 24


state 12

    (28) type_simple -> INT .

    ID              reduce using rule 28 (type_simple -> INT .)
    LBRACE          reduce using rule 28 (type_simple -> INT .)


state 13

    (29) type_simple -> FLOAT .

    ID              reduce using rule 29 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 29 (type_simple -> FLOAT .)


state 14

    (30) type_simple -> STRING .

    ID              reduce using rule 30 (type_simple -> STRING .)
    LBRACE          reduce using rule 30 (type_simple -> STRING .)


state 15

    (31) type_simple -> BOOL .

    ID              reduce using rule 31 (type_simple -> BOOL .)
    LBRACE          reduce using rule 31 (type_simple -> BOOL .)


state 16

    (1) programa -> declaraciones main .

    $end            reduce using rule 1 (programa -> declaraciones main .)


state 17

    (22) main -> MAIN . LPAREN RPAREN bloque_func

    LPAREN          shift and go to state 25


state 18

    (3) declaraciones -> var_def SEMICOLON . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (92) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    MAIN            reduce using rule 92 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 4
    declaraciones                  shift and go to state 26
    empty                          shift and go to state 3
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 19

    (4) declaraciones -> funcion_def declaraciones .

    MAIN            reduce using rule 4 (declaraciones -> funcion_def declaraciones .)


state 20

    (5) declaraciones -> clase_def declaraciones .

    MAIN            reduce using rule 5 (declaraciones -> clase_def declaraciones .)


state 21

    (23) var_def -> type_compuesto ID .

    SEMICOLON       reduce using rule 23 (var_def -> type_compuesto ID .)
    COMMA           reduce using rule 23 (var_def -> type_compuesto ID .)
    RPAREN          reduce using rule 23 (var_def -> type_compuesto ID .)


state 22

    (24) var_def -> type_simple ID . op_vardef
    (25) op_vardef -> . LBRACKET CTEI RBRACKET
    (26) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (27) op_vardef -> . empty
    (92) empty -> .

    LBRACKET        shift and go to state 28
    SEMICOLON       reduce using rule 92 (empty -> .)
    COMMA           reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)

    op_vardef                      shift and go to state 27
    empty                          shift and go to state 29

state 23

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 30


state 24

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (92) empty -> .

    INHERIT         shift and go to state 32
    LBRACE          reduce using rule 92 (empty -> .)

    clase_op                       shift and go to state 31
    empty                          shift and go to state 33

state 25

    (22) main -> MAIN LPAREN . RPAREN bloque_func

    RPAREN          shift and go to state 34


state 26

    (3) declaraciones -> var_def SEMICOLON declaraciones .

    MAIN            reduce using rule 3 (declaraciones -> var_def SEMICOLON declaraciones .)


state 27

    (24) var_def -> type_simple ID op_vardef .

    SEMICOLON       reduce using rule 24 (var_def -> type_simple ID op_vardef .)
    COMMA           reduce using rule 24 (var_def -> type_simple ID op_vardef .)
    RPAREN          reduce using rule 24 (var_def -> type_simple ID op_vardef .)


state 28

    (25) op_vardef -> LBRACKET . CTEI RBRACKET
    (26) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 35


state 29

    (27) op_vardef -> empty .

    SEMICOLON       reduce using rule 27 (op_vardef -> empty .)
    COMMA           reduce using rule 27 (op_vardef -> empty .)
    RPAREN          reduce using rule 27 (op_vardef -> empty .)


state 30

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . var_def params_op
    (18) params -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (92) empty -> .
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    RPAREN          reduce using rule 92 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    params                         shift and go to state 36
    var_def                        shift and go to state 37
    empty                          shift and go to state 38
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 31

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 40

    bloque_clase                   shift and go to state 39

state 32

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 41


state 33

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 34

    (22) main -> MAIN LPAREN RPAREN . bloque_func
    (21) bloque_func -> . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 43

    bloque_func                    shift and go to state 42

state 35

    (25) op_vardef -> LBRACKET CTEI . RBRACKET
    (26) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 44


state 36

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 45


state 37

    (17) params -> var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (92) empty -> .

    COMMA           shift and go to state 47
    RPAREN          reduce using rule 92 (empty -> .)

    params_op                      shift and go to state 46
    empty                          shift and go to state 48

state 38

    (18) params -> empty .

    RPAREN          reduce using rule 18 (params -> empty .)


state 39

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    ID              reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    INT             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FLOAT           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    STRING          reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    BOOL            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 40

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (92) empty -> .
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    FUNC            reduce using rule 92 (empty -> .)
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    op_var                         shift and go to state 49
    var_def                        shift and go to state 50
    empty                          shift and go to state 51
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 41

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 42

    (22) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 22 (main -> MAIN LPAREN RPAREN bloque_func .)


state 43

    (21) bloque_func -> LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 92 (empty -> .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

    estatutos                      shift and go to state 52
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    expresion                      shift and go to state 56
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    variable                       shift and go to state 65
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 44

    (25) op_vardef -> LBRACKET CTEI RBRACKET .
    (26) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 82


state 45

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (92) empty -> .

    RET             shift and go to state 84
    LBRACE          reduce using rule 92 (empty -> .)

    return_option                  shift and go to state 83
    empty                          shift and go to state 85

state 46

    (17) params -> var_def params_op .

    RPAREN          reduce using rule 17 (params -> var_def params_op .)


state 47

    (19) params_op -> COMMA . var_def params_op
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 86
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 48

    (20) params_op -> empty .

    RPAREN          reduce using rule 20 (params_op -> empty .)


state 49

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (92) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 92 (empty -> .)

    op_func                        shift and go to state 87
    funcion_def                    shift and go to state 88
    empty                          shift and go to state 89

state 50

    (13) op_var -> var_def . SEMICOLON op_var

    SEMICOLON       shift and go to state 90


state 51

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)


state 52

    (21) bloque_func -> LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 91


state 53

    (33) estatutos -> estatuto .
    (34) estatutos -> estatuto . estatutos
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 33 (estatutos -> estatuto .)
    RBRACE          reduce using rule 33 (estatutos -> estatuto .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

  ! RBRACE          [ reduce using rule 92 (empty -> .) ]

    estatuto                       shift and go to state 53
    estatutos                      shift and go to state 92
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    expresion                      shift and go to state 56
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    variable                       shift and go to state 65
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 54

    (35) estatutos -> empty .

    RBRACE          reduce using rule 35 (estatutos -> empty .)


state 55

    (36) estatuto -> asignacion .

    LPAREN          reduce using rule 36 (estatuto -> asignacion .)
    RETURN          reduce using rule 36 (estatuto -> asignacion .)
    ID              reduce using rule 36 (estatuto -> asignacion .)
    READ            reduce using rule 36 (estatuto -> asignacion .)
    WRITE           reduce using rule 36 (estatuto -> asignacion .)
    IF              reduce using rule 36 (estatuto -> asignacion .)
    PLUS            reduce using rule 36 (estatuto -> asignacion .)
    MINUS           reduce using rule 36 (estatuto -> asignacion .)
    CTEF            reduce using rule 36 (estatuto -> asignacion .)
    CTEI            reduce using rule 36 (estatuto -> asignacion .)
    INT             reduce using rule 36 (estatuto -> asignacion .)
    FLOAT           reduce using rule 36 (estatuto -> asignacion .)
    STRING          reduce using rule 36 (estatuto -> asignacion .)
    BOOL            reduce using rule 36 (estatuto -> asignacion .)
    WHILE           reduce using rule 36 (estatuto -> asignacion .)
    FROM            reduce using rule 36 (estatuto -> asignacion .)
    RBRACE          reduce using rule 36 (estatuto -> asignacion .)


state 56

    (37) estatuto -> expresion .
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          reduce using rule 37 (estatuto -> expresion .)
    RETURN          reduce using rule 37 (estatuto -> expresion .)
    ID              reduce using rule 37 (estatuto -> expresion .)
    READ            reduce using rule 37 (estatuto -> expresion .)
    WRITE           reduce using rule 37 (estatuto -> expresion .)
    IF              reduce using rule 37 (estatuto -> expresion .)
    CTEF            reduce using rule 37 (estatuto -> expresion .)
    CTEI            reduce using rule 37 (estatuto -> expresion .)
    INT             reduce using rule 37 (estatuto -> expresion .)
    FLOAT           reduce using rule 37 (estatuto -> expresion .)
    STRING          reduce using rule 37 (estatuto -> expresion .)
    BOOL            reduce using rule 37 (estatuto -> expresion .)
    WHILE           reduce using rule 37 (estatuto -> expresion .)
    FROM            reduce using rule 37 (estatuto -> expresion .)
    RBRACE          reduce using rule 37 (estatuto -> expresion .)
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

  ! PLUS            [ reduce using rule 37 (estatuto -> expresion .) ]
  ! MINUS           [ reduce using rule 37 (estatuto -> expresion .) ]

    binop                          shift and go to state 93

state 57

    (38) estatuto -> returns .

    LPAREN          reduce using rule 38 (estatuto -> returns .)
    RETURN          reduce using rule 38 (estatuto -> returns .)
    ID              reduce using rule 38 (estatuto -> returns .)
    READ            reduce using rule 38 (estatuto -> returns .)
    WRITE           reduce using rule 38 (estatuto -> returns .)
    IF              reduce using rule 38 (estatuto -> returns .)
    PLUS            reduce using rule 38 (estatuto -> returns .)
    MINUS           reduce using rule 38 (estatuto -> returns .)
    CTEF            reduce using rule 38 (estatuto -> returns .)
    CTEI            reduce using rule 38 (estatuto -> returns .)
    INT             reduce using rule 38 (estatuto -> returns .)
    FLOAT           reduce using rule 38 (estatuto -> returns .)
    STRING          reduce using rule 38 (estatuto -> returns .)
    BOOL            reduce using rule 38 (estatuto -> returns .)
    WHILE           reduce using rule 38 (estatuto -> returns .)
    FROM            reduce using rule 38 (estatuto -> returns .)
    RBRACE          reduce using rule 38 (estatuto -> returns .)


state 58

    (39) estatuto -> llamada_funcion . SEMICOLON

    SEMICOLON       shift and go to state 102


state 59

    (40) estatuto -> llamada_objeto . SEMICOLON
    (74) variable -> llamada_objeto .

    SEMICOLON       shift and go to state 103
    EQUAL           reduce using rule 74 (variable -> llamada_objeto .)
    SAME            reduce using rule 74 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 74 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 74 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 74 (variable -> llamada_objeto .)
    PLUS            reduce using rule 74 (variable -> llamada_objeto .)
    MINUS           reduce using rule 74 (variable -> llamada_objeto .)
    TIMES           reduce using rule 74 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 74 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 74 (variable -> llamada_objeto .)
    RETURN          reduce using rule 74 (variable -> llamada_objeto .)
    ID              reduce using rule 74 (variable -> llamada_objeto .)
    READ            reduce using rule 74 (variable -> llamada_objeto .)
    WRITE           reduce using rule 74 (variable -> llamada_objeto .)
    IF              reduce using rule 74 (variable -> llamada_objeto .)
    CTEF            reduce using rule 74 (variable -> llamada_objeto .)
    CTEI            reduce using rule 74 (variable -> llamada_objeto .)
    INT             reduce using rule 74 (variable -> llamada_objeto .)
    FLOAT           reduce using rule 74 (variable -> llamada_objeto .)
    STRING          reduce using rule 74 (variable -> llamada_objeto .)
    BOOL            reduce using rule 74 (variable -> llamada_objeto .)
    WHILE           reduce using rule 74 (variable -> llamada_objeto .)
    FROM            reduce using rule 74 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 74 (variable -> llamada_objeto .)


state 60

    (41) estatuto -> var_def . SEMICOLON

    SEMICOLON       shift and go to state 104


state 61

    (42) estatuto -> lectura .

    LPAREN          reduce using rule 42 (estatuto -> lectura .)
    RETURN          reduce using rule 42 (estatuto -> lectura .)
    ID              reduce using rule 42 (estatuto -> lectura .)
    READ            reduce using rule 42 (estatuto -> lectura .)
    WRITE           reduce using rule 42 (estatuto -> lectura .)
    IF              reduce using rule 42 (estatuto -> lectura .)
    PLUS            reduce using rule 42 (estatuto -> lectura .)
    MINUS           reduce using rule 42 (estatuto -> lectura .)
    CTEF            reduce using rule 42 (estatuto -> lectura .)
    CTEI            reduce using rule 42 (estatuto -> lectura .)
    INT             reduce using rule 42 (estatuto -> lectura .)
    FLOAT           reduce using rule 42 (estatuto -> lectura .)
    STRING          reduce using rule 42 (estatuto -> lectura .)
    BOOL            reduce using rule 42 (estatuto -> lectura .)
    WHILE           reduce using rule 42 (estatuto -> lectura .)
    FROM            reduce using rule 42 (estatuto -> lectura .)
    RBRACE          reduce using rule 42 (estatuto -> lectura .)


state 62

    (43) estatuto -> escritura .

    LPAREN          reduce using rule 43 (estatuto -> escritura .)
    RETURN          reduce using rule 43 (estatuto -> escritura .)
    ID              reduce using rule 43 (estatuto -> escritura .)
    READ            reduce using rule 43 (estatuto -> escritura .)
    WRITE           reduce using rule 43 (estatuto -> escritura .)
    IF              reduce using rule 43 (estatuto -> escritura .)
    PLUS            reduce using rule 43 (estatuto -> escritura .)
    MINUS           reduce using rule 43 (estatuto -> escritura .)
    CTEF            reduce using rule 43 (estatuto -> escritura .)
    CTEI            reduce using rule 43 (estatuto -> escritura .)
    INT             reduce using rule 43 (estatuto -> escritura .)
    FLOAT           reduce using rule 43 (estatuto -> escritura .)
    STRING          reduce using rule 43 (estatuto -> escritura .)
    BOOL            reduce using rule 43 (estatuto -> escritura .)
    WHILE           reduce using rule 43 (estatuto -> escritura .)
    FROM            reduce using rule 43 (estatuto -> escritura .)
    RBRACE          reduce using rule 43 (estatuto -> escritura .)


state 63

    (44) estatuto -> decision .

    LPAREN          reduce using rule 44 (estatuto -> decision .)
    RETURN          reduce using rule 44 (estatuto -> decision .)
    ID              reduce using rule 44 (estatuto -> decision .)
    READ            reduce using rule 44 (estatuto -> decision .)
    WRITE           reduce using rule 44 (estatuto -> decision .)
    IF              reduce using rule 44 (estatuto -> decision .)
    PLUS            reduce using rule 44 (estatuto -> decision .)
    MINUS           reduce using rule 44 (estatuto -> decision .)
    CTEF            reduce using rule 44 (estatuto -> decision .)
    CTEI            reduce using rule 44 (estatuto -> decision .)
    INT             reduce using rule 44 (estatuto -> decision .)
    FLOAT           reduce using rule 44 (estatuto -> decision .)
    STRING          reduce using rule 44 (estatuto -> decision .)
    BOOL            reduce using rule 44 (estatuto -> decision .)
    WHILE           reduce using rule 44 (estatuto -> decision .)
    FROM            reduce using rule 44 (estatuto -> decision .)
    RBRACE          reduce using rule 44 (estatuto -> decision .)


state 64

    (45) estatuto -> repeticion .

    LPAREN          reduce using rule 45 (estatuto -> repeticion .)
    RETURN          reduce using rule 45 (estatuto -> repeticion .)
    ID              reduce using rule 45 (estatuto -> repeticion .)
    READ            reduce using rule 45 (estatuto -> repeticion .)
    WRITE           reduce using rule 45 (estatuto -> repeticion .)
    IF              reduce using rule 45 (estatuto -> repeticion .)
    PLUS            reduce using rule 45 (estatuto -> repeticion .)
    MINUS           reduce using rule 45 (estatuto -> repeticion .)
    CTEF            reduce using rule 45 (estatuto -> repeticion .)
    CTEI            reduce using rule 45 (estatuto -> repeticion .)
    INT             reduce using rule 45 (estatuto -> repeticion .)
    FLOAT           reduce using rule 45 (estatuto -> repeticion .)
    STRING          reduce using rule 45 (estatuto -> repeticion .)
    BOOL            reduce using rule 45 (estatuto -> repeticion .)
    WHILE           reduce using rule 45 (estatuto -> repeticion .)
    FROM            reduce using rule 45 (estatuto -> repeticion .)
    RBRACE          reduce using rule 45 (estatuto -> repeticion .)


state 65

    (46) asignacion -> variable . EQUAL expresion SEMICOLON
    (61) var_cte -> variable .

    EQUAL           shift and go to state 105
    SAME            reduce using rule 61 (var_cte -> variable .)
    NOTEQ           reduce using rule 61 (var_cte -> variable .)
    GTHAN           reduce using rule 61 (var_cte -> variable .)
    LTHAN           reduce using rule 61 (var_cte -> variable .)
    PLUS            reduce using rule 61 (var_cte -> variable .)
    MINUS           reduce using rule 61 (var_cte -> variable .)
    TIMES           reduce using rule 61 (var_cte -> variable .)
    DIVIDE          reduce using rule 61 (var_cte -> variable .)
    LPAREN          reduce using rule 61 (var_cte -> variable .)
    RETURN          reduce using rule 61 (var_cte -> variable .)
    ID              reduce using rule 61 (var_cte -> variable .)
    READ            reduce using rule 61 (var_cte -> variable .)
    WRITE           reduce using rule 61 (var_cte -> variable .)
    IF              reduce using rule 61 (var_cte -> variable .)
    CTEF            reduce using rule 61 (var_cte -> variable .)
    CTEI            reduce using rule 61 (var_cte -> variable .)
    INT             reduce using rule 61 (var_cte -> variable .)
    FLOAT           reduce using rule 61 (var_cte -> variable .)
    STRING          reduce using rule 61 (var_cte -> variable .)
    BOOL            reduce using rule 61 (var_cte -> variable .)
    WHILE           reduce using rule 61 (var_cte -> variable .)
    FROM            reduce using rule 61 (var_cte -> variable .)
    RBRACE          reduce using rule 61 (var_cte -> variable .)


state 66

    (48) expresion -> plus_minus . expresion
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    plus_minus                     shift and go to state 66
    expresion                      shift and go to state 106
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 67

    (49) expresion -> LPAREN . expresion RPAREN
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 110
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 68

    (50) expresion -> var_cte .

    SAME            reduce using rule 50 (expresion -> var_cte .)
    NOTEQ           reduce using rule 50 (expresion -> var_cte .)
    GTHAN           reduce using rule 50 (expresion -> var_cte .)
    LTHAN           reduce using rule 50 (expresion -> var_cte .)
    PLUS            reduce using rule 50 (expresion -> var_cte .)
    MINUS           reduce using rule 50 (expresion -> var_cte .)
    TIMES           reduce using rule 50 (expresion -> var_cte .)
    DIVIDE          reduce using rule 50 (expresion -> var_cte .)
    LPAREN          reduce using rule 50 (expresion -> var_cte .)
    RETURN          reduce using rule 50 (expresion -> var_cte .)
    ID              reduce using rule 50 (expresion -> var_cte .)
    READ            reduce using rule 50 (expresion -> var_cte .)
    WRITE           reduce using rule 50 (expresion -> var_cte .)
    IF              reduce using rule 50 (expresion -> var_cte .)
    CTEF            reduce using rule 50 (expresion -> var_cte .)
    CTEI            reduce using rule 50 (expresion -> var_cte .)
    INT             reduce using rule 50 (expresion -> var_cte .)
    FLOAT           reduce using rule 50 (expresion -> var_cte .)
    STRING          reduce using rule 50 (expresion -> var_cte .)
    BOOL            reduce using rule 50 (expresion -> var_cte .)
    WHILE           reduce using rule 50 (expresion -> var_cte .)
    FROM            reduce using rule 50 (expresion -> var_cte .)
    RBRACE          reduce using rule 50 (expresion -> var_cte .)
    RPAREN          reduce using rule 50 (expresion -> var_cte .)
    SEMICOLON       reduce using rule 50 (expresion -> var_cte .)
    COMMA           reduce using rule 50 (expresion -> var_cte .)
    RBRACKET        reduce using rule 50 (expresion -> var_cte .)
    TO              reduce using rule 50 (expresion -> var_cte .)
    DO              reduce using rule 50 (expresion -> var_cte .)


state 69

    (64) returns -> RETURN . expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 111
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 70

    (65) llamada_funcion -> ID . LPAREN param_llamada RPAREN
    (69) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (73) variable -> ID . variable_op
    (32) type_compuesto -> ID .
    (75) variable_op -> . DOT ID
    (76) variable_op -> . LBRACKET expresion RBRACKET
    (77) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (78) variable_op -> . empty
    (92) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 32 (type_compuesto -> ID .)
    LPAREN          shift and go to state 112
    DOT             shift and go to state 113
    ID              reduce using rule 32 (type_compuesto -> ID .)
    LBRACKET        shift and go to state 115
    EQUAL           reduce using rule 92 (empty -> .)
    SAME            reduce using rule 92 (empty -> .)
    NOTEQ           reduce using rule 92 (empty -> .)
    GTHAN           reduce using rule 92 (empty -> .)
    LTHAN           reduce using rule 92 (empty -> .)
    PLUS            reduce using rule 92 (empty -> .)
    MINUS           reduce using rule 92 (empty -> .)
    TIMES           reduce using rule 92 (empty -> .)
    DIVIDE          reduce using rule 92 (empty -> .)
    RETURN          reduce using rule 92 (empty -> .)
    READ            reduce using rule 92 (empty -> .)
    WRITE           reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    CTEF            reduce using rule 92 (empty -> .)
    CTEI            reduce using rule 92 (empty -> .)
    INT             reduce using rule 92 (empty -> .)
    FLOAT           reduce using rule 92 (empty -> .)
    STRING          reduce using rule 92 (empty -> .)
    BOOL            reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FROM            reduce using rule 92 (empty -> .)
    RBRACE          reduce using rule 92 (empty -> .)

  ! LPAREN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]

    variable_op                    shift and go to state 114
    empty                          shift and go to state 116

state 71

    (70) lectura -> READ . LPAREN variable op_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 117


state 72

    (79) escritura -> WRITE . LPAREN type_escritura op_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 118


state 73

    (85) decision -> IF . LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 119


state 74

    (88) repeticion -> condicional .

    LPAREN          reduce using rule 88 (repeticion -> condicional .)
    RETURN          reduce using rule 88 (repeticion -> condicional .)
    ID              reduce using rule 88 (repeticion -> condicional .)
    READ            reduce using rule 88 (repeticion -> condicional .)
    WRITE           reduce using rule 88 (repeticion -> condicional .)
    IF              reduce using rule 88 (repeticion -> condicional .)
    PLUS            reduce using rule 88 (repeticion -> condicional .)
    MINUS           reduce using rule 88 (repeticion -> condicional .)
    CTEF            reduce using rule 88 (repeticion -> condicional .)
    CTEI            reduce using rule 88 (repeticion -> condicional .)
    INT             reduce using rule 88 (repeticion -> condicional .)
    FLOAT           reduce using rule 88 (repeticion -> condicional .)
    STRING          reduce using rule 88 (repeticion -> condicional .)
    BOOL            reduce using rule 88 (repeticion -> condicional .)
    WHILE           reduce using rule 88 (repeticion -> condicional .)
    FROM            reduce using rule 88 (repeticion -> condicional .)
    RBRACE          reduce using rule 88 (repeticion -> condicional .)


state 75

    (89) repeticion -> no_condicional .

    LPAREN          reduce using rule 89 (repeticion -> no_condicional .)
    RETURN          reduce using rule 89 (repeticion -> no_condicional .)
    ID              reduce using rule 89 (repeticion -> no_condicional .)
    READ            reduce using rule 89 (repeticion -> no_condicional .)
    WRITE           reduce using rule 89 (repeticion -> no_condicional .)
    IF              reduce using rule 89 (repeticion -> no_condicional .)
    PLUS            reduce using rule 89 (repeticion -> no_condicional .)
    MINUS           reduce using rule 89 (repeticion -> no_condicional .)
    CTEF            reduce using rule 89 (repeticion -> no_condicional .)
    CTEI            reduce using rule 89 (repeticion -> no_condicional .)
    INT             reduce using rule 89 (repeticion -> no_condicional .)
    FLOAT           reduce using rule 89 (repeticion -> no_condicional .)
    STRING          reduce using rule 89 (repeticion -> no_condicional .)
    BOOL            reduce using rule 89 (repeticion -> no_condicional .)
    WHILE           reduce using rule 89 (repeticion -> no_condicional .)
    FROM            reduce using rule 89 (repeticion -> no_condicional .)
    RBRACE          reduce using rule 89 (repeticion -> no_condicional .)


state 76

    (59) plus_minus -> PLUS .

    LPAREN          reduce using rule 59 (plus_minus -> PLUS .)
    PLUS            reduce using rule 59 (plus_minus -> PLUS .)
    MINUS           reduce using rule 59 (plus_minus -> PLUS .)
    CTEF            reduce using rule 59 (plus_minus -> PLUS .)
    CTEI            reduce using rule 59 (plus_minus -> PLUS .)
    ID              reduce using rule 59 (plus_minus -> PLUS .)


state 77

    (60) plus_minus -> MINUS .

    LPAREN          reduce using rule 60 (plus_minus -> MINUS .)
    PLUS            reduce using rule 60 (plus_minus -> MINUS .)
    MINUS           reduce using rule 60 (plus_minus -> MINUS .)
    CTEF            reduce using rule 60 (plus_minus -> MINUS .)
    CTEI            reduce using rule 60 (plus_minus -> MINUS .)
    ID              reduce using rule 60 (plus_minus -> MINUS .)


state 78

    (62) var_cte -> CTEF .

    SAME            reduce using rule 62 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 62 (var_cte -> CTEF .)
    GTHAN           reduce using rule 62 (var_cte -> CTEF .)
    LTHAN           reduce using rule 62 (var_cte -> CTEF .)
    PLUS            reduce using rule 62 (var_cte -> CTEF .)
    MINUS           reduce using rule 62 (var_cte -> CTEF .)
    TIMES           reduce using rule 62 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 62 (var_cte -> CTEF .)
    LPAREN          reduce using rule 62 (var_cte -> CTEF .)
    RETURN          reduce using rule 62 (var_cte -> CTEF .)
    ID              reduce using rule 62 (var_cte -> CTEF .)
    READ            reduce using rule 62 (var_cte -> CTEF .)
    WRITE           reduce using rule 62 (var_cte -> CTEF .)
    IF              reduce using rule 62 (var_cte -> CTEF .)
    CTEF            reduce using rule 62 (var_cte -> CTEF .)
    CTEI            reduce using rule 62 (var_cte -> CTEF .)
    INT             reduce using rule 62 (var_cte -> CTEF .)
    FLOAT           reduce using rule 62 (var_cte -> CTEF .)
    STRING          reduce using rule 62 (var_cte -> CTEF .)
    BOOL            reduce using rule 62 (var_cte -> CTEF .)
    WHILE           reduce using rule 62 (var_cte -> CTEF .)
    FROM            reduce using rule 62 (var_cte -> CTEF .)
    RBRACE          reduce using rule 62 (var_cte -> CTEF .)
    RPAREN          reduce using rule 62 (var_cte -> CTEF .)
    SEMICOLON       reduce using rule 62 (var_cte -> CTEF .)
    COMMA           reduce using rule 62 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 62 (var_cte -> CTEF .)
    TO              reduce using rule 62 (var_cte -> CTEF .)
    DO              reduce using rule 62 (var_cte -> CTEF .)


state 79

    (63) var_cte -> CTEI .

    SAME            reduce using rule 63 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 63 (var_cte -> CTEI .)
    GTHAN           reduce using rule 63 (var_cte -> CTEI .)
    LTHAN           reduce using rule 63 (var_cte -> CTEI .)
    PLUS            reduce using rule 63 (var_cte -> CTEI .)
    MINUS           reduce using rule 63 (var_cte -> CTEI .)
    TIMES           reduce using rule 63 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 63 (var_cte -> CTEI .)
    LPAREN          reduce using rule 63 (var_cte -> CTEI .)
    RETURN          reduce using rule 63 (var_cte -> CTEI .)
    ID              reduce using rule 63 (var_cte -> CTEI .)
    READ            reduce using rule 63 (var_cte -> CTEI .)
    WRITE           reduce using rule 63 (var_cte -> CTEI .)
    IF              reduce using rule 63 (var_cte -> CTEI .)
    CTEF            reduce using rule 63 (var_cte -> CTEI .)
    CTEI            reduce using rule 63 (var_cte -> CTEI .)
    INT             reduce using rule 63 (var_cte -> CTEI .)
    FLOAT           reduce using rule 63 (var_cte -> CTEI .)
    STRING          reduce using rule 63 (var_cte -> CTEI .)
    BOOL            reduce using rule 63 (var_cte -> CTEI .)
    WHILE           reduce using rule 63 (var_cte -> CTEI .)
    FROM            reduce using rule 63 (var_cte -> CTEI .)
    RBRACE          reduce using rule 63 (var_cte -> CTEI .)
    RPAREN          reduce using rule 63 (var_cte -> CTEI .)
    SEMICOLON       reduce using rule 63 (var_cte -> CTEI .)
    COMMA           reduce using rule 63 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 63 (var_cte -> CTEI .)
    TO              reduce using rule 63 (var_cte -> CTEI .)
    DO              reduce using rule 63 (var_cte -> CTEI .)


state 80

    (90) condicional -> WHILE . LPAREN expresion RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 120


state 81

    (91) no_condicional -> FROM . variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 108

    variable                       shift and go to state 121
    llamada_objeto                 shift and go to state 109

state 82

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 122


state 83

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (21) bloque_func -> . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 43

    bloque_func                    shift and go to state 123

state 84

    (15) return_option -> RET . type_simple
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type_simple                    shift and go to state 124

state 85

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 86

    (19) params_op -> COMMA var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (92) empty -> .

    COMMA           shift and go to state 47
    RPAREN          reduce using rule 92 (empty -> .)

    params_op                      shift and go to state 125
    empty                          shift and go to state 48

state 87

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 126


state 88

    (10) op_func -> funcion_def . op_func
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (92) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 92 (empty -> .)

    funcion_def                    shift and go to state 88
    op_func                        shift and go to state 127
    empty                          shift and go to state 89

state 89

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 90

    (13) op_var -> var_def SEMICOLON . op_var
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (92) empty -> .
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL

    FUNC            reduce using rule 92 (empty -> .)
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 50
    op_var                         shift and go to state 128
    empty                          shift and go to state 51
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 91

    (21) bloque_func -> LBRACE estatutos RBRACE .

    $end            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FUNC            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    CLASS           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    ID              reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    INT             reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    STRING          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    BOOL            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    MAIN            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)


state 92

    (34) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 34 (estatutos -> estatuto estatutos .)


state 93

    (47) expresion -> expresion binop . expresion
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 129
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 94

    (51) binop -> SAME .

    LPAREN          reduce using rule 51 (binop -> SAME .)
    PLUS            reduce using rule 51 (binop -> SAME .)
    MINUS           reduce using rule 51 (binop -> SAME .)
    CTEF            reduce using rule 51 (binop -> SAME .)
    CTEI            reduce using rule 51 (binop -> SAME .)
    ID              reduce using rule 51 (binop -> SAME .)


state 95

    (52) binop -> NOTEQ .

    LPAREN          reduce using rule 52 (binop -> NOTEQ .)
    PLUS            reduce using rule 52 (binop -> NOTEQ .)
    MINUS           reduce using rule 52 (binop -> NOTEQ .)
    CTEF            reduce using rule 52 (binop -> NOTEQ .)
    CTEI            reduce using rule 52 (binop -> NOTEQ .)
    ID              reduce using rule 52 (binop -> NOTEQ .)


state 96

    (53) binop -> GTHAN .

    LPAREN          reduce using rule 53 (binop -> GTHAN .)
    PLUS            reduce using rule 53 (binop -> GTHAN .)
    MINUS           reduce using rule 53 (binop -> GTHAN .)
    CTEF            reduce using rule 53 (binop -> GTHAN .)
    CTEI            reduce using rule 53 (binop -> GTHAN .)
    ID              reduce using rule 53 (binop -> GTHAN .)


state 97

    (54) binop -> LTHAN .

    LPAREN          reduce using rule 54 (binop -> LTHAN .)
    PLUS            reduce using rule 54 (binop -> LTHAN .)
    MINUS           reduce using rule 54 (binop -> LTHAN .)
    CTEF            reduce using rule 54 (binop -> LTHAN .)
    CTEI            reduce using rule 54 (binop -> LTHAN .)
    ID              reduce using rule 54 (binop -> LTHAN .)


state 98

    (55) binop -> PLUS .

    LPAREN          reduce using rule 55 (binop -> PLUS .)
    PLUS            reduce using rule 55 (binop -> PLUS .)
    MINUS           reduce using rule 55 (binop -> PLUS .)
    CTEF            reduce using rule 55 (binop -> PLUS .)
    CTEI            reduce using rule 55 (binop -> PLUS .)
    ID              reduce using rule 55 (binop -> PLUS .)


state 99

    (56) binop -> MINUS .

    LPAREN          reduce using rule 56 (binop -> MINUS .)
    PLUS            reduce using rule 56 (binop -> MINUS .)
    MINUS           reduce using rule 56 (binop -> MINUS .)
    CTEF            reduce using rule 56 (binop -> MINUS .)
    CTEI            reduce using rule 56 (binop -> MINUS .)
    ID              reduce using rule 56 (binop -> MINUS .)


state 100

    (57) binop -> TIMES .

    LPAREN          reduce using rule 57 (binop -> TIMES .)
    PLUS            reduce using rule 57 (binop -> TIMES .)
    MINUS           reduce using rule 57 (binop -> TIMES .)
    CTEF            reduce using rule 57 (binop -> TIMES .)
    CTEI            reduce using rule 57 (binop -> TIMES .)
    ID              reduce using rule 57 (binop -> TIMES .)


state 101

    (58) binop -> DIVIDE .

    LPAREN          reduce using rule 58 (binop -> DIVIDE .)
    PLUS            reduce using rule 58 (binop -> DIVIDE .)
    MINUS           reduce using rule 58 (binop -> DIVIDE .)
    CTEF            reduce using rule 58 (binop -> DIVIDE .)
    CTEI            reduce using rule 58 (binop -> DIVIDE .)
    ID              reduce using rule 58 (binop -> DIVIDE .)


state 102

    (39) estatuto -> llamada_funcion SEMICOLON .

    LPAREN          reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    RETURN          reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    ID              reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    READ            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    WRITE           reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    IF              reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    PLUS            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    MINUS           reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    CTEF            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    CTEI            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    INT             reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    FLOAT           reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    STRING          reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    BOOL            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    WHILE           reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    FROM            reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)
    RBRACE          reduce using rule 39 (estatuto -> llamada_funcion SEMICOLON .)


state 103

    (40) estatuto -> llamada_objeto SEMICOLON .

    LPAREN          reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    RETURN          reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    ID              reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    READ            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    WRITE           reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    IF              reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    PLUS            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    MINUS           reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    CTEF            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    CTEI            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    INT             reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    FLOAT           reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    STRING          reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    BOOL            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    WHILE           reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    FROM            reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)
    RBRACE          reduce using rule 40 (estatuto -> llamada_objeto SEMICOLON .)


state 104

    (41) estatuto -> var_def SEMICOLON .

    LPAREN          reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    RETURN          reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    ID              reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    READ            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    WRITE           reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    IF              reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    PLUS            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    MINUS           reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    CTEF            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    CTEI            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    INT             reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    FLOAT           reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    STRING          reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    BOOL            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    WHILE           reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    FROM            reduce using rule 41 (estatuto -> var_def SEMICOLON .)
    RBRACE          reduce using rule 41 (estatuto -> var_def SEMICOLON .)


state 105

    (46) asignacion -> variable EQUAL . expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    variable                       shift and go to state 107
    expresion                      shift and go to state 130
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    llamada_objeto                 shift and go to state 109

state 106

    (48) expresion -> plus_minus expresion .
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 48 (expresion -> plus_minus expresion .)
    RETURN          reduce using rule 48 (expresion -> plus_minus expresion .)
    ID              reduce using rule 48 (expresion -> plus_minus expresion .)
    READ            reduce using rule 48 (expresion -> plus_minus expresion .)
    WRITE           reduce using rule 48 (expresion -> plus_minus expresion .)
    IF              reduce using rule 48 (expresion -> plus_minus expresion .)
    CTEF            reduce using rule 48 (expresion -> plus_minus expresion .)
    CTEI            reduce using rule 48 (expresion -> plus_minus expresion .)
    INT             reduce using rule 48 (expresion -> plus_minus expresion .)
    FLOAT           reduce using rule 48 (expresion -> plus_minus expresion .)
    STRING          reduce using rule 48 (expresion -> plus_minus expresion .)
    BOOL            reduce using rule 48 (expresion -> plus_minus expresion .)
    WHILE           reduce using rule 48 (expresion -> plus_minus expresion .)
    FROM            reduce using rule 48 (expresion -> plus_minus expresion .)
    RBRACE          reduce using rule 48 (expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 48 (expresion -> plus_minus expresion .)
    SEMICOLON       reduce using rule 48 (expresion -> plus_minus expresion .)
    COMMA           reduce using rule 48 (expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 48 (expresion -> plus_minus expresion .)
    TO              reduce using rule 48 (expresion -> plus_minus expresion .)
    DO              reduce using rule 48 (expresion -> plus_minus expresion .)
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

  ! SAME            [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! NOTEQ           [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! GTHAN           [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! LTHAN           [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! PLUS            [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! MINUS           [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! TIMES           [ reduce using rule 48 (expresion -> plus_minus expresion .) ]
  ! DIVIDE          [ reduce using rule 48 (expresion -> plus_minus expresion .) ]

    binop                          shift and go to state 93

state 107

    (61) var_cte -> variable .

    SAME            reduce using rule 61 (var_cte -> variable .)
    NOTEQ           reduce using rule 61 (var_cte -> variable .)
    GTHAN           reduce using rule 61 (var_cte -> variable .)
    LTHAN           reduce using rule 61 (var_cte -> variable .)
    PLUS            reduce using rule 61 (var_cte -> variable .)
    MINUS           reduce using rule 61 (var_cte -> variable .)
    TIMES           reduce using rule 61 (var_cte -> variable .)
    DIVIDE          reduce using rule 61 (var_cte -> variable .)
    LPAREN          reduce using rule 61 (var_cte -> variable .)
    RETURN          reduce using rule 61 (var_cte -> variable .)
    ID              reduce using rule 61 (var_cte -> variable .)
    READ            reduce using rule 61 (var_cte -> variable .)
    WRITE           reduce using rule 61 (var_cte -> variable .)
    IF              reduce using rule 61 (var_cte -> variable .)
    CTEF            reduce using rule 61 (var_cte -> variable .)
    CTEI            reduce using rule 61 (var_cte -> variable .)
    INT             reduce using rule 61 (var_cte -> variable .)
    FLOAT           reduce using rule 61 (var_cte -> variable .)
    STRING          reduce using rule 61 (var_cte -> variable .)
    BOOL            reduce using rule 61 (var_cte -> variable .)
    WHILE           reduce using rule 61 (var_cte -> variable .)
    FROM            reduce using rule 61 (var_cte -> variable .)
    RBRACE          reduce using rule 61 (var_cte -> variable .)
    RPAREN          reduce using rule 61 (var_cte -> variable .)
    SEMICOLON       reduce using rule 61 (var_cte -> variable .)
    COMMA           reduce using rule 61 (var_cte -> variable .)
    RBRACKET        reduce using rule 61 (var_cte -> variable .)
    TO              reduce using rule 61 (var_cte -> variable .)
    DO              reduce using rule 61 (var_cte -> variable .)


state 108

    (73) variable -> ID . variable_op
    (69) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (75) variable_op -> . DOT ID
    (76) variable_op -> . LBRACKET expresion RBRACKET
    (77) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (78) variable_op -> . empty
    (92) empty -> .

    DOT             shift and go to state 113
    LBRACKET        shift and go to state 115
    SAME            reduce using rule 92 (empty -> .)
    NOTEQ           reduce using rule 92 (empty -> .)
    GTHAN           reduce using rule 92 (empty -> .)
    LTHAN           reduce using rule 92 (empty -> .)
    PLUS            reduce using rule 92 (empty -> .)
    MINUS           reduce using rule 92 (empty -> .)
    TIMES           reduce using rule 92 (empty -> .)
    DIVIDE          reduce using rule 92 (empty -> .)
    LPAREN          reduce using rule 92 (empty -> .)
    RETURN          reduce using rule 92 (empty -> .)
    ID              reduce using rule 92 (empty -> .)
    READ            reduce using rule 92 (empty -> .)
    WRITE           reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    CTEF            reduce using rule 92 (empty -> .)
    CTEI            reduce using rule 92 (empty -> .)
    INT             reduce using rule 92 (empty -> .)
    FLOAT           reduce using rule 92 (empty -> .)
    STRING          reduce using rule 92 (empty -> .)
    BOOL            reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FROM            reduce using rule 92 (empty -> .)
    RBRACE          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    SEMICOLON       reduce using rule 92 (empty -> .)
    COMMA           reduce using rule 92 (empty -> .)
    RBRACKET        reduce using rule 92 (empty -> .)
    TO              reduce using rule 92 (empty -> .)
    DO              reduce using rule 92 (empty -> .)
    EQUAL           reduce using rule 92 (empty -> .)

    variable_op                    shift and go to state 114
    empty                          shift and go to state 116

state 109

    (74) variable -> llamada_objeto .

    SAME            reduce using rule 74 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 74 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 74 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 74 (variable -> llamada_objeto .)
    PLUS            reduce using rule 74 (variable -> llamada_objeto .)
    MINUS           reduce using rule 74 (variable -> llamada_objeto .)
    TIMES           reduce using rule 74 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 74 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 74 (variable -> llamada_objeto .)
    RETURN          reduce using rule 74 (variable -> llamada_objeto .)
    ID              reduce using rule 74 (variable -> llamada_objeto .)
    READ            reduce using rule 74 (variable -> llamada_objeto .)
    WRITE           reduce using rule 74 (variable -> llamada_objeto .)
    IF              reduce using rule 74 (variable -> llamada_objeto .)
    CTEF            reduce using rule 74 (variable -> llamada_objeto .)
    CTEI            reduce using rule 74 (variable -> llamada_objeto .)
    INT             reduce using rule 74 (variable -> llamada_objeto .)
    FLOAT           reduce using rule 74 (variable -> llamada_objeto .)
    STRING          reduce using rule 74 (variable -> llamada_objeto .)
    BOOL            reduce using rule 74 (variable -> llamada_objeto .)
    WHILE           reduce using rule 74 (variable -> llamada_objeto .)
    FROM            reduce using rule 74 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 74 (variable -> llamada_objeto .)
    RPAREN          reduce using rule 74 (variable -> llamada_objeto .)
    SEMICOLON       reduce using rule 74 (variable -> llamada_objeto .)
    COMMA           reduce using rule 74 (variable -> llamada_objeto .)
    RBRACKET        reduce using rule 74 (variable -> llamada_objeto .)
    TO              reduce using rule 74 (variable -> llamada_objeto .)
    DO              reduce using rule 74 (variable -> llamada_objeto .)
    EQUAL           reduce using rule 74 (variable -> llamada_objeto .)


state 110

    (49) expresion -> LPAREN expresion . RPAREN
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RPAREN          shift and go to state 131
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 111

    (64) returns -> RETURN expresion . SEMICOLON
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    SEMICOLON       shift and go to state 132
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 112

    (65) llamada_funcion -> ID LPAREN . param_llamada RPAREN
    (66) param_llamada -> . expresion
    (67) param_llamada -> . expresion COMMA param_llamada
    (68) param_llamada -> . empty
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (92) empty -> .
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    RPAREN          reduce using rule 92 (empty -> .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    param_llamada                  shift and go to state 133
    expresion                      shift and go to state 134
    empty                          shift and go to state 135
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 113

    (69) llamada_objeto -> ID DOT . ID LPAREN param_llamada RPAREN
    (75) variable_op -> DOT . ID

    ID              shift and go to state 136


state 114

    (73) variable -> ID variable_op .

    EQUAL           reduce using rule 73 (variable -> ID variable_op .)
    SAME            reduce using rule 73 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 73 (variable -> ID variable_op .)
    GTHAN           reduce using rule 73 (variable -> ID variable_op .)
    LTHAN           reduce using rule 73 (variable -> ID variable_op .)
    PLUS            reduce using rule 73 (variable -> ID variable_op .)
    MINUS           reduce using rule 73 (variable -> ID variable_op .)
    TIMES           reduce using rule 73 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 73 (variable -> ID variable_op .)
    LPAREN          reduce using rule 73 (variable -> ID variable_op .)
    RETURN          reduce using rule 73 (variable -> ID variable_op .)
    ID              reduce using rule 73 (variable -> ID variable_op .)
    READ            reduce using rule 73 (variable -> ID variable_op .)
    WRITE           reduce using rule 73 (variable -> ID variable_op .)
    IF              reduce using rule 73 (variable -> ID variable_op .)
    CTEF            reduce using rule 73 (variable -> ID variable_op .)
    CTEI            reduce using rule 73 (variable -> ID variable_op .)
    INT             reduce using rule 73 (variable -> ID variable_op .)
    FLOAT           reduce using rule 73 (variable -> ID variable_op .)
    STRING          reduce using rule 73 (variable -> ID variable_op .)
    BOOL            reduce using rule 73 (variable -> ID variable_op .)
    WHILE           reduce using rule 73 (variable -> ID variable_op .)
    FROM            reduce using rule 73 (variable -> ID variable_op .)
    RBRACE          reduce using rule 73 (variable -> ID variable_op .)
    RPAREN          reduce using rule 73 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 73 (variable -> ID variable_op .)
    COMMA           reduce using rule 73 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 73 (variable -> ID variable_op .)
    TO              reduce using rule 73 (variable -> ID variable_op .)
    DO              reduce using rule 73 (variable -> ID variable_op .)


state 115

    (76) variable_op -> LBRACKET . expresion RBRACKET
    (77) variable_op -> LBRACKET . expresion RBRACKET LBRACKET expresion RBRACKET
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 137
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 116

    (78) variable_op -> empty .

    EQUAL           reduce using rule 78 (variable_op -> empty .)
    SAME            reduce using rule 78 (variable_op -> empty .)
    NOTEQ           reduce using rule 78 (variable_op -> empty .)
    GTHAN           reduce using rule 78 (variable_op -> empty .)
    LTHAN           reduce using rule 78 (variable_op -> empty .)
    PLUS            reduce using rule 78 (variable_op -> empty .)
    MINUS           reduce using rule 78 (variable_op -> empty .)
    TIMES           reduce using rule 78 (variable_op -> empty .)
    DIVIDE          reduce using rule 78 (variable_op -> empty .)
    LPAREN          reduce using rule 78 (variable_op -> empty .)
    RETURN          reduce using rule 78 (variable_op -> empty .)
    ID              reduce using rule 78 (variable_op -> empty .)
    READ            reduce using rule 78 (variable_op -> empty .)
    WRITE           reduce using rule 78 (variable_op -> empty .)
    IF              reduce using rule 78 (variable_op -> empty .)
    CTEF            reduce using rule 78 (variable_op -> empty .)
    CTEI            reduce using rule 78 (variable_op -> empty .)
    INT             reduce using rule 78 (variable_op -> empty .)
    FLOAT           reduce using rule 78 (variable_op -> empty .)
    STRING          reduce using rule 78 (variable_op -> empty .)
    BOOL            reduce using rule 78 (variable_op -> empty .)
    WHILE           reduce using rule 78 (variable_op -> empty .)
    FROM            reduce using rule 78 (variable_op -> empty .)
    RBRACE          reduce using rule 78 (variable_op -> empty .)
    RPAREN          reduce using rule 78 (variable_op -> empty .)
    SEMICOLON       reduce using rule 78 (variable_op -> empty .)
    COMMA           reduce using rule 78 (variable_op -> empty .)
    RBRACKET        reduce using rule 78 (variable_op -> empty .)
    TO              reduce using rule 78 (variable_op -> empty .)
    DO              reduce using rule 78 (variable_op -> empty .)


state 117

    (70) lectura -> READ LPAREN . variable op_lectura RPAREN SEMICOLON
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 108

    variable                       shift and go to state 138
    llamada_objeto                 shift and go to state 109

state 118

    (79) escritura -> WRITE LPAREN . type_escritura op_escritura RPAREN SEMICOLON
    (80) type_escritura -> . CTESTRING
    (81) type_escritura -> . expresion
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 140
    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    type_escritura                 shift and go to state 139
    expresion                      shift and go to state 141
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 119

    (85) decision -> IF LPAREN . expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 142
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 120

    (90) condicional -> WHILE LPAREN . expresion RPAREN DO LBRACE estatutos RBRACE
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 143
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 121

    (91) no_condicional -> FROM variable . EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 144


state 122

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 145


state 123

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    ID              reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    INT             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FLOAT           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    STRING          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    BOOL            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 124

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 125

    (19) params_op -> COMMA var_def params_op .

    RPAREN          reduce using rule 19 (params_op -> COMMA var_def params_op .)


state 126

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    ID              reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    INT             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FLOAT           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    STRING          reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    BOOL            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 127

    (10) op_func -> funcion_def op_func .

    RBRACE          reduce using rule 10 (op_func -> funcion_def op_func .)


state 128

    (13) op_var -> var_def SEMICOLON op_var .

    FUNC            reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)
    RBRACE          reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)


state 129

    (47) expresion -> expresion binop expresion .
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 47 (expresion -> expresion binop expresion .)
    RETURN          reduce using rule 47 (expresion -> expresion binop expresion .)
    ID              reduce using rule 47 (expresion -> expresion binop expresion .)
    READ            reduce using rule 47 (expresion -> expresion binop expresion .)
    WRITE           reduce using rule 47 (expresion -> expresion binop expresion .)
    IF              reduce using rule 47 (expresion -> expresion binop expresion .)
    CTEF            reduce using rule 47 (expresion -> expresion binop expresion .)
    CTEI            reduce using rule 47 (expresion -> expresion binop expresion .)
    INT             reduce using rule 47 (expresion -> expresion binop expresion .)
    FLOAT           reduce using rule 47 (expresion -> expresion binop expresion .)
    STRING          reduce using rule 47 (expresion -> expresion binop expresion .)
    BOOL            reduce using rule 47 (expresion -> expresion binop expresion .)
    WHILE           reduce using rule 47 (expresion -> expresion binop expresion .)
    FROM            reduce using rule 47 (expresion -> expresion binop expresion .)
    RBRACE          reduce using rule 47 (expresion -> expresion binop expresion .)
    RPAREN          reduce using rule 47 (expresion -> expresion binop expresion .)
    SEMICOLON       reduce using rule 47 (expresion -> expresion binop expresion .)
    COMMA           reduce using rule 47 (expresion -> expresion binop expresion .)
    RBRACKET        reduce using rule 47 (expresion -> expresion binop expresion .)
    TO              reduce using rule 47 (expresion -> expresion binop expresion .)
    DO              reduce using rule 47 (expresion -> expresion binop expresion .)
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

  ! SAME            [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! NOTEQ           [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! GTHAN           [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! LTHAN           [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! PLUS            [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! MINUS           [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! TIMES           [ reduce using rule 47 (expresion -> expresion binop expresion .) ]
  ! DIVIDE          [ reduce using rule 47 (expresion -> expresion binop expresion .) ]

    binop                          shift and go to state 93

state 130

    (46) asignacion -> variable EQUAL expresion . SEMICOLON
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    SEMICOLON       shift and go to state 146
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 131

    (49) expresion -> LPAREN expresion RPAREN .

    SAME            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    NOTEQ           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    READ            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    WRITE           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    INT             reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    BOOL            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 49 (expresion -> LPAREN expresion RPAREN .)


state 132

    (64) returns -> RETURN expresion SEMICOLON .

    LPAREN          reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    PLUS            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    MINUS           reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    CTEF            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    CTEI            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    INT             reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    FLOAT           reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    STRING          reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    BOOL            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 64 (returns -> RETURN expresion SEMICOLON .)


state 133

    (65) llamada_funcion -> ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 147


state 134

    (66) param_llamada -> expresion .
    (67) param_llamada -> expresion . COMMA param_llamada
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RPAREN          reduce using rule 66 (param_llamada -> expresion .)
    COMMA           shift and go to state 148
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 135

    (68) param_llamada -> empty .

    RPAREN          reduce using rule 68 (param_llamada -> empty .)


state 136

    (69) llamada_objeto -> ID DOT ID . LPAREN param_llamada RPAREN
    (75) variable_op -> DOT ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 149
    EQUAL           reduce using rule 75 (variable_op -> DOT ID .)
    SAME            reduce using rule 75 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 75 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 75 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 75 (variable_op -> DOT ID .)
    PLUS            reduce using rule 75 (variable_op -> DOT ID .)
    MINUS           reduce using rule 75 (variable_op -> DOT ID .)
    TIMES           reduce using rule 75 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 75 (variable_op -> DOT ID .)
    RETURN          reduce using rule 75 (variable_op -> DOT ID .)
    ID              reduce using rule 75 (variable_op -> DOT ID .)
    READ            reduce using rule 75 (variable_op -> DOT ID .)
    WRITE           reduce using rule 75 (variable_op -> DOT ID .)
    IF              reduce using rule 75 (variable_op -> DOT ID .)
    CTEF            reduce using rule 75 (variable_op -> DOT ID .)
    CTEI            reduce using rule 75 (variable_op -> DOT ID .)
    INT             reduce using rule 75 (variable_op -> DOT ID .)
    FLOAT           reduce using rule 75 (variable_op -> DOT ID .)
    STRING          reduce using rule 75 (variable_op -> DOT ID .)
    BOOL            reduce using rule 75 (variable_op -> DOT ID .)
    WHILE           reduce using rule 75 (variable_op -> DOT ID .)
    FROM            reduce using rule 75 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 75 (variable_op -> DOT ID .)
    RPAREN          reduce using rule 75 (variable_op -> DOT ID .)
    SEMICOLON       reduce using rule 75 (variable_op -> DOT ID .)
    COMMA           reduce using rule 75 (variable_op -> DOT ID .)
    RBRACKET        reduce using rule 75 (variable_op -> DOT ID .)
    TO              reduce using rule 75 (variable_op -> DOT ID .)
    DO              reduce using rule 75 (variable_op -> DOT ID .)

  ! LPAREN          [ reduce using rule 75 (variable_op -> DOT ID .) ]


state 137

    (76) variable_op -> LBRACKET expresion . RBRACKET
    (77) variable_op -> LBRACKET expresion . RBRACKET LBRACKET expresion RBRACKET
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RBRACKET        shift and go to state 150
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 138

    (70) lectura -> READ LPAREN variable . op_lectura RPAREN SEMICOLON
    (71) op_lectura -> . COMMA variable op_lectura
    (72) op_lectura -> . empty
    (92) empty -> .

    COMMA           shift and go to state 152
    RPAREN          reduce using rule 92 (empty -> .)

    op_lectura                     shift and go to state 151
    empty                          shift and go to state 153

state 139

    (79) escritura -> WRITE LPAREN type_escritura . op_escritura RPAREN SEMICOLON
    (82) op_escritura -> . COMMA CTESTRING op_escritura
    (83) op_escritura -> . COMMA expresion op_escritura
    (84) op_escritura -> . empty
    (92) empty -> .

    COMMA           shift and go to state 155
    RPAREN          reduce using rule 92 (empty -> .)

    op_escritura                   shift and go to state 154
    empty                          shift and go to state 156

state 140

    (80) type_escritura -> CTESTRING .

    COMMA           reduce using rule 80 (type_escritura -> CTESTRING .)
    RPAREN          reduce using rule 80 (type_escritura -> CTESTRING .)


state 141

    (81) type_escritura -> expresion .
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    COMMA           reduce using rule 81 (type_escritura -> expresion .)
    RPAREN          reduce using rule 81 (type_escritura -> expresion .)
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 142

    (85) decision -> IF LPAREN expresion . RPAREN THEN LBRACE estatutos RBRACE op_decision
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RPAREN          shift and go to state 157
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 143

    (90) condicional -> WHILE LPAREN expresion . RPAREN DO LBRACE estatutos RBRACE
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RPAREN          shift and go to state 158
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 144

    (91) no_condicional -> FROM variable EQUAL . expresion TO expresion DO LBRACE estatutos RBRACE
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    variable                       shift and go to state 107
    expresion                      shift and go to state 159
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    llamada_objeto                 shift and go to state 109

state 145

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 146

    (46) asignacion -> variable EQUAL expresion SEMICOLON .

    LPAREN          reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    ID              reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    READ            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WRITE           reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    IF              reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    PLUS            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    MINUS           reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEF            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEI            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    INT             reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    STRING          reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    BOOL            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FROM            reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 46 (asignacion -> variable EQUAL expresion SEMICOLON .)


state 147

    (65) llamada_funcion -> ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 65 (llamada_funcion -> ID LPAREN param_llamada RPAREN .)


state 148

    (67) param_llamada -> expresion COMMA . param_llamada
    (66) param_llamada -> . expresion
    (67) param_llamada -> . expresion COMMA param_llamada
    (68) param_llamada -> . empty
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (92) empty -> .
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    RPAREN          reduce using rule 92 (empty -> .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 134
    param_llamada                  shift and go to state 160
    empty                          shift and go to state 135
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 149

    (69) llamada_objeto -> ID DOT ID LPAREN . param_llamada RPAREN
    (66) param_llamada -> . expresion
    (67) param_llamada -> . expresion COMMA param_llamada
    (68) param_llamada -> . empty
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (92) empty -> .
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    RPAREN          reduce using rule 92 (empty -> .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    param_llamada                  shift and go to state 161
    expresion                      shift and go to state 134
    empty                          shift and go to state 135
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 150

    (76) variable_op -> LBRACKET expresion RBRACKET .
    (77) variable_op -> LBRACKET expresion RBRACKET . LBRACKET expresion RBRACKET

    EQUAL           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    ID              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    READ            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    IF              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    INT             reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    FLOAT           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    STRING          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    BOOL            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    TO              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    DO              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET .)
    LBRACKET        shift and go to state 162


state 151

    (70) lectura -> READ LPAREN variable op_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 152

    (71) op_lectura -> COMMA . variable op_lectura
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 108

    variable                       shift and go to state 164
    llamada_objeto                 shift and go to state 109

state 153

    (72) op_lectura -> empty .

    RPAREN          reduce using rule 72 (op_lectura -> empty .)


state 154

    (79) escritura -> WRITE LPAREN type_escritura op_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 165


state 155

    (82) op_escritura -> COMMA . CTESTRING op_escritura
    (83) op_escritura -> COMMA . expresion op_escritura
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 166
    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 167
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 156

    (84) op_escritura -> empty .

    RPAREN          reduce using rule 84 (op_escritura -> empty .)


state 157

    (85) decision -> IF LPAREN expresion RPAREN . THEN LBRACE estatutos RBRACE op_decision

    THEN            shift and go to state 168


state 158

    (90) condicional -> WHILE LPAREN expresion RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 169


state 159

    (91) no_condicional -> FROM variable EQUAL expresion . TO expresion DO LBRACE estatutos RBRACE
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    TO              shift and go to state 170
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 160

    (67) param_llamada -> expresion COMMA param_llamada .

    RPAREN          reduce using rule 67 (param_llamada -> expresion COMMA param_llamada .)


state 161

    (69) llamada_objeto -> ID DOT ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 171


state 162

    (77) variable_op -> LBRACKET expresion RBRACKET LBRACKET . expresion RBRACKET
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    expresion                      shift and go to state 172
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    variable                       shift and go to state 107
    llamada_objeto                 shift and go to state 109

state 163

    (70) lectura -> READ LPAREN variable op_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 173


state 164

    (71) op_lectura -> COMMA variable . op_lectura
    (71) op_lectura -> . COMMA variable op_lectura
    (72) op_lectura -> . empty
    (92) empty -> .

    COMMA           shift and go to state 152
    RPAREN          reduce using rule 92 (empty -> .)

    op_lectura                     shift and go to state 174
    empty                          shift and go to state 153

state 165

    (79) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 166

    (82) op_escritura -> COMMA CTESTRING . op_escritura
    (82) op_escritura -> . COMMA CTESTRING op_escritura
    (83) op_escritura -> . COMMA expresion op_escritura
    (84) op_escritura -> . empty
    (92) empty -> .

    COMMA           shift and go to state 155
    RPAREN          reduce using rule 92 (empty -> .)

    op_escritura                   shift and go to state 176
    empty                          shift and go to state 156

state 167

    (83) op_escritura -> COMMA expresion . op_escritura
    (47) expresion -> expresion . binop expresion
    (82) op_escritura -> . COMMA CTESTRING op_escritura
    (83) op_escritura -> . COMMA expresion op_escritura
    (84) op_escritura -> . empty
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE
    (92) empty -> .

    COMMA           shift and go to state 155
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101
    RPAREN          reduce using rule 92 (empty -> .)

    op_escritura                   shift and go to state 177
    binop                          shift and go to state 93
    empty                          shift and go to state 156

state 168

    (85) decision -> IF LPAREN expresion RPAREN THEN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 178


state 169

    (90) condicional -> WHILE LPAREN expresion RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 179


state 170

    (91) no_condicional -> FROM variable EQUAL expresion TO . expresion DO LBRACE estatutos RBRACE
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 67
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    ID              shift and go to state 108

    variable                       shift and go to state 107
    expresion                      shift and go to state 180
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    llamada_objeto                 shift and go to state 109

state 171

    (69) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    EQUAL           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    SAME            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    NOTEQ           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    GTHAN           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LTHAN           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    PLUS            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    MINUS           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TIMES           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DIVIDE          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LPAREN          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RETURN          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    ID              reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    READ            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WRITE           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    IF              reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEF            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEI            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    INT             reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FLOAT           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    STRING          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    BOOL            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WHILE           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FROM            reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACE          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RPAREN          reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    COMMA           reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACKET        reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TO              reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DO              reduce using rule 69 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)


state 172

    (77) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion . RBRACKET
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    RBRACKET        shift and go to state 181
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 173

    (70) lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .

    LPAREN          reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    ID              reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    PLUS            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    MINUS           reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEF            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEI            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    INT             reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FLOAT           reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    STRING          reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    BOOL            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FROM            reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)


state 174

    (71) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 71 (op_lectura -> COMMA variable op_lectura .)


state 175

    (79) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .

    LPAREN          reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    ID              reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    PLUS            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    MINUS           reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEF            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEI            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    INT             reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FLOAT           reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    STRING          reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    BOOL            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FROM            reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)


state 176

    (82) op_escritura -> COMMA CTESTRING op_escritura .

    RPAREN          reduce using rule 82 (op_escritura -> COMMA CTESTRING op_escritura .)


state 177

    (83) op_escritura -> COMMA expresion op_escritura .

    RPAREN          reduce using rule 83 (op_escritura -> COMMA expresion op_escritura .)


state 178

    (85) decision -> IF LPAREN expresion RPAREN THEN LBRACE . estatutos RBRACE op_decision
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 92 (empty -> .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

    expresion                      shift and go to state 56
    estatutos                      shift and go to state 182
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    variable                       shift and go to state 65
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 179

    (90) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 92 (empty -> .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

    expresion                      shift and go to state 56
    estatutos                      shift and go to state 183
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    variable                       shift and go to state 65
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 180

    (91) no_condicional -> FROM variable EQUAL expresion TO expresion . DO LBRACE estatutos RBRACE
    (47) expresion -> expresion . binop expresion
    (51) binop -> . SAME
    (52) binop -> . NOTEQ
    (53) binop -> . GTHAN
    (54) binop -> . LTHAN
    (55) binop -> . PLUS
    (56) binop -> . MINUS
    (57) binop -> . TIMES
    (58) binop -> . DIVIDE

    DO              shift and go to state 184
    SAME            shift and go to state 94
    NOTEQ           shift and go to state 95
    GTHAN           shift and go to state 96
    LTHAN           shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101

    binop                          shift and go to state 93

state 181

    (77) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .

    EQUAL           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    ID              reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    READ            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    IF              reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    INT             reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FLOAT           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    STRING          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    BOOL            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TO              reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DO              reduce using rule 77 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)


state 182

    (85) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 185


state 183

    (90) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 186


state 184

    (91) no_condicional -> FROM variable EQUAL expresion TO expresion DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 187


state 185

    (85) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE . op_decision
    (86) op_decision -> . ELSE LBRACE estatutos RBRACE
    (87) op_decision -> . empty
    (92) empty -> .

    ELSE            shift and go to state 189
    LPAREN          reduce using rule 92 (empty -> .)
    RETURN          reduce using rule 92 (empty -> .)
    ID              reduce using rule 92 (empty -> .)
    READ            reduce using rule 92 (empty -> .)
    WRITE           reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    PLUS            reduce using rule 92 (empty -> .)
    MINUS           reduce using rule 92 (empty -> .)
    CTEF            reduce using rule 92 (empty -> .)
    CTEI            reduce using rule 92 (empty -> .)
    INT             reduce using rule 92 (empty -> .)
    FLOAT           reduce using rule 92 (empty -> .)
    STRING          reduce using rule 92 (empty -> .)
    BOOL            reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FROM            reduce using rule 92 (empty -> .)
    RBRACE          reduce using rule 92 (empty -> .)

    op_decision                    shift and go to state 188
    empty                          shift and go to state 190

state 186

    (90) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    INT             reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    STRING          reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    BOOL            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 90 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)


state 187

    (91) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 92 (empty -> .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

    variable                       shift and go to state 65
    expresion                      shift and go to state 56
    estatutos                      shift and go to state 191
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 188

    (85) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .

    LPAREN          reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RETURN          reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    ID              reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    READ            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WRITE           reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    IF              reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    PLUS            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    MINUS           reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEF            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEI            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    INT             reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FLOAT           reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    STRING          reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    BOOL            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WHILE           reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FROM            reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RBRACE          reduce using rule 85 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)


state 189

    (86) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 192


state 190

    (87) op_decision -> empty .

    LPAREN          reduce using rule 87 (op_decision -> empty .)
    RETURN          reduce using rule 87 (op_decision -> empty .)
    ID              reduce using rule 87 (op_decision -> empty .)
    READ            reduce using rule 87 (op_decision -> empty .)
    WRITE           reduce using rule 87 (op_decision -> empty .)
    IF              reduce using rule 87 (op_decision -> empty .)
    PLUS            reduce using rule 87 (op_decision -> empty .)
    MINUS           reduce using rule 87 (op_decision -> empty .)
    CTEF            reduce using rule 87 (op_decision -> empty .)
    CTEI            reduce using rule 87 (op_decision -> empty .)
    INT             reduce using rule 87 (op_decision -> empty .)
    FLOAT           reduce using rule 87 (op_decision -> empty .)
    STRING          reduce using rule 87 (op_decision -> empty .)
    BOOL            reduce using rule 87 (op_decision -> empty .)
    WHILE           reduce using rule 87 (op_decision -> empty .)
    FROM            reduce using rule 87 (op_decision -> empty .)
    RBRACE          reduce using rule 87 (op_decision -> empty .)


state 191

    (91) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 193


state 192

    (86) op_decision -> ELSE LBRACE . estatutos RBRACE
    (33) estatutos -> . estatuto
    (34) estatutos -> . estatuto estatutos
    (35) estatutos -> . empty
    (36) estatuto -> . asignacion
    (37) estatuto -> . expresion
    (38) estatuto -> . returns
    (39) estatuto -> . llamada_funcion SEMICOLON
    (40) estatuto -> . llamada_objeto SEMICOLON
    (41) estatuto -> . var_def SEMICOLON
    (42) estatuto -> . lectura
    (43) estatuto -> . escritura
    (44) estatuto -> . decision
    (45) estatuto -> . repeticion
    (92) empty -> .
    (46) asignacion -> . variable EQUAL expresion SEMICOLON
    (47) expresion -> . expresion binop expresion
    (48) expresion -> . plus_minus expresion
    (49) expresion -> . LPAREN expresion RPAREN
    (50) expresion -> . var_cte
    (64) returns -> . RETURN expresion SEMICOLON
    (65) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (69) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (70) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (79) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (85) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (88) repeticion -> . condicional
    (89) repeticion -> . no_condicional
    (73) variable -> . ID variable_op
    (74) variable -> . llamada_objeto
    (59) plus_minus -> . PLUS
    (60) plus_minus -> . MINUS
    (61) var_cte -> . variable
    (62) var_cte -> . CTEF
    (63) var_cte -> . CTEI
    (32) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (31) type_simple -> . BOOL
    (90) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (91) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 92 (empty -> .)
    LPAREN          shift and go to state 67
    RETURN          shift and go to state 69
    ID              shift and go to state 70
    READ            shift and go to state 71
    WRITE           shift and go to state 72
    IF              shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CTEF            shift and go to state 78
    CTEI            shift and go to state 79
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 80
    FROM            shift and go to state 81

    estatutos                      shift and go to state 194
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    expresion                      shift and go to state 56
    returns                        shift and go to state 57
    llamada_funcion                shift and go to state 58
    llamada_objeto                 shift and go to state 59
    var_def                        shift and go to state 60
    lectura                        shift and go to state 61
    escritura                      shift and go to state 62
    decision                       shift and go to state 63
    repeticion                     shift and go to state 64
    variable                       shift and go to state 65
    plus_minus                     shift and go to state 66
    var_cte                        shift and go to state 68
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 74
    no_condicional                 shift and go to state 75

state 193

    (91) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    INT             reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    STRING          reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    BOOL            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 91 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)


state 194

    (86) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 195


state 195

    (86) op_decision -> ELSE LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    ID              reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    READ            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    IF              reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    INT             reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    STRING          reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    BOOL            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FROM            reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 86 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 70 resolved as shift
WARNING: shift/reduce conflict for SAME in state 106 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 106 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for SAME in state 129 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 129 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 129 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 129 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 136 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 53
WARNING: reduce/reduce conflict in state 70 resolved using rule (type_compuesto -> ID)
WARNING: rejected rule (empty -> <empty>) in state 70
