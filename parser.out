Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaraciones main
Rule 2     declaraciones -> empty
Rule 3     declaraciones -> var_def declaraciones
Rule 4     declaraciones -> funcion_def declaraciones
Rule 5     declaraciones -> clase_def declaraciones
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> ID COLON type_simple params_op
Rule 18    params -> empty
Rule 19    params_op -> COMMA params
Rule 20    params_op -> empty
Rule 21    bloque_func -> LBRACE op_var estatutos RBRACE
Rule 22    main -> MAIN LPAREN RPAREN bloque_func
Rule 23    var_def -> VAR type_compuesto ID SEMICOLON
Rule 24    var_def -> VAR type_simple ID op_vardef SEMICOLON
Rule 25    op_vardef -> LBRACKET CTEI RBRACKET
Rule 26    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 27    op_vardef -> empty
Rule 28    type_simple -> INT
Rule 29    type_simple -> FLOAT
Rule 30    type_simple -> STRING
Rule 31    type_compuesto -> ID
Rule 32    estatutos -> estatuto
Rule 33    estatutos -> estatuto estatutos
Rule 34    estatutos -> empty
Rule 35    estatuto -> asignacion
Rule 36    estatuto -> expresion
Rule 37    estatuto -> returns
Rule 38    estatuto -> llamada_funcion SEMICOLON
Rule 39    estatuto -> llamada_objeto SEMICOLON
Rule 40    estatuto -> lectura
Rule 41    estatuto -> escritura
Rule 42    estatuto -> decision
Rule 43    estatuto -> repeticion
Rule 44    asignacion -> variable EQUAL expresion SEMICOLON
Rule 45    expresion -> expresion binop expresion
Rule 46    expresion -> plus_minus expresion
Rule 47    expresion -> LPAREN expresion RPAREN
Rule 48    expresion -> var_cte
Rule 49    binop -> SAME
Rule 50    binop -> NOTEQ
Rule 51    binop -> GTHAN
Rule 52    binop -> LTHAN
Rule 53    binop -> PLUS
Rule 54    binop -> MINUS
Rule 55    binop -> TIMES
Rule 56    binop -> DIVIDE
Rule 57    plus_minus -> PLUS
Rule 58    plus_minus -> MINUS
Rule 59    var_cte -> variable
Rule 60    var_cte -> CTEF
Rule 61    var_cte -> CTEI
Rule 62    returns -> RETURN expresion SEMICOLON
Rule 63    llamada_funcion -> ID LPAREN param_llamada RPAREN
Rule 64    param_llamada -> expresion
Rule 65    param_llamada -> expresion COMMA param_llamada
Rule 66    param_llamada -> empty
Rule 67    llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN
Rule 68    lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON
Rule 69    op_lectura -> COMMA variable op_lectura
Rule 70    op_lectura -> empty
Rule 71    variable -> ID variable_op
Rule 72    variable -> llamada_objeto
Rule 73    variable_op -> DOT ID
Rule 74    variable_op -> LBRACKET expresion RBRACKET
Rule 75    variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
Rule 76    variable_op -> empty
Rule 77    escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
Rule 78    type_escritura -> CTESTRING
Rule 79    type_escritura -> expresion
Rule 80    op_escritura -> COMMA CTESTRING op_escritura
Rule 81    op_escritura -> COMMA expresion op_escritura
Rule 82    op_escritura -> empty
Rule 83    decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
Rule 84    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 85    op_decision -> empty
Rule 86    repeticion -> condicional
Rule 87    repeticion -> no_condicional
Rule 88    condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
Rule 89    no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
Rule 90    empty -> <empty>

Terminals, with rules where they appear

CLASS                : 6
COLON                : 17
COMMA                : 19 65 69 80 81
CTEF                 : 60
CTEI                 : 25 26 26 61
CTESTRING            : 78 80
DIVIDE               : 56
DO                   : 88 89
DOT                  : 67 73
ELSE                 : 84
EQUAL                : 44 89
FLOAT                : 29
FROM                 : 89
FUNC                 : 12
GTHAN                : 51
ID                   : 6 7 12 17 23 24 31 63 67 67 71 73
IF                   : 83
INHERIT              : 7
INT                  : 28
LBRACE               : 9 21 83 84 88 89
LBRACKET             : 25 26 26 74 75 75
LPAREN               : 12 22 47 63 67 68 77 83 88
LTHAN                : 52
MAIN                 : 22
MINUS                : 54 58
NOTEQ                : 50
PLUS                 : 53 57
RBRACE               : 9 21 83 84 88 89
RBRACKET             : 25 26 26 74 75 75
READ                 : 68
RET                  : 15
RETURN               : 62
RPAREN               : 12 22 47 63 67 68 77 83 88
SAME                 : 49
SEMICOLON            : 23 24 38 39 44 62 68 77
STRING               : 30
THEN                 : 83
TIMES                : 55
TO                   : 89
VAR                  : 23 24
WHILE                : 88
WRITE                : 77
error                : 

Nonterminals, with rules where they appear

asignacion           : 35
binop                : 45
bloque_clase         : 6
bloque_func          : 12 22
clase_def            : 5
clase_op             : 6
condicional          : 86
decision             : 42
declaraciones        : 1 3 4 5
empty                : 2 8 11 14 16 18 20 27 34 66 70 76 82 85
escritura            : 41
estatuto             : 32 33
estatutos            : 21 33 83 84 88 89
expresion            : 36 44 45 45 46 47 62 64 65 74 75 75 79 81 83 88 89 89
funcion_def          : 4 10
lectura              : 40
llamada_funcion      : 38
llamada_objeto       : 39 72
main                 : 1
no_condicional       : 87
op_decision          : 83
op_escritura         : 77 80 81
op_func              : 9
op_lectura           : 68 69
op_var               : 9 21
op_vardef            : 24
param_llamada        : 63 65 67
params               : 12 19
params_op            : 17
plus_minus           : 46
programa             : 0
repeticion           : 43
return_option        : 12
returns              : 37
type_compuesto       : 23
type_escritura       : 77
type_simple          : 15 17 24
var_cte              : 48
var_def              : 3 13
variable             : 44 59 68 69 89
variable_op          : 71

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaraciones main
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (90) empty -> .
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase

    MAIN            reduce using rule 90 (empty -> .)
    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9

    programa                       shift and go to state 1
    declaraciones                  shift and go to state 2
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaraciones . main
    (22) main -> . MAIN LPAREN RPAREN bloque_func

    MAIN            shift and go to state 11

    main                           shift and go to state 10

state 3

    (2) declaraciones -> empty .

    MAIN            reduce using rule 2 (declaraciones -> empty .)


state 4

    (3) declaraciones -> var_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (90) empty -> .
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase

    MAIN            reduce using rule 90 (empty -> .)
    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9

    var_def                        shift and go to state 4
    declaraciones                  shift and go to state 12
    empty                          shift and go to state 3
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6

state 5

    (4) declaraciones -> funcion_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (90) empty -> .
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase

    MAIN            reduce using rule 90 (empty -> .)
    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9

    funcion_def                    shift and go to state 5
    declaraciones                  shift and go to state 13
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    clase_def                      shift and go to state 6

state 6

    (5) declaraciones -> clase_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (90) empty -> .
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase

    MAIN            reduce using rule 90 (empty -> .)
    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9

    clase_def                      shift and go to state 6
    declaraciones                  shift and go to state 14
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5

state 7

    (23) var_def -> VAR . type_compuesto ID SEMICOLON
    (24) var_def -> VAR . type_simple ID op_vardef SEMICOLON
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    ID              shift and go to state 16
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_compuesto                 shift and go to state 15
    type_simple                    shift and go to state 17

state 8

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 21


state 9

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 22


state 10

    (1) programa -> declaraciones main .

    $end            reduce using rule 1 (programa -> declaraciones main .)


state 11

    (22) main -> MAIN . LPAREN RPAREN bloque_func

    LPAREN          shift and go to state 23


state 12

    (3) declaraciones -> var_def declaraciones .

    MAIN            reduce using rule 3 (declaraciones -> var_def declaraciones .)


state 13

    (4) declaraciones -> funcion_def declaraciones .

    MAIN            reduce using rule 4 (declaraciones -> funcion_def declaraciones .)


state 14

    (5) declaraciones -> clase_def declaraciones .

    MAIN            reduce using rule 5 (declaraciones -> clase_def declaraciones .)


state 15

    (23) var_def -> VAR type_compuesto . ID SEMICOLON

    ID              shift and go to state 24


state 16

    (31) type_compuesto -> ID .

    ID              reduce using rule 31 (type_compuesto -> ID .)


state 17

    (24) var_def -> VAR type_simple . ID op_vardef SEMICOLON

    ID              shift and go to state 25


state 18

    (28) type_simple -> INT .

    ID              reduce using rule 28 (type_simple -> INT .)
    COMMA           reduce using rule 28 (type_simple -> INT .)
    RPAREN          reduce using rule 28 (type_simple -> INT .)
    LBRACE          reduce using rule 28 (type_simple -> INT .)


state 19

    (29) type_simple -> FLOAT .

    ID              reduce using rule 29 (type_simple -> FLOAT .)
    COMMA           reduce using rule 29 (type_simple -> FLOAT .)
    RPAREN          reduce using rule 29 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 29 (type_simple -> FLOAT .)


state 20

    (30) type_simple -> STRING .

    ID              reduce using rule 30 (type_simple -> STRING .)
    COMMA           reduce using rule 30 (type_simple -> STRING .)
    RPAREN          reduce using rule 30 (type_simple -> STRING .)
    LBRACE          reduce using rule 30 (type_simple -> STRING .)


state 21

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 26


state 22

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (90) empty -> .

    INHERIT         shift and go to state 28
    LBRACE          reduce using rule 90 (empty -> .)

    clase_op                       shift and go to state 27
    empty                          shift and go to state 29

state 23

    (22) main -> MAIN LPAREN . RPAREN bloque_func

    RPAREN          shift and go to state 30


state 24

    (23) var_def -> VAR type_compuesto ID . SEMICOLON

    SEMICOLON       shift and go to state 31


state 25

    (24) var_def -> VAR type_simple ID . op_vardef SEMICOLON
    (25) op_vardef -> . LBRACKET CTEI RBRACKET
    (26) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (27) op_vardef -> . empty
    (90) empty -> .

    LBRACKET        shift and go to state 33
    SEMICOLON       reduce using rule 90 (empty -> .)

    op_vardef                      shift and go to state 32
    empty                          shift and go to state 34

state 26

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . ID COLON type_simple params_op
    (18) params -> . empty
    (90) empty -> .

    ID              shift and go to state 35
    RPAREN          reduce using rule 90 (empty -> .)

    params                         shift and go to state 36
    empty                          shift and go to state 37

state 27

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 39

    bloque_clase                   shift and go to state 38

state 28

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 40


state 29

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 30

    (22) main -> MAIN LPAREN RPAREN . bloque_func
    (21) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 42

    bloque_func                    shift and go to state 41

state 31

    (23) var_def -> VAR type_compuesto ID SEMICOLON .

    VAR             reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    FUNC            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CLASS           reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    MAIN            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    RBRACE          reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    LPAREN          reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    RETURN          reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    ID              reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    READ            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    WRITE           reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    IF              reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    PLUS            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    MINUS           reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CTEF            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CTEI            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    WHILE           reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)
    FROM            reduce using rule 23 (var_def -> VAR type_compuesto ID SEMICOLON .)


state 32

    (24) var_def -> VAR type_simple ID op_vardef . SEMICOLON

    SEMICOLON       shift and go to state 43


state 33

    (25) op_vardef -> LBRACKET . CTEI RBRACKET
    (26) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 44


state 34

    (27) op_vardef -> empty .

    SEMICOLON       reduce using rule 27 (op_vardef -> empty .)


state 35

    (17) params -> ID . COLON type_simple params_op

    COLON           shift and go to state 45


state 36

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 46


state 37

    (18) params -> empty .

    RPAREN          reduce using rule 18 (params -> empty .)


state 38

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    VAR             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 39

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (90) empty -> .

    VAR             shift and go to state 7
    FUNC            reduce using rule 90 (empty -> .)
    RBRACE          reduce using rule 90 (empty -> .)

    op_var                         shift and go to state 47
    var_def                        shift and go to state 48
    empty                          shift and go to state 49

state 40

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 41

    (22) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 22 (main -> MAIN LPAREN RPAREN bloque_func .)


state 42

    (21) bloque_func -> LBRACE . op_var estatutos RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (23) var_def -> . VAR type_compuesto ID SEMICOLON
    (24) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (90) empty -> .

    VAR             shift and go to state 7
    LPAREN          reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    WRITE           reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    FROM            reduce using rule 90 (empty -> .)
    RBRACE          reduce using rule 90 (empty -> .)

    op_var                         shift and go to state 50
    var_def                        shift and go to state 48
    empty                          shift and go to state 49

state 43

    (24) var_def -> VAR type_simple ID op_vardef SEMICOLON .

    VAR             reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FUNC            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CLASS           reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    MAIN            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RBRACE          reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    LPAREN          reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RETURN          reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    ID              reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    READ            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WRITE           reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    IF              reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    PLUS            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    MINUS           reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEF            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEI            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WHILE           reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FROM            reduce using rule 24 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)


state 44

    (25) op_vardef -> LBRACKET CTEI . RBRACKET
    (26) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 51


state 45

    (17) params -> ID COLON . type_simple params_op
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 52

state 46

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (90) empty -> .

    RET             shift and go to state 54
    LBRACE          reduce using rule 90 (empty -> .)

    return_option                  shift and go to state 53
    empty                          shift and go to state 55

state 47

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (90) empty -> .

    FUNC            shift and go to state 8
    RBRACE          reduce using rule 90 (empty -> .)

    op_func                        shift and go to state 56
    funcion_def                    shift and go to state 57
    empty                          shift and go to state 58

state 48

    (13) op_var -> var_def .

    FUNC            reduce using rule 13 (op_var -> var_def .)
    RBRACE          reduce using rule 13 (op_var -> var_def .)
    LPAREN          reduce using rule 13 (op_var -> var_def .)
    RETURN          reduce using rule 13 (op_var -> var_def .)
    ID              reduce using rule 13 (op_var -> var_def .)
    READ            reduce using rule 13 (op_var -> var_def .)
    WRITE           reduce using rule 13 (op_var -> var_def .)
    IF              reduce using rule 13 (op_var -> var_def .)
    PLUS            reduce using rule 13 (op_var -> var_def .)
    MINUS           reduce using rule 13 (op_var -> var_def .)
    CTEF            reduce using rule 13 (op_var -> var_def .)
    CTEI            reduce using rule 13 (op_var -> var_def .)
    WHILE           reduce using rule 13 (op_var -> var_def .)
    FROM            reduce using rule 13 (op_var -> var_def .)


state 49

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)
    LPAREN          reduce using rule 14 (op_var -> empty .)
    RETURN          reduce using rule 14 (op_var -> empty .)
    ID              reduce using rule 14 (op_var -> empty .)
    READ            reduce using rule 14 (op_var -> empty .)
    WRITE           reduce using rule 14 (op_var -> empty .)
    IF              reduce using rule 14 (op_var -> empty .)
    PLUS            reduce using rule 14 (op_var -> empty .)
    MINUS           reduce using rule 14 (op_var -> empty .)
    CTEF            reduce using rule 14 (op_var -> empty .)
    CTEI            reduce using rule 14 (op_var -> empty .)
    WHILE           reduce using rule 14 (op_var -> empty .)
    FROM            reduce using rule 14 (op_var -> empty .)


state 50

    (21) bloque_func -> LBRACE op_var . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

    estatutos                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    expresion                      shift and go to state 63
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    variable                       shift and go to state 71
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 51

    (25) op_vardef -> LBRACKET CTEI RBRACKET .
    (26) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 88


state 52

    (17) params -> ID COLON type_simple . params_op
    (19) params_op -> . COMMA params
    (20) params_op -> . empty
    (90) empty -> .

    COMMA           shift and go to state 90
    RPAREN          reduce using rule 90 (empty -> .)

    params_op                      shift and go to state 89
    empty                          shift and go to state 91

state 53

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (21) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 42

    bloque_func                    shift and go to state 92

state 54

    (15) return_option -> RET . type_simple
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 93

state 55

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 56

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 94


state 57

    (10) op_func -> funcion_def .

    RBRACE          reduce using rule 10 (op_func -> funcion_def .)


state 58

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 59

    (21) bloque_func -> LBRACE op_var estatutos . RBRACE

    RBRACE          shift and go to state 95


state 60

    (32) estatutos -> estatuto .
    (33) estatutos -> estatuto . estatutos
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 32 (estatutos -> estatuto .)
    RBRACE          reduce using rule 32 (estatutos -> estatuto .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

  ! RBRACE          [ reduce using rule 90 (empty -> .) ]

    estatuto                       shift and go to state 60
    estatutos                      shift and go to state 96
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    expresion                      shift and go to state 63
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    variable                       shift and go to state 71
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 61

    (34) estatutos -> empty .

    RBRACE          reduce using rule 34 (estatutos -> empty .)


state 62

    (35) estatuto -> asignacion .

    LPAREN          reduce using rule 35 (estatuto -> asignacion .)
    RETURN          reduce using rule 35 (estatuto -> asignacion .)
    ID              reduce using rule 35 (estatuto -> asignacion .)
    READ            reduce using rule 35 (estatuto -> asignacion .)
    WRITE           reduce using rule 35 (estatuto -> asignacion .)
    IF              reduce using rule 35 (estatuto -> asignacion .)
    PLUS            reduce using rule 35 (estatuto -> asignacion .)
    MINUS           reduce using rule 35 (estatuto -> asignacion .)
    CTEF            reduce using rule 35 (estatuto -> asignacion .)
    CTEI            reduce using rule 35 (estatuto -> asignacion .)
    WHILE           reduce using rule 35 (estatuto -> asignacion .)
    FROM            reduce using rule 35 (estatuto -> asignacion .)
    RBRACE          reduce using rule 35 (estatuto -> asignacion .)


state 63

    (36) estatuto -> expresion .
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          reduce using rule 36 (estatuto -> expresion .)
    RETURN          reduce using rule 36 (estatuto -> expresion .)
    ID              reduce using rule 36 (estatuto -> expresion .)
    READ            reduce using rule 36 (estatuto -> expresion .)
    WRITE           reduce using rule 36 (estatuto -> expresion .)
    IF              reduce using rule 36 (estatuto -> expresion .)
    CTEF            reduce using rule 36 (estatuto -> expresion .)
    CTEI            reduce using rule 36 (estatuto -> expresion .)
    WHILE           reduce using rule 36 (estatuto -> expresion .)
    FROM            reduce using rule 36 (estatuto -> expresion .)
    RBRACE          reduce using rule 36 (estatuto -> expresion .)
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

  ! PLUS            [ reduce using rule 36 (estatuto -> expresion .) ]
  ! MINUS           [ reduce using rule 36 (estatuto -> expresion .) ]

    binop                          shift and go to state 97

state 64

    (37) estatuto -> returns .

    LPAREN          reduce using rule 37 (estatuto -> returns .)
    RETURN          reduce using rule 37 (estatuto -> returns .)
    ID              reduce using rule 37 (estatuto -> returns .)
    READ            reduce using rule 37 (estatuto -> returns .)
    WRITE           reduce using rule 37 (estatuto -> returns .)
    IF              reduce using rule 37 (estatuto -> returns .)
    PLUS            reduce using rule 37 (estatuto -> returns .)
    MINUS           reduce using rule 37 (estatuto -> returns .)
    CTEF            reduce using rule 37 (estatuto -> returns .)
    CTEI            reduce using rule 37 (estatuto -> returns .)
    WHILE           reduce using rule 37 (estatuto -> returns .)
    FROM            reduce using rule 37 (estatuto -> returns .)
    RBRACE          reduce using rule 37 (estatuto -> returns .)


state 65

    (38) estatuto -> llamada_funcion . SEMICOLON

    SEMICOLON       shift and go to state 106


state 66

    (39) estatuto -> llamada_objeto . SEMICOLON
    (72) variable -> llamada_objeto .

    SEMICOLON       shift and go to state 107
    EQUAL           reduce using rule 72 (variable -> llamada_objeto .)
    SAME            reduce using rule 72 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 72 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 72 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 72 (variable -> llamada_objeto .)
    PLUS            reduce using rule 72 (variable -> llamada_objeto .)
    MINUS           reduce using rule 72 (variable -> llamada_objeto .)
    TIMES           reduce using rule 72 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 72 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 72 (variable -> llamada_objeto .)
    RETURN          reduce using rule 72 (variable -> llamada_objeto .)
    ID              reduce using rule 72 (variable -> llamada_objeto .)
    READ            reduce using rule 72 (variable -> llamada_objeto .)
    WRITE           reduce using rule 72 (variable -> llamada_objeto .)
    IF              reduce using rule 72 (variable -> llamada_objeto .)
    CTEF            reduce using rule 72 (variable -> llamada_objeto .)
    CTEI            reduce using rule 72 (variable -> llamada_objeto .)
    WHILE           reduce using rule 72 (variable -> llamada_objeto .)
    FROM            reduce using rule 72 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 72 (variable -> llamada_objeto .)


state 67

    (40) estatuto -> lectura .

    LPAREN          reduce using rule 40 (estatuto -> lectura .)
    RETURN          reduce using rule 40 (estatuto -> lectura .)
    ID              reduce using rule 40 (estatuto -> lectura .)
    READ            reduce using rule 40 (estatuto -> lectura .)
    WRITE           reduce using rule 40 (estatuto -> lectura .)
    IF              reduce using rule 40 (estatuto -> lectura .)
    PLUS            reduce using rule 40 (estatuto -> lectura .)
    MINUS           reduce using rule 40 (estatuto -> lectura .)
    CTEF            reduce using rule 40 (estatuto -> lectura .)
    CTEI            reduce using rule 40 (estatuto -> lectura .)
    WHILE           reduce using rule 40 (estatuto -> lectura .)
    FROM            reduce using rule 40 (estatuto -> lectura .)
    RBRACE          reduce using rule 40 (estatuto -> lectura .)


state 68

    (41) estatuto -> escritura .

    LPAREN          reduce using rule 41 (estatuto -> escritura .)
    RETURN          reduce using rule 41 (estatuto -> escritura .)
    ID              reduce using rule 41 (estatuto -> escritura .)
    READ            reduce using rule 41 (estatuto -> escritura .)
    WRITE           reduce using rule 41 (estatuto -> escritura .)
    IF              reduce using rule 41 (estatuto -> escritura .)
    PLUS            reduce using rule 41 (estatuto -> escritura .)
    MINUS           reduce using rule 41 (estatuto -> escritura .)
    CTEF            reduce using rule 41 (estatuto -> escritura .)
    CTEI            reduce using rule 41 (estatuto -> escritura .)
    WHILE           reduce using rule 41 (estatuto -> escritura .)
    FROM            reduce using rule 41 (estatuto -> escritura .)
    RBRACE          reduce using rule 41 (estatuto -> escritura .)


state 69

    (42) estatuto -> decision .

    LPAREN          reduce using rule 42 (estatuto -> decision .)
    RETURN          reduce using rule 42 (estatuto -> decision .)
    ID              reduce using rule 42 (estatuto -> decision .)
    READ            reduce using rule 42 (estatuto -> decision .)
    WRITE           reduce using rule 42 (estatuto -> decision .)
    IF              reduce using rule 42 (estatuto -> decision .)
    PLUS            reduce using rule 42 (estatuto -> decision .)
    MINUS           reduce using rule 42 (estatuto -> decision .)
    CTEF            reduce using rule 42 (estatuto -> decision .)
    CTEI            reduce using rule 42 (estatuto -> decision .)
    WHILE           reduce using rule 42 (estatuto -> decision .)
    FROM            reduce using rule 42 (estatuto -> decision .)
    RBRACE          reduce using rule 42 (estatuto -> decision .)


state 70

    (43) estatuto -> repeticion .

    LPAREN          reduce using rule 43 (estatuto -> repeticion .)
    RETURN          reduce using rule 43 (estatuto -> repeticion .)
    ID              reduce using rule 43 (estatuto -> repeticion .)
    READ            reduce using rule 43 (estatuto -> repeticion .)
    WRITE           reduce using rule 43 (estatuto -> repeticion .)
    IF              reduce using rule 43 (estatuto -> repeticion .)
    PLUS            reduce using rule 43 (estatuto -> repeticion .)
    MINUS           reduce using rule 43 (estatuto -> repeticion .)
    CTEF            reduce using rule 43 (estatuto -> repeticion .)
    CTEI            reduce using rule 43 (estatuto -> repeticion .)
    WHILE           reduce using rule 43 (estatuto -> repeticion .)
    FROM            reduce using rule 43 (estatuto -> repeticion .)
    RBRACE          reduce using rule 43 (estatuto -> repeticion .)


state 71

    (44) asignacion -> variable . EQUAL expresion SEMICOLON
    (59) var_cte -> variable .

    EQUAL           shift and go to state 108
    SAME            reduce using rule 59 (var_cte -> variable .)
    NOTEQ           reduce using rule 59 (var_cte -> variable .)
    GTHAN           reduce using rule 59 (var_cte -> variable .)
    LTHAN           reduce using rule 59 (var_cte -> variable .)
    PLUS            reduce using rule 59 (var_cte -> variable .)
    MINUS           reduce using rule 59 (var_cte -> variable .)
    TIMES           reduce using rule 59 (var_cte -> variable .)
    DIVIDE          reduce using rule 59 (var_cte -> variable .)
    LPAREN          reduce using rule 59 (var_cte -> variable .)
    RETURN          reduce using rule 59 (var_cte -> variable .)
    ID              reduce using rule 59 (var_cte -> variable .)
    READ            reduce using rule 59 (var_cte -> variable .)
    WRITE           reduce using rule 59 (var_cte -> variable .)
    IF              reduce using rule 59 (var_cte -> variable .)
    CTEF            reduce using rule 59 (var_cte -> variable .)
    CTEI            reduce using rule 59 (var_cte -> variable .)
    WHILE           reduce using rule 59 (var_cte -> variable .)
    FROM            reduce using rule 59 (var_cte -> variable .)
    RBRACE          reduce using rule 59 (var_cte -> variable .)


state 72

    (46) expresion -> plus_minus . expresion
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    plus_minus                     shift and go to state 72
    expresion                      shift and go to state 109
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 73

    (47) expresion -> LPAREN . expresion RPAREN
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 113
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 74

    (48) expresion -> var_cte .

    SAME            reduce using rule 48 (expresion -> var_cte .)
    NOTEQ           reduce using rule 48 (expresion -> var_cte .)
    GTHAN           reduce using rule 48 (expresion -> var_cte .)
    LTHAN           reduce using rule 48 (expresion -> var_cte .)
    PLUS            reduce using rule 48 (expresion -> var_cte .)
    MINUS           reduce using rule 48 (expresion -> var_cte .)
    TIMES           reduce using rule 48 (expresion -> var_cte .)
    DIVIDE          reduce using rule 48 (expresion -> var_cte .)
    LPAREN          reduce using rule 48 (expresion -> var_cte .)
    RETURN          reduce using rule 48 (expresion -> var_cte .)
    ID              reduce using rule 48 (expresion -> var_cte .)
    READ            reduce using rule 48 (expresion -> var_cte .)
    WRITE           reduce using rule 48 (expresion -> var_cte .)
    IF              reduce using rule 48 (expresion -> var_cte .)
    CTEF            reduce using rule 48 (expresion -> var_cte .)
    CTEI            reduce using rule 48 (expresion -> var_cte .)
    WHILE           reduce using rule 48 (expresion -> var_cte .)
    FROM            reduce using rule 48 (expresion -> var_cte .)
    RBRACE          reduce using rule 48 (expresion -> var_cte .)
    RPAREN          reduce using rule 48 (expresion -> var_cte .)
    SEMICOLON       reduce using rule 48 (expresion -> var_cte .)
    COMMA           reduce using rule 48 (expresion -> var_cte .)
    RBRACKET        reduce using rule 48 (expresion -> var_cte .)
    TO              reduce using rule 48 (expresion -> var_cte .)
    DO              reduce using rule 48 (expresion -> var_cte .)


state 75

    (62) returns -> RETURN . expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 114
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 76

    (63) llamada_funcion -> ID . LPAREN param_llamada RPAREN
    (67) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (71) variable -> ID . variable_op
    (73) variable_op -> . DOT ID
    (74) variable_op -> . LBRACKET expresion RBRACKET
    (75) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (76) variable_op -> . empty
    (90) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 115
    DOT             shift and go to state 116
    LBRACKET        shift and go to state 118
    EQUAL           reduce using rule 90 (empty -> .)
    SAME            reduce using rule 90 (empty -> .)
    NOTEQ           reduce using rule 90 (empty -> .)
    GTHAN           reduce using rule 90 (empty -> .)
    LTHAN           reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    TIMES           reduce using rule 90 (empty -> .)
    DIVIDE          reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    WRITE           reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    FROM            reduce using rule 90 (empty -> .)
    RBRACE          reduce using rule 90 (empty -> .)

  ! LPAREN          [ reduce using rule 90 (empty -> .) ]

    variable_op                    shift and go to state 117
    empty                          shift and go to state 119

state 77

    (68) lectura -> READ . LPAREN variable op_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 120


state 78

    (77) escritura -> WRITE . LPAREN type_escritura op_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 121


state 79

    (83) decision -> IF . LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 122


state 80

    (86) repeticion -> condicional .

    LPAREN          reduce using rule 86 (repeticion -> condicional .)
    RETURN          reduce using rule 86 (repeticion -> condicional .)
    ID              reduce using rule 86 (repeticion -> condicional .)
    READ            reduce using rule 86 (repeticion -> condicional .)
    WRITE           reduce using rule 86 (repeticion -> condicional .)
    IF              reduce using rule 86 (repeticion -> condicional .)
    PLUS            reduce using rule 86 (repeticion -> condicional .)
    MINUS           reduce using rule 86 (repeticion -> condicional .)
    CTEF            reduce using rule 86 (repeticion -> condicional .)
    CTEI            reduce using rule 86 (repeticion -> condicional .)
    WHILE           reduce using rule 86 (repeticion -> condicional .)
    FROM            reduce using rule 86 (repeticion -> condicional .)
    RBRACE          reduce using rule 86 (repeticion -> condicional .)


state 81

    (87) repeticion -> no_condicional .

    LPAREN          reduce using rule 87 (repeticion -> no_condicional .)
    RETURN          reduce using rule 87 (repeticion -> no_condicional .)
    ID              reduce using rule 87 (repeticion -> no_condicional .)
    READ            reduce using rule 87 (repeticion -> no_condicional .)
    WRITE           reduce using rule 87 (repeticion -> no_condicional .)
    IF              reduce using rule 87 (repeticion -> no_condicional .)
    PLUS            reduce using rule 87 (repeticion -> no_condicional .)
    MINUS           reduce using rule 87 (repeticion -> no_condicional .)
    CTEF            reduce using rule 87 (repeticion -> no_condicional .)
    CTEI            reduce using rule 87 (repeticion -> no_condicional .)
    WHILE           reduce using rule 87 (repeticion -> no_condicional .)
    FROM            reduce using rule 87 (repeticion -> no_condicional .)
    RBRACE          reduce using rule 87 (repeticion -> no_condicional .)


state 82

    (57) plus_minus -> PLUS .

    LPAREN          reduce using rule 57 (plus_minus -> PLUS .)
    PLUS            reduce using rule 57 (plus_minus -> PLUS .)
    MINUS           reduce using rule 57 (plus_minus -> PLUS .)
    CTEF            reduce using rule 57 (plus_minus -> PLUS .)
    CTEI            reduce using rule 57 (plus_minus -> PLUS .)
    ID              reduce using rule 57 (plus_minus -> PLUS .)


state 83

    (58) plus_minus -> MINUS .

    LPAREN          reduce using rule 58 (plus_minus -> MINUS .)
    PLUS            reduce using rule 58 (plus_minus -> MINUS .)
    MINUS           reduce using rule 58 (plus_minus -> MINUS .)
    CTEF            reduce using rule 58 (plus_minus -> MINUS .)
    CTEI            reduce using rule 58 (plus_minus -> MINUS .)
    ID              reduce using rule 58 (plus_minus -> MINUS .)


state 84

    (60) var_cte -> CTEF .

    SAME            reduce using rule 60 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 60 (var_cte -> CTEF .)
    GTHAN           reduce using rule 60 (var_cte -> CTEF .)
    LTHAN           reduce using rule 60 (var_cte -> CTEF .)
    PLUS            reduce using rule 60 (var_cte -> CTEF .)
    MINUS           reduce using rule 60 (var_cte -> CTEF .)
    TIMES           reduce using rule 60 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 60 (var_cte -> CTEF .)
    LPAREN          reduce using rule 60 (var_cte -> CTEF .)
    RETURN          reduce using rule 60 (var_cte -> CTEF .)
    ID              reduce using rule 60 (var_cte -> CTEF .)
    READ            reduce using rule 60 (var_cte -> CTEF .)
    WRITE           reduce using rule 60 (var_cte -> CTEF .)
    IF              reduce using rule 60 (var_cte -> CTEF .)
    CTEF            reduce using rule 60 (var_cte -> CTEF .)
    CTEI            reduce using rule 60 (var_cte -> CTEF .)
    WHILE           reduce using rule 60 (var_cte -> CTEF .)
    FROM            reduce using rule 60 (var_cte -> CTEF .)
    RBRACE          reduce using rule 60 (var_cte -> CTEF .)
    RPAREN          reduce using rule 60 (var_cte -> CTEF .)
    SEMICOLON       reduce using rule 60 (var_cte -> CTEF .)
    COMMA           reduce using rule 60 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 60 (var_cte -> CTEF .)
    TO              reduce using rule 60 (var_cte -> CTEF .)
    DO              reduce using rule 60 (var_cte -> CTEF .)


state 85

    (61) var_cte -> CTEI .

    SAME            reduce using rule 61 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 61 (var_cte -> CTEI .)
    GTHAN           reduce using rule 61 (var_cte -> CTEI .)
    LTHAN           reduce using rule 61 (var_cte -> CTEI .)
    PLUS            reduce using rule 61 (var_cte -> CTEI .)
    MINUS           reduce using rule 61 (var_cte -> CTEI .)
    TIMES           reduce using rule 61 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 61 (var_cte -> CTEI .)
    LPAREN          reduce using rule 61 (var_cte -> CTEI .)
    RETURN          reduce using rule 61 (var_cte -> CTEI .)
    ID              reduce using rule 61 (var_cte -> CTEI .)
    READ            reduce using rule 61 (var_cte -> CTEI .)
    WRITE           reduce using rule 61 (var_cte -> CTEI .)
    IF              reduce using rule 61 (var_cte -> CTEI .)
    CTEF            reduce using rule 61 (var_cte -> CTEI .)
    CTEI            reduce using rule 61 (var_cte -> CTEI .)
    WHILE           reduce using rule 61 (var_cte -> CTEI .)
    FROM            reduce using rule 61 (var_cte -> CTEI .)
    RBRACE          reduce using rule 61 (var_cte -> CTEI .)
    RPAREN          reduce using rule 61 (var_cte -> CTEI .)
    SEMICOLON       reduce using rule 61 (var_cte -> CTEI .)
    COMMA           reduce using rule 61 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 61 (var_cte -> CTEI .)
    TO              reduce using rule 61 (var_cte -> CTEI .)
    DO              reduce using rule 61 (var_cte -> CTEI .)


state 86

    (88) condicional -> WHILE . LPAREN expresion RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 123


state 87

    (89) no_condicional -> FROM . variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 111

    variable                       shift and go to state 124
    llamada_objeto                 shift and go to state 112

state 88

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 125


state 89

    (17) params -> ID COLON type_simple params_op .

    RPAREN          reduce using rule 17 (params -> ID COLON type_simple params_op .)


state 90

    (19) params_op -> COMMA . params
    (17) params -> . ID COLON type_simple params_op
    (18) params -> . empty
    (90) empty -> .

    ID              shift and go to state 35
    RPAREN          reduce using rule 90 (empty -> .)

    params                         shift and go to state 126
    empty                          shift and go to state 37

state 91

    (20) params_op -> empty .

    RPAREN          reduce using rule 20 (params_op -> empty .)


state 92

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    VAR             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 93

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 94

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    VAR             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 95

    (21) bloque_func -> LBRACE op_var estatutos RBRACE .

    $end            reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    VAR             reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    FUNC            reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    CLASS           reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    MAIN            reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    RBRACE          reduce using rule 21 (bloque_func -> LBRACE op_var estatutos RBRACE .)


state 96

    (33) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 33 (estatutos -> estatuto estatutos .)


state 97

    (45) expresion -> expresion binop . expresion
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 127
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 98

    (49) binop -> SAME .

    LPAREN          reduce using rule 49 (binop -> SAME .)
    PLUS            reduce using rule 49 (binop -> SAME .)
    MINUS           reduce using rule 49 (binop -> SAME .)
    CTEF            reduce using rule 49 (binop -> SAME .)
    CTEI            reduce using rule 49 (binop -> SAME .)
    ID              reduce using rule 49 (binop -> SAME .)


state 99

    (50) binop -> NOTEQ .

    LPAREN          reduce using rule 50 (binop -> NOTEQ .)
    PLUS            reduce using rule 50 (binop -> NOTEQ .)
    MINUS           reduce using rule 50 (binop -> NOTEQ .)
    CTEF            reduce using rule 50 (binop -> NOTEQ .)
    CTEI            reduce using rule 50 (binop -> NOTEQ .)
    ID              reduce using rule 50 (binop -> NOTEQ .)


state 100

    (51) binop -> GTHAN .

    LPAREN          reduce using rule 51 (binop -> GTHAN .)
    PLUS            reduce using rule 51 (binop -> GTHAN .)
    MINUS           reduce using rule 51 (binop -> GTHAN .)
    CTEF            reduce using rule 51 (binop -> GTHAN .)
    CTEI            reduce using rule 51 (binop -> GTHAN .)
    ID              reduce using rule 51 (binop -> GTHAN .)


state 101

    (52) binop -> LTHAN .

    LPAREN          reduce using rule 52 (binop -> LTHAN .)
    PLUS            reduce using rule 52 (binop -> LTHAN .)
    MINUS           reduce using rule 52 (binop -> LTHAN .)
    CTEF            reduce using rule 52 (binop -> LTHAN .)
    CTEI            reduce using rule 52 (binop -> LTHAN .)
    ID              reduce using rule 52 (binop -> LTHAN .)


state 102

    (53) binop -> PLUS .

    LPAREN          reduce using rule 53 (binop -> PLUS .)
    PLUS            reduce using rule 53 (binop -> PLUS .)
    MINUS           reduce using rule 53 (binop -> PLUS .)
    CTEF            reduce using rule 53 (binop -> PLUS .)
    CTEI            reduce using rule 53 (binop -> PLUS .)
    ID              reduce using rule 53 (binop -> PLUS .)


state 103

    (54) binop -> MINUS .

    LPAREN          reduce using rule 54 (binop -> MINUS .)
    PLUS            reduce using rule 54 (binop -> MINUS .)
    MINUS           reduce using rule 54 (binop -> MINUS .)
    CTEF            reduce using rule 54 (binop -> MINUS .)
    CTEI            reduce using rule 54 (binop -> MINUS .)
    ID              reduce using rule 54 (binop -> MINUS .)


state 104

    (55) binop -> TIMES .

    LPAREN          reduce using rule 55 (binop -> TIMES .)
    PLUS            reduce using rule 55 (binop -> TIMES .)
    MINUS           reduce using rule 55 (binop -> TIMES .)
    CTEF            reduce using rule 55 (binop -> TIMES .)
    CTEI            reduce using rule 55 (binop -> TIMES .)
    ID              reduce using rule 55 (binop -> TIMES .)


state 105

    (56) binop -> DIVIDE .

    LPAREN          reduce using rule 56 (binop -> DIVIDE .)
    PLUS            reduce using rule 56 (binop -> DIVIDE .)
    MINUS           reduce using rule 56 (binop -> DIVIDE .)
    CTEF            reduce using rule 56 (binop -> DIVIDE .)
    CTEI            reduce using rule 56 (binop -> DIVIDE .)
    ID              reduce using rule 56 (binop -> DIVIDE .)


state 106

    (38) estatuto -> llamada_funcion SEMICOLON .

    LPAREN          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    ID              reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    READ            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    WRITE           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    IF              reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    PLUS            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    MINUS           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    CTEF            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    CTEI            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    FROM            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    RBRACE          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)


state 107

    (39) estatuto -> llamada_objeto SEMICOLON .

    LPAREN          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    RETURN          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    ID              reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    READ            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    WRITE           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    IF              reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    PLUS            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    MINUS           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    CTEF            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    CTEI            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    WHILE           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    FROM            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    RBRACE          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)


state 108

    (44) asignacion -> variable EQUAL . expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    variable                       shift and go to state 110
    expresion                      shift and go to state 128
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    llamada_objeto                 shift and go to state 112

state 109

    (46) expresion -> plus_minus expresion .
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 46 (expresion -> plus_minus expresion .)
    RETURN          reduce using rule 46 (expresion -> plus_minus expresion .)
    ID              reduce using rule 46 (expresion -> plus_minus expresion .)
    READ            reduce using rule 46 (expresion -> plus_minus expresion .)
    WRITE           reduce using rule 46 (expresion -> plus_minus expresion .)
    IF              reduce using rule 46 (expresion -> plus_minus expresion .)
    CTEF            reduce using rule 46 (expresion -> plus_minus expresion .)
    CTEI            reduce using rule 46 (expresion -> plus_minus expresion .)
    WHILE           reduce using rule 46 (expresion -> plus_minus expresion .)
    FROM            reduce using rule 46 (expresion -> plus_minus expresion .)
    RBRACE          reduce using rule 46 (expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 46 (expresion -> plus_minus expresion .)
    SEMICOLON       reduce using rule 46 (expresion -> plus_minus expresion .)
    COMMA           reduce using rule 46 (expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 46 (expresion -> plus_minus expresion .)
    TO              reduce using rule 46 (expresion -> plus_minus expresion .)
    DO              reduce using rule 46 (expresion -> plus_minus expresion .)
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

  ! SAME            [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! NOTEQ           [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! GTHAN           [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! LTHAN           [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! PLUS            [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! MINUS           [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! TIMES           [ reduce using rule 46 (expresion -> plus_minus expresion .) ]
  ! DIVIDE          [ reduce using rule 46 (expresion -> plus_minus expresion .) ]

    binop                          shift and go to state 97

state 110

    (59) var_cte -> variable .

    SAME            reduce using rule 59 (var_cte -> variable .)
    NOTEQ           reduce using rule 59 (var_cte -> variable .)
    GTHAN           reduce using rule 59 (var_cte -> variable .)
    LTHAN           reduce using rule 59 (var_cte -> variable .)
    PLUS            reduce using rule 59 (var_cte -> variable .)
    MINUS           reduce using rule 59 (var_cte -> variable .)
    TIMES           reduce using rule 59 (var_cte -> variable .)
    DIVIDE          reduce using rule 59 (var_cte -> variable .)
    LPAREN          reduce using rule 59 (var_cte -> variable .)
    RETURN          reduce using rule 59 (var_cte -> variable .)
    ID              reduce using rule 59 (var_cte -> variable .)
    READ            reduce using rule 59 (var_cte -> variable .)
    WRITE           reduce using rule 59 (var_cte -> variable .)
    IF              reduce using rule 59 (var_cte -> variable .)
    CTEF            reduce using rule 59 (var_cte -> variable .)
    CTEI            reduce using rule 59 (var_cte -> variable .)
    WHILE           reduce using rule 59 (var_cte -> variable .)
    FROM            reduce using rule 59 (var_cte -> variable .)
    RBRACE          reduce using rule 59 (var_cte -> variable .)
    RPAREN          reduce using rule 59 (var_cte -> variable .)
    SEMICOLON       reduce using rule 59 (var_cte -> variable .)
    COMMA           reduce using rule 59 (var_cte -> variable .)
    RBRACKET        reduce using rule 59 (var_cte -> variable .)
    TO              reduce using rule 59 (var_cte -> variable .)
    DO              reduce using rule 59 (var_cte -> variable .)


state 111

    (71) variable -> ID . variable_op
    (67) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (73) variable_op -> . DOT ID
    (74) variable_op -> . LBRACKET expresion RBRACKET
    (75) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (76) variable_op -> . empty
    (90) empty -> .

    DOT             shift and go to state 116
    LBRACKET        shift and go to state 118
    SAME            reduce using rule 90 (empty -> .)
    NOTEQ           reduce using rule 90 (empty -> .)
    GTHAN           reduce using rule 90 (empty -> .)
    LTHAN           reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    TIMES           reduce using rule 90 (empty -> .)
    DIVIDE          reduce using rule 90 (empty -> .)
    LPAREN          reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    WRITE           reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    FROM            reduce using rule 90 (empty -> .)
    RBRACE          reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    SEMICOLON       reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    RBRACKET        reduce using rule 90 (empty -> .)
    TO              reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)
    EQUAL           reduce using rule 90 (empty -> .)

    variable_op                    shift and go to state 117
    empty                          shift and go to state 119

state 112

    (72) variable -> llamada_objeto .

    SAME            reduce using rule 72 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 72 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 72 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 72 (variable -> llamada_objeto .)
    PLUS            reduce using rule 72 (variable -> llamada_objeto .)
    MINUS           reduce using rule 72 (variable -> llamada_objeto .)
    TIMES           reduce using rule 72 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 72 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 72 (variable -> llamada_objeto .)
    RETURN          reduce using rule 72 (variable -> llamada_objeto .)
    ID              reduce using rule 72 (variable -> llamada_objeto .)
    READ            reduce using rule 72 (variable -> llamada_objeto .)
    WRITE           reduce using rule 72 (variable -> llamada_objeto .)
    IF              reduce using rule 72 (variable -> llamada_objeto .)
    CTEF            reduce using rule 72 (variable -> llamada_objeto .)
    CTEI            reduce using rule 72 (variable -> llamada_objeto .)
    WHILE           reduce using rule 72 (variable -> llamada_objeto .)
    FROM            reduce using rule 72 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 72 (variable -> llamada_objeto .)
    RPAREN          reduce using rule 72 (variable -> llamada_objeto .)
    SEMICOLON       reduce using rule 72 (variable -> llamada_objeto .)
    COMMA           reduce using rule 72 (variable -> llamada_objeto .)
    RBRACKET        reduce using rule 72 (variable -> llamada_objeto .)
    TO              reduce using rule 72 (variable -> llamada_objeto .)
    DO              reduce using rule 72 (variable -> llamada_objeto .)
    EQUAL           reduce using rule 72 (variable -> llamada_objeto .)


state 113

    (47) expresion -> LPAREN expresion . RPAREN
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RPAREN          shift and go to state 129
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 114

    (62) returns -> RETURN expresion . SEMICOLON
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    SEMICOLON       shift and go to state 130
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 115

    (63) llamada_funcion -> ID LPAREN . param_llamada RPAREN
    (64) param_llamada -> . expresion
    (65) param_llamada -> . expresion COMMA param_llamada
    (66) param_llamada -> . empty
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (90) empty -> .
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    RPAREN          reduce using rule 90 (empty -> .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    param_llamada                  shift and go to state 131
    expresion                      shift and go to state 132
    empty                          shift and go to state 133
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 116

    (67) llamada_objeto -> ID DOT . ID LPAREN param_llamada RPAREN
    (73) variable_op -> DOT . ID

    ID              shift and go to state 134


state 117

    (71) variable -> ID variable_op .

    EQUAL           reduce using rule 71 (variable -> ID variable_op .)
    SAME            reduce using rule 71 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 71 (variable -> ID variable_op .)
    GTHAN           reduce using rule 71 (variable -> ID variable_op .)
    LTHAN           reduce using rule 71 (variable -> ID variable_op .)
    PLUS            reduce using rule 71 (variable -> ID variable_op .)
    MINUS           reduce using rule 71 (variable -> ID variable_op .)
    TIMES           reduce using rule 71 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 71 (variable -> ID variable_op .)
    LPAREN          reduce using rule 71 (variable -> ID variable_op .)
    RETURN          reduce using rule 71 (variable -> ID variable_op .)
    ID              reduce using rule 71 (variable -> ID variable_op .)
    READ            reduce using rule 71 (variable -> ID variable_op .)
    WRITE           reduce using rule 71 (variable -> ID variable_op .)
    IF              reduce using rule 71 (variable -> ID variable_op .)
    CTEF            reduce using rule 71 (variable -> ID variable_op .)
    CTEI            reduce using rule 71 (variable -> ID variable_op .)
    WHILE           reduce using rule 71 (variable -> ID variable_op .)
    FROM            reduce using rule 71 (variable -> ID variable_op .)
    RBRACE          reduce using rule 71 (variable -> ID variable_op .)
    RPAREN          reduce using rule 71 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 71 (variable -> ID variable_op .)
    COMMA           reduce using rule 71 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 71 (variable -> ID variable_op .)
    TO              reduce using rule 71 (variable -> ID variable_op .)
    DO              reduce using rule 71 (variable -> ID variable_op .)


state 118

    (74) variable_op -> LBRACKET . expresion RBRACKET
    (75) variable_op -> LBRACKET . expresion RBRACKET LBRACKET expresion RBRACKET
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 135
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 119

    (76) variable_op -> empty .

    EQUAL           reduce using rule 76 (variable_op -> empty .)
    SAME            reduce using rule 76 (variable_op -> empty .)
    NOTEQ           reduce using rule 76 (variable_op -> empty .)
    GTHAN           reduce using rule 76 (variable_op -> empty .)
    LTHAN           reduce using rule 76 (variable_op -> empty .)
    PLUS            reduce using rule 76 (variable_op -> empty .)
    MINUS           reduce using rule 76 (variable_op -> empty .)
    TIMES           reduce using rule 76 (variable_op -> empty .)
    DIVIDE          reduce using rule 76 (variable_op -> empty .)
    LPAREN          reduce using rule 76 (variable_op -> empty .)
    RETURN          reduce using rule 76 (variable_op -> empty .)
    ID              reduce using rule 76 (variable_op -> empty .)
    READ            reduce using rule 76 (variable_op -> empty .)
    WRITE           reduce using rule 76 (variable_op -> empty .)
    IF              reduce using rule 76 (variable_op -> empty .)
    CTEF            reduce using rule 76 (variable_op -> empty .)
    CTEI            reduce using rule 76 (variable_op -> empty .)
    WHILE           reduce using rule 76 (variable_op -> empty .)
    FROM            reduce using rule 76 (variable_op -> empty .)
    RBRACE          reduce using rule 76 (variable_op -> empty .)
    RPAREN          reduce using rule 76 (variable_op -> empty .)
    SEMICOLON       reduce using rule 76 (variable_op -> empty .)
    COMMA           reduce using rule 76 (variable_op -> empty .)
    RBRACKET        reduce using rule 76 (variable_op -> empty .)
    TO              reduce using rule 76 (variable_op -> empty .)
    DO              reduce using rule 76 (variable_op -> empty .)


state 120

    (68) lectura -> READ LPAREN . variable op_lectura RPAREN SEMICOLON
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 111

    variable                       shift and go to state 136
    llamada_objeto                 shift and go to state 112

state 121

    (77) escritura -> WRITE LPAREN . type_escritura op_escritura RPAREN SEMICOLON
    (78) type_escritura -> . CTESTRING
    (79) type_escritura -> . expresion
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 138
    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    type_escritura                 shift and go to state 137
    expresion                      shift and go to state 139
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 122

    (83) decision -> IF LPAREN . expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 140
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 123

    (88) condicional -> WHILE LPAREN . expresion RPAREN DO LBRACE estatutos RBRACE
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 141
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 124

    (89) no_condicional -> FROM variable . EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 142


state 125

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 143


state 126

    (19) params_op -> COMMA params .

    RPAREN          reduce using rule 19 (params_op -> COMMA params .)


state 127

    (45) expresion -> expresion binop expresion .
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 45 (expresion -> expresion binop expresion .)
    RETURN          reduce using rule 45 (expresion -> expresion binop expresion .)
    ID              reduce using rule 45 (expresion -> expresion binop expresion .)
    READ            reduce using rule 45 (expresion -> expresion binop expresion .)
    WRITE           reduce using rule 45 (expresion -> expresion binop expresion .)
    IF              reduce using rule 45 (expresion -> expresion binop expresion .)
    CTEF            reduce using rule 45 (expresion -> expresion binop expresion .)
    CTEI            reduce using rule 45 (expresion -> expresion binop expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion binop expresion .)
    FROM            reduce using rule 45 (expresion -> expresion binop expresion .)
    RBRACE          reduce using rule 45 (expresion -> expresion binop expresion .)
    RPAREN          reduce using rule 45 (expresion -> expresion binop expresion .)
    SEMICOLON       reduce using rule 45 (expresion -> expresion binop expresion .)
    COMMA           reduce using rule 45 (expresion -> expresion binop expresion .)
    RBRACKET        reduce using rule 45 (expresion -> expresion binop expresion .)
    TO              reduce using rule 45 (expresion -> expresion binop expresion .)
    DO              reduce using rule 45 (expresion -> expresion binop expresion .)
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

  ! SAME            [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! NOTEQ           [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! GTHAN           [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! LTHAN           [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! PLUS            [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! MINUS           [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! TIMES           [ reduce using rule 45 (expresion -> expresion binop expresion .) ]
  ! DIVIDE          [ reduce using rule 45 (expresion -> expresion binop expresion .) ]

    binop                          shift and go to state 97

state 128

    (44) asignacion -> variable EQUAL expresion . SEMICOLON
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    SEMICOLON       shift and go to state 144
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 129

    (47) expresion -> LPAREN expresion RPAREN .

    SAME            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    NOTEQ           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    READ            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    WRITE           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 47 (expresion -> LPAREN expresion RPAREN .)


state 130

    (62) returns -> RETURN expresion SEMICOLON .

    LPAREN          reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    PLUS            reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    MINUS           reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    CTEF            reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    CTEI            reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 62 (returns -> RETURN expresion SEMICOLON .)


state 131

    (63) llamada_funcion -> ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 145


state 132

    (64) param_llamada -> expresion .
    (65) param_llamada -> expresion . COMMA param_llamada
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RPAREN          reduce using rule 64 (param_llamada -> expresion .)
    COMMA           shift and go to state 146
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 133

    (66) param_llamada -> empty .

    RPAREN          reduce using rule 66 (param_llamada -> empty .)


state 134

    (67) llamada_objeto -> ID DOT ID . LPAREN param_llamada RPAREN
    (73) variable_op -> DOT ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 147
    EQUAL           reduce using rule 73 (variable_op -> DOT ID .)
    SAME            reduce using rule 73 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 73 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 73 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 73 (variable_op -> DOT ID .)
    PLUS            reduce using rule 73 (variable_op -> DOT ID .)
    MINUS           reduce using rule 73 (variable_op -> DOT ID .)
    TIMES           reduce using rule 73 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 73 (variable_op -> DOT ID .)
    RETURN          reduce using rule 73 (variable_op -> DOT ID .)
    ID              reduce using rule 73 (variable_op -> DOT ID .)
    READ            reduce using rule 73 (variable_op -> DOT ID .)
    WRITE           reduce using rule 73 (variable_op -> DOT ID .)
    IF              reduce using rule 73 (variable_op -> DOT ID .)
    CTEF            reduce using rule 73 (variable_op -> DOT ID .)
    CTEI            reduce using rule 73 (variable_op -> DOT ID .)
    WHILE           reduce using rule 73 (variable_op -> DOT ID .)
    FROM            reduce using rule 73 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 73 (variable_op -> DOT ID .)
    RPAREN          reduce using rule 73 (variable_op -> DOT ID .)
    SEMICOLON       reduce using rule 73 (variable_op -> DOT ID .)
    COMMA           reduce using rule 73 (variable_op -> DOT ID .)
    RBRACKET        reduce using rule 73 (variable_op -> DOT ID .)
    TO              reduce using rule 73 (variable_op -> DOT ID .)
    DO              reduce using rule 73 (variable_op -> DOT ID .)

  ! LPAREN          [ reduce using rule 73 (variable_op -> DOT ID .) ]


state 135

    (74) variable_op -> LBRACKET expresion . RBRACKET
    (75) variable_op -> LBRACKET expresion . RBRACKET LBRACKET expresion RBRACKET
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RBRACKET        shift and go to state 148
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 136

    (68) lectura -> READ LPAREN variable . op_lectura RPAREN SEMICOLON
    (69) op_lectura -> . COMMA variable op_lectura
    (70) op_lectura -> . empty
    (90) empty -> .

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 90 (empty -> .)

    op_lectura                     shift and go to state 149
    empty                          shift and go to state 151

state 137

    (77) escritura -> WRITE LPAREN type_escritura . op_escritura RPAREN SEMICOLON
    (80) op_escritura -> . COMMA CTESTRING op_escritura
    (81) op_escritura -> . COMMA expresion op_escritura
    (82) op_escritura -> . empty
    (90) empty -> .

    COMMA           shift and go to state 153
    RPAREN          reduce using rule 90 (empty -> .)

    op_escritura                   shift and go to state 152
    empty                          shift and go to state 154

state 138

    (78) type_escritura -> CTESTRING .

    COMMA           reduce using rule 78 (type_escritura -> CTESTRING .)
    RPAREN          reduce using rule 78 (type_escritura -> CTESTRING .)


state 139

    (79) type_escritura -> expresion .
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    COMMA           reduce using rule 79 (type_escritura -> expresion .)
    RPAREN          reduce using rule 79 (type_escritura -> expresion .)
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 140

    (83) decision -> IF LPAREN expresion . RPAREN THEN LBRACE estatutos RBRACE op_decision
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RPAREN          shift and go to state 155
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 141

    (88) condicional -> WHILE LPAREN expresion . RPAREN DO LBRACE estatutos RBRACE
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RPAREN          shift and go to state 156
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 142

    (89) no_condicional -> FROM variable EQUAL . expresion TO expresion DO LBRACE estatutos RBRACE
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    variable                       shift and go to state 110
    expresion                      shift and go to state 157
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    llamada_objeto                 shift and go to state 112

state 143

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 144

    (44) asignacion -> variable EQUAL expresion SEMICOLON .

    LPAREN          reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    ID              reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    READ            reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WRITE           reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    IF              reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    PLUS            reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    MINUS           reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEF            reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEI            reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FROM            reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 44 (asignacion -> variable EQUAL expresion SEMICOLON .)


state 145

    (63) llamada_funcion -> ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 63 (llamada_funcion -> ID LPAREN param_llamada RPAREN .)


state 146

    (65) param_llamada -> expresion COMMA . param_llamada
    (64) param_llamada -> . expresion
    (65) param_llamada -> . expresion COMMA param_llamada
    (66) param_llamada -> . empty
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (90) empty -> .
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    RPAREN          reduce using rule 90 (empty -> .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 132
    param_llamada                  shift and go to state 158
    empty                          shift and go to state 133
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 147

    (67) llamada_objeto -> ID DOT ID LPAREN . param_llamada RPAREN
    (64) param_llamada -> . expresion
    (65) param_llamada -> . expresion COMMA param_llamada
    (66) param_llamada -> . empty
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (90) empty -> .
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    RPAREN          reduce using rule 90 (empty -> .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    param_llamada                  shift and go to state 159
    expresion                      shift and go to state 132
    empty                          shift and go to state 133
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 148

    (74) variable_op -> LBRACKET expresion RBRACKET .
    (75) variable_op -> LBRACKET expresion RBRACKET . LBRACKET expresion RBRACKET

    EQUAL           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    ID              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    READ            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    IF              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    TO              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    DO              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET .)
    LBRACKET        shift and go to state 160


state 149

    (68) lectura -> READ LPAREN variable op_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 161


state 150

    (69) op_lectura -> COMMA . variable op_lectura
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 111

    variable                       shift and go to state 162
    llamada_objeto                 shift and go to state 112

state 151

    (70) op_lectura -> empty .

    RPAREN          reduce using rule 70 (op_lectura -> empty .)


state 152

    (77) escritura -> WRITE LPAREN type_escritura op_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 153

    (80) op_escritura -> COMMA . CTESTRING op_escritura
    (81) op_escritura -> COMMA . expresion op_escritura
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 164
    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 165
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 154

    (82) op_escritura -> empty .

    RPAREN          reduce using rule 82 (op_escritura -> empty .)


state 155

    (83) decision -> IF LPAREN expresion RPAREN . THEN LBRACE estatutos RBRACE op_decision

    THEN            shift and go to state 166


state 156

    (88) condicional -> WHILE LPAREN expresion RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 167


state 157

    (89) no_condicional -> FROM variable EQUAL expresion . TO expresion DO LBRACE estatutos RBRACE
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    TO              shift and go to state 168
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 158

    (65) param_llamada -> expresion COMMA param_llamada .

    RPAREN          reduce using rule 65 (param_llamada -> expresion COMMA param_llamada .)


state 159

    (67) llamada_objeto -> ID DOT ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 169


state 160

    (75) variable_op -> LBRACKET expresion RBRACKET LBRACKET . expresion RBRACKET
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    expresion                      shift and go to state 170
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    variable                       shift and go to state 110
    llamada_objeto                 shift and go to state 112

state 161

    (68) lectura -> READ LPAREN variable op_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 171


state 162

    (69) op_lectura -> COMMA variable . op_lectura
    (69) op_lectura -> . COMMA variable op_lectura
    (70) op_lectura -> . empty
    (90) empty -> .

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 90 (empty -> .)

    op_lectura                     shift and go to state 172
    empty                          shift and go to state 151

state 163

    (77) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 173


state 164

    (80) op_escritura -> COMMA CTESTRING . op_escritura
    (80) op_escritura -> . COMMA CTESTRING op_escritura
    (81) op_escritura -> . COMMA expresion op_escritura
    (82) op_escritura -> . empty
    (90) empty -> .

    COMMA           shift and go to state 153
    RPAREN          reduce using rule 90 (empty -> .)

    op_escritura                   shift and go to state 174
    empty                          shift and go to state 154

state 165

    (81) op_escritura -> COMMA expresion . op_escritura
    (45) expresion -> expresion . binop expresion
    (80) op_escritura -> . COMMA CTESTRING op_escritura
    (81) op_escritura -> . COMMA expresion op_escritura
    (82) op_escritura -> . empty
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE
    (90) empty -> .

    COMMA           shift and go to state 153
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105
    RPAREN          reduce using rule 90 (empty -> .)

    op_escritura                   shift and go to state 175
    binop                          shift and go to state 97
    empty                          shift and go to state 154

state 166

    (83) decision -> IF LPAREN expresion RPAREN THEN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 176


state 167

    (88) condicional -> WHILE LPAREN expresion RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 177


state 168

    (89) no_condicional -> FROM variable EQUAL expresion TO . expresion DO LBRACE estatutos RBRACE
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 73
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    ID              shift and go to state 111

    variable                       shift and go to state 110
    expresion                      shift and go to state 178
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    llamada_objeto                 shift and go to state 112

state 169

    (67) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    EQUAL           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    SAME            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    NOTEQ           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    GTHAN           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LTHAN           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    PLUS            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    MINUS           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TIMES           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DIVIDE          reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LPAREN          reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RETURN          reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    ID              reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    READ            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WRITE           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    IF              reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEF            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEI            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WHILE           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FROM            reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACE          reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RPAREN          reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    COMMA           reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACKET        reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TO              reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DO              reduce using rule 67 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)


state 170

    (75) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion . RBRACKET
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    RBRACKET        shift and go to state 179
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 171

    (68) lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .

    LPAREN          reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    ID              reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    PLUS            reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    MINUS           reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEF            reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEI            reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FROM            reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)


state 172

    (69) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 69 (op_lectura -> COMMA variable op_lectura .)


state 173

    (77) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .

    LPAREN          reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    ID              reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    PLUS            reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    MINUS           reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEF            reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEI            reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FROM            reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)


state 174

    (80) op_escritura -> COMMA CTESTRING op_escritura .

    RPAREN          reduce using rule 80 (op_escritura -> COMMA CTESTRING op_escritura .)


state 175

    (81) op_escritura -> COMMA expresion op_escritura .

    RPAREN          reduce using rule 81 (op_escritura -> COMMA expresion op_escritura .)


state 176

    (83) decision -> IF LPAREN expresion RPAREN THEN LBRACE . estatutos RBRACE op_decision
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

    expresion                      shift and go to state 63
    estatutos                      shift and go to state 180
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    variable                       shift and go to state 71
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 177

    (88) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

    expresion                      shift and go to state 63
    estatutos                      shift and go to state 181
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    variable                       shift and go to state 71
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 178

    (89) no_condicional -> FROM variable EQUAL expresion TO expresion . DO LBRACE estatutos RBRACE
    (45) expresion -> expresion . binop expresion
    (49) binop -> . SAME
    (50) binop -> . NOTEQ
    (51) binop -> . GTHAN
    (52) binop -> . LTHAN
    (53) binop -> . PLUS
    (54) binop -> . MINUS
    (55) binop -> . TIMES
    (56) binop -> . DIVIDE

    DO              shift and go to state 182
    SAME            shift and go to state 98
    NOTEQ           shift and go to state 99
    GTHAN           shift and go to state 100
    LTHAN           shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 105

    binop                          shift and go to state 97

state 179

    (75) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .

    EQUAL           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    ID              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    READ            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    IF              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TO              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DO              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)


state 180

    (83) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 183


state 181

    (88) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 184


state 182

    (89) no_condicional -> FROM variable EQUAL expresion TO expresion DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 185


state 183

    (83) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE . op_decision
    (84) op_decision -> . ELSE LBRACE estatutos RBRACE
    (85) op_decision -> . empty
    (90) empty -> .

    ELSE            shift and go to state 187
    LPAREN          reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    WRITE           reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    FROM            reduce using rule 90 (empty -> .)
    RBRACE          reduce using rule 90 (empty -> .)

    op_decision                    shift and go to state 186
    empty                          shift and go to state 188

state 184

    (88) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 88 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)


state 185

    (89) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

    variable                       shift and go to state 71
    expresion                      shift and go to state 63
    estatutos                      shift and go to state 189
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 186

    (83) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .

    LPAREN          reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RETURN          reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    ID              reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    READ            reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WRITE           reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    IF              reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    PLUS            reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    MINUS           reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEF            reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEI            reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WHILE           reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FROM            reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RBRACE          reduce using rule 83 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)


state 187

    (84) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 190


state 188

    (85) op_decision -> empty .

    LPAREN          reduce using rule 85 (op_decision -> empty .)
    RETURN          reduce using rule 85 (op_decision -> empty .)
    ID              reduce using rule 85 (op_decision -> empty .)
    READ            reduce using rule 85 (op_decision -> empty .)
    WRITE           reduce using rule 85 (op_decision -> empty .)
    IF              reduce using rule 85 (op_decision -> empty .)
    PLUS            reduce using rule 85 (op_decision -> empty .)
    MINUS           reduce using rule 85 (op_decision -> empty .)
    CTEF            reduce using rule 85 (op_decision -> empty .)
    CTEI            reduce using rule 85 (op_decision -> empty .)
    WHILE           reduce using rule 85 (op_decision -> empty .)
    FROM            reduce using rule 85 (op_decision -> empty .)
    RBRACE          reduce using rule 85 (op_decision -> empty .)


state 189

    (89) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 191


state 190

    (84) op_decision -> ELSE LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . lectura
    (41) estatuto -> . escritura
    (42) estatuto -> . decision
    (43) estatuto -> . repeticion
    (90) empty -> .
    (44) asignacion -> . variable EQUAL expresion SEMICOLON
    (45) expresion -> . expresion binop expresion
    (46) expresion -> . plus_minus expresion
    (47) expresion -> . LPAREN expresion RPAREN
    (48) expresion -> . var_cte
    (62) returns -> . RETURN expresion SEMICOLON
    (63) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (67) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (68) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (77) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (83) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (86) repeticion -> . condicional
    (87) repeticion -> . no_condicional
    (71) variable -> . ID variable_op
    (72) variable -> . llamada_objeto
    (57) plus_minus -> . PLUS
    (58) plus_minus -> . MINUS
    (59) var_cte -> . variable
    (60) var_cte -> . CTEF
    (61) var_cte -> . CTEI
    (88) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (89) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 73
    RETURN          shift and go to state 75
    ID              shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87

    estatutos                      shift and go to state 192
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    expresion                      shift and go to state 63
    returns                        shift and go to state 64
    llamada_funcion                shift and go to state 65
    llamada_objeto                 shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    decision                       shift and go to state 69
    repeticion                     shift and go to state 70
    variable                       shift and go to state 71
    plus_minus                     shift and go to state 72
    var_cte                        shift and go to state 74
    condicional                    shift and go to state 80
    no_condicional                 shift and go to state 81

state 191

    (89) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 89 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)


state 192

    (84) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 193


state 193

    (84) op_decision -> ELSE LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    ID              reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    READ            reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    IF              reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FROM            reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 84 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 76 resolved as shift
WARNING: shift/reduce conflict for SAME in state 109 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for SAME in state 127 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 127 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 127 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 60
