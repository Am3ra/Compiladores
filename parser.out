Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> definiciones main
Rule 2     definiciones -> var_def definiciones
Rule 3     definiciones -> funcion_def definiciones
Rule 4     definiciones -> clase_def definiciones
Rule 5     definiciones -> empty
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> ID COLON type_simple params_op
Rule 18    params_op -> COMMA params
Rule 19    params_op -> empty
Rule 20    bloque_func -> LBRACE op_var estatutos RBRACE
Rule 21    main -> MAIN LPAREN RPAREN bloque_func
Rule 22    var_def -> VAR type_compuesto ID SEMICOLON
Rule 23    var_def -> VAR type_simple ID op_vardef SEMICOLON
Rule 24    op_vardef -> LBRACKET CTEI RBRACKET
Rule 25    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 26    op_vardef -> empty
Rule 27    type_simple -> INT
Rule 28    type_simple -> FLOAT
Rule 29    type_simple -> STRING
Rule 30    type_compuesto -> ID
Rule 31    estatutos -> estatuto
Rule 32    estatutos -> estatuto estatutos
Rule 33    estatutos -> empty
Rule 34    estatuto -> asignacion
Rule 35    estatuto -> expresion
Rule 36    estatuto -> returns
Rule 37    estatuto -> llamada_funcion SEMICOLON
Rule 38    estatuto -> llamada_objeto SEMICOLON
Rule 39    estatuto -> lectura
Rule 40    estatuto -> escritura
Rule 41    estatuto -> decision
Rule 42    estatuto -> repeticion
Rule 43    asignacion -> variable EQUAL expresion SEMICOLON
Rule 44    expresion -> expresion binop expresion
Rule 45    expresion -> plus_minus expresion
Rule 46    expresion -> LPAREN expresion RPAREN
Rule 47    expresion -> var_cte
Rule 48    binop -> SAME
Rule 49    binop -> NOTEQ
Rule 50    binop -> GTHAN
Rule 51    binop -> LTHAN
Rule 52    binop -> PLUS
Rule 53    binop -> MINUS
Rule 54    binop -> TIMES
Rule 55    binop -> DIVIDE
Rule 56    plus_minus -> PLUS
Rule 57    plus_minus -> MINUS
Rule 58    var_cte -> variable
Rule 59    var_cte -> CTEF
Rule 60    var_cte -> CTEI
Rule 61    returns -> RETURN expresion SEMICOLON
Rule 62    llamada_funcion -> ID LPAREN param_llamada RPAREN
Rule 63    param_llamada -> expresion
Rule 64    param_llamada -> expresion COMMA param_llamada
Rule 65    param_llamada -> empty
Rule 66    llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN
Rule 67    lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON
Rule 68    op_lectura -> COMMA variable op_lectura
Rule 69    op_lectura -> empty
Rule 70    variable -> ID variable_op
Rule 71    variable -> llamada_objeto
Rule 72    variable_op -> DOT ID
Rule 73    variable_op -> LBRACKET expresion RBRACKET
Rule 74    variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
Rule 75    variable_op -> empty
Rule 76    escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
Rule 77    type_escritura -> CTESTRING
Rule 78    type_escritura -> expresion
Rule 79    op_escritura -> COMMA CTESTRING op_escritura
Rule 80    op_escritura -> COMMA expresion op_escritura
Rule 81    op_escritura -> empty
Rule 82    decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
Rule 83    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 84    op_decision -> empty
Rule 85    repeticion -> condicional
Rule 86    repeticion -> no_condicional
Rule 87    condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
Rule 88    no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
Rule 89    empty -> <empty>

Terminals, with rules where they appear

CLASS                : 6
COLON                : 17
COMMA                : 18 64 68 79 80
CTEF                 : 59
CTEI                 : 24 25 25 60
CTESTRING            : 77 79
DIVIDE               : 55
DO                   : 87 88
DOT                  : 66 72
ELSE                 : 83
EQUAL                : 43 88
FLOAT                : 28
FROM                 : 88
FUNC                 : 12
GTHAN                : 50
ID                   : 6 7 12 17 22 23 30 62 66 66 70 72
IF                   : 82
INHERIT              : 7
INT                  : 27
LBRACE               : 9 20 82 83 87 88
LBRACKET             : 24 25 25 73 74 74
LPAREN               : 12 21 46 62 66 67 76 82 87
LTHAN                : 51
MAIN                 : 21
MINUS                : 53 57
NOTEQ                : 49
PLUS                 : 52 56
RBRACE               : 9 20 82 83 87 88
RBRACKET             : 24 25 25 73 74 74
READ                 : 67
RET                  : 15
RETURN               : 61
RPAREN               : 12 21 46 62 66 67 76 82 87
SAME                 : 48
SEMICOLON            : 22 23 37 38 43 61 67 76
STRING               : 29
THEN                 : 82
TIMES                : 54
TO                   : 88
VAR                  : 22 23
WHILE                : 87
WRITE                : 76
error                : 

Nonterminals, with rules where they appear

asignacion           : 34
binop                : 44
bloque_clase         : 6
bloque_func          : 12 21
clase_def            : 4
clase_op             : 6
condicional          : 85
decision             : 41
definiciones         : 1 2 3 4
empty                : 5 8 11 14 16 19 26 33 65 69 75 81 84
escritura            : 40
estatuto             : 31 32
estatutos            : 20 32 82 83 87 88
expresion            : 35 43 44 44 45 46 61 63 64 73 74 74 78 80 82 87 88 88
funcion_def          : 3 10
lectura              : 39
llamada_funcion      : 37
llamada_objeto       : 38 71
main                 : 1
no_condicional       : 86
op_decision          : 82
op_escritura         : 76 79 80
op_func              : 9
op_lectura           : 67 68
op_var               : 9 20
op_vardef            : 23
param_llamada        : 62 64 66
params               : 12 18
params_op            : 17
plus_minus           : 45
programa             : 0
repeticion           : 42
return_option        : 12
returns              : 36
type_compuesto       : 22
type_escritura       : 76
type_simple          : 15 17 23
var_cte              : 47
var_def              : 2 13
variable             : 43 58 67 68 88
variable_op          : 70

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . definiciones main
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (89) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 89 (empty -> .)

    programa                       shift and go to state 1
    definiciones                   shift and go to state 2
    var_def                        shift and go to state 3
    funcion_def                    shift and go to state 4
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 1

    (0) S' -> programa .



state 2

    (1) programa -> definiciones . main
    (21) main -> . MAIN LPAREN RPAREN bloque_func

    MAIN            shift and go to state 11

    main                           shift and go to state 10

state 3

    (2) definiciones -> var_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (89) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 89 (empty -> .)

    var_def                        shift and go to state 3
    definiciones                   shift and go to state 12
    funcion_def                    shift and go to state 4
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 4

    (3) definiciones -> funcion_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (89) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 89 (empty -> .)

    funcion_def                    shift and go to state 4
    definiciones                   shift and go to state 13
    var_def                        shift and go to state 3
    clase_def                      shift and go to state 5
    empty                          shift and go to state 6

state 5

    (4) definiciones -> clase_def . definiciones
    (2) definiciones -> . var_def definiciones
    (3) definiciones -> . funcion_def definiciones
    (4) definiciones -> . clase_def definiciones
    (5) definiciones -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (89) empty -> .

    VAR             shift and go to state 7
    FUNC            shift and go to state 8
    CLASS           shift and go to state 9
    MAIN            reduce using rule 89 (empty -> .)

    clase_def                      shift and go to state 5
    definiciones                   shift and go to state 14
    var_def                        shift and go to state 3
    funcion_def                    shift and go to state 4
    empty                          shift and go to state 6

state 6

    (5) definiciones -> empty .

    MAIN            reduce using rule 5 (definiciones -> empty .)


state 7

    (22) var_def -> VAR . type_compuesto ID SEMICOLON
    (23) var_def -> VAR . type_simple ID op_vardef SEMICOLON
    (30) type_compuesto -> . ID
    (27) type_simple -> . INT
    (28) type_simple -> . FLOAT
    (29) type_simple -> . STRING

    ID              shift and go to state 16
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_compuesto                 shift and go to state 15
    type_simple                    shift and go to state 17

state 8

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 21


state 9

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 22


state 10

    (1) programa -> definiciones main .

    $end            reduce using rule 1 (programa -> definiciones main .)


state 11

    (21) main -> MAIN . LPAREN RPAREN bloque_func

    LPAREN          shift and go to state 23


state 12

    (2) definiciones -> var_def definiciones .

    MAIN            reduce using rule 2 (definiciones -> var_def definiciones .)


state 13

    (3) definiciones -> funcion_def definiciones .

    MAIN            reduce using rule 3 (definiciones -> funcion_def definiciones .)


state 14

    (4) definiciones -> clase_def definiciones .

    MAIN            reduce using rule 4 (definiciones -> clase_def definiciones .)


state 15

    (22) var_def -> VAR type_compuesto . ID SEMICOLON

    ID              shift and go to state 24


state 16

    (30) type_compuesto -> ID .

    ID              reduce using rule 30 (type_compuesto -> ID .)


state 17

    (23) var_def -> VAR type_simple . ID op_vardef SEMICOLON

    ID              shift and go to state 25


state 18

    (27) type_simple -> INT .

    ID              reduce using rule 27 (type_simple -> INT .)
    COMMA           reduce using rule 27 (type_simple -> INT .)
    RPAREN          reduce using rule 27 (type_simple -> INT .)
    LBRACE          reduce using rule 27 (type_simple -> INT .)


state 19

    (28) type_simple -> FLOAT .

    ID              reduce using rule 28 (type_simple -> FLOAT .)
    COMMA           reduce using rule 28 (type_simple -> FLOAT .)
    RPAREN          reduce using rule 28 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 28 (type_simple -> FLOAT .)


state 20

    (29) type_simple -> STRING .

    ID              reduce using rule 29 (type_simple -> STRING .)
    COMMA           reduce using rule 29 (type_simple -> STRING .)
    RPAREN          reduce using rule 29 (type_simple -> STRING .)
    LBRACE          reduce using rule 29 (type_simple -> STRING .)


state 21

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 26


state 22

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (89) empty -> .

    INHERIT         shift and go to state 28
    LBRACE          reduce using rule 89 (empty -> .)

    clase_op                       shift and go to state 27
    empty                          shift and go to state 29

state 23

    (21) main -> MAIN LPAREN . RPAREN bloque_func

    RPAREN          shift and go to state 30


state 24

    (22) var_def -> VAR type_compuesto ID . SEMICOLON

    SEMICOLON       shift and go to state 31


state 25

    (23) var_def -> VAR type_simple ID . op_vardef SEMICOLON
    (24) op_vardef -> . LBRACKET CTEI RBRACKET
    (25) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (26) op_vardef -> . empty
    (89) empty -> .

    LBRACKET        shift and go to state 33
    SEMICOLON       reduce using rule 89 (empty -> .)

    op_vardef                      shift and go to state 32
    empty                          shift and go to state 34

state 26

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . ID COLON type_simple params_op

    ID              shift and go to state 35

    params                         shift and go to state 36

state 27

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 38

    bloque_clase                   shift and go to state 37

state 28

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 39


state 29

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 30

    (21) main -> MAIN LPAREN RPAREN . bloque_func
    (20) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 41

    bloque_func                    shift and go to state 40

state 31

    (22) var_def -> VAR type_compuesto ID SEMICOLON .

    VAR             reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    FUNC            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CLASS           reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    MAIN            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    RBRACE          reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    LPAREN          reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    RETURN          reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    ID              reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    READ            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    WRITE           reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    IF              reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    PLUS            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    MINUS           reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CTEF            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    CTEI            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    WHILE           reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)
    FROM            reduce using rule 22 (var_def -> VAR type_compuesto ID SEMICOLON .)


state 32

    (23) var_def -> VAR type_simple ID op_vardef . SEMICOLON

    SEMICOLON       shift and go to state 42


state 33

    (24) op_vardef -> LBRACKET . CTEI RBRACKET
    (25) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 43


state 34

    (26) op_vardef -> empty .

    SEMICOLON       reduce using rule 26 (op_vardef -> empty .)


state 35

    (17) params -> ID . COLON type_simple params_op

    COLON           shift and go to state 44


state 36

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 45


state 37

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    VAR             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 38

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (89) empty -> .

    VAR             shift and go to state 7
    FUNC            reduce using rule 89 (empty -> .)
    RBRACE          reduce using rule 89 (empty -> .)

    op_var                         shift and go to state 46
    var_def                        shift and go to state 47
    empty                          shift and go to state 48

state 39

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 40

    (21) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 21 (main -> MAIN LPAREN RPAREN bloque_func .)


state 41

    (20) bloque_func -> LBRACE . op_var estatutos RBRACE
    (13) op_var -> . var_def
    (14) op_var -> . empty
    (22) var_def -> . VAR type_compuesto ID SEMICOLON
    (23) var_def -> . VAR type_simple ID op_vardef SEMICOLON
    (89) empty -> .

    VAR             shift and go to state 7
    LPAREN          reduce using rule 89 (empty -> .)
    RETURN          reduce using rule 89 (empty -> .)
    ID              reduce using rule 89 (empty -> .)
    READ            reduce using rule 89 (empty -> .)
    WRITE           reduce using rule 89 (empty -> .)
    IF              reduce using rule 89 (empty -> .)
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    CTEF            reduce using rule 89 (empty -> .)
    CTEI            reduce using rule 89 (empty -> .)
    WHILE           reduce using rule 89 (empty -> .)
    FROM            reduce using rule 89 (empty -> .)
    RBRACE          reduce using rule 89 (empty -> .)

    op_var                         shift and go to state 49
    var_def                        shift and go to state 47
    empty                          shift and go to state 48

state 42

    (23) var_def -> VAR type_simple ID op_vardef SEMICOLON .

    VAR             reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FUNC            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CLASS           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    MAIN            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RBRACE          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    LPAREN          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    RETURN          reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    ID              reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    READ            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WRITE           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    IF              reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    PLUS            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    MINUS           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEF            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    CTEI            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    WHILE           reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)
    FROM            reduce using rule 23 (var_def -> VAR type_simple ID op_vardef SEMICOLON .)


state 43

    (24) op_vardef -> LBRACKET CTEI . RBRACKET
    (25) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 50


state 44

    (17) params -> ID COLON . type_simple params_op
    (27) type_simple -> . INT
    (28) type_simple -> . FLOAT
    (29) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 51

state 45

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (89) empty -> .

    RET             shift and go to state 53
    LBRACE          reduce using rule 89 (empty -> .)

    return_option                  shift and go to state 52
    empty                          shift and go to state 54

state 46

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (89) empty -> .

    FUNC            shift and go to state 8
    RBRACE          reduce using rule 89 (empty -> .)

    op_func                        shift and go to state 55
    funcion_def                    shift and go to state 56
    empty                          shift and go to state 57

state 47

    (13) op_var -> var_def .

    FUNC            reduce using rule 13 (op_var -> var_def .)
    RBRACE          reduce using rule 13 (op_var -> var_def .)
    LPAREN          reduce using rule 13 (op_var -> var_def .)
    RETURN          reduce using rule 13 (op_var -> var_def .)
    ID              reduce using rule 13 (op_var -> var_def .)
    READ            reduce using rule 13 (op_var -> var_def .)
    WRITE           reduce using rule 13 (op_var -> var_def .)
    IF              reduce using rule 13 (op_var -> var_def .)
    PLUS            reduce using rule 13 (op_var -> var_def .)
    MINUS           reduce using rule 13 (op_var -> var_def .)
    CTEF            reduce using rule 13 (op_var -> var_def .)
    CTEI            reduce using rule 13 (op_var -> var_def .)
    WHILE           reduce using rule 13 (op_var -> var_def .)
    FROM            reduce using rule 13 (op_var -> var_def .)


state 48

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)
    LPAREN          reduce using rule 14 (op_var -> empty .)
    RETURN          reduce using rule 14 (op_var -> empty .)
    ID              reduce using rule 14 (op_var -> empty .)
    READ            reduce using rule 14 (op_var -> empty .)
    WRITE           reduce using rule 14 (op_var -> empty .)
    IF              reduce using rule 14 (op_var -> empty .)
    PLUS            reduce using rule 14 (op_var -> empty .)
    MINUS           reduce using rule 14 (op_var -> empty .)
    CTEF            reduce using rule 14 (op_var -> empty .)
    CTEI            reduce using rule 14 (op_var -> empty .)
    WHILE           reduce using rule 14 (op_var -> empty .)
    FROM            reduce using rule 14 (op_var -> empty .)


state 49

    (20) bloque_func -> LBRACE op_var . estatutos RBRACE
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 89 (empty -> .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    estatutos                      shift and go to state 58
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    expresion                      shift and go to state 62
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    variable                       shift and go to state 70
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 50

    (24) op_vardef -> LBRACKET CTEI RBRACKET .
    (25) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 24 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 87


state 51

    (17) params -> ID COLON type_simple . params_op
    (18) params_op -> . COMMA params
    (19) params_op -> . empty
    (89) empty -> .

    COMMA           shift and go to state 89
    RPAREN          reduce using rule 89 (empty -> .)

    params_op                      shift and go to state 88
    empty                          shift and go to state 90

state 52

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (20) bloque_func -> . LBRACE op_var estatutos RBRACE

    LBRACE          shift and go to state 41

    bloque_func                    shift and go to state 91

state 53

    (15) return_option -> RET . type_simple
    (27) type_simple -> . INT
    (28) type_simple -> . FLOAT
    (29) type_simple -> . STRING

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20

    type_simple                    shift and go to state 92

state 54

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 55

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 93


state 56

    (10) op_func -> funcion_def .

    RBRACE          reduce using rule 10 (op_func -> funcion_def .)


state 57

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 58

    (20) bloque_func -> LBRACE op_var estatutos . RBRACE

    RBRACE          shift and go to state 94


state 59

    (31) estatutos -> estatuto .
    (32) estatutos -> estatuto . estatutos
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 31 (estatutos -> estatuto .)
    RBRACE          reduce using rule 31 (estatutos -> estatuto .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

  ! RBRACE          [ reduce using rule 89 (empty -> .) ]

    estatuto                       shift and go to state 59
    estatutos                      shift and go to state 95
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    expresion                      shift and go to state 62
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    variable                       shift and go to state 70
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 60

    (33) estatutos -> empty .

    RBRACE          reduce using rule 33 (estatutos -> empty .)


state 61

    (34) estatuto -> asignacion .

    LPAREN          reduce using rule 34 (estatuto -> asignacion .)
    RETURN          reduce using rule 34 (estatuto -> asignacion .)
    ID              reduce using rule 34 (estatuto -> asignacion .)
    READ            reduce using rule 34 (estatuto -> asignacion .)
    WRITE           reduce using rule 34 (estatuto -> asignacion .)
    IF              reduce using rule 34 (estatuto -> asignacion .)
    PLUS            reduce using rule 34 (estatuto -> asignacion .)
    MINUS           reduce using rule 34 (estatuto -> asignacion .)
    CTEF            reduce using rule 34 (estatuto -> asignacion .)
    CTEI            reduce using rule 34 (estatuto -> asignacion .)
    WHILE           reduce using rule 34 (estatuto -> asignacion .)
    FROM            reduce using rule 34 (estatuto -> asignacion .)
    RBRACE          reduce using rule 34 (estatuto -> asignacion .)


state 62

    (35) estatuto -> expresion .
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          reduce using rule 35 (estatuto -> expresion .)
    RETURN          reduce using rule 35 (estatuto -> expresion .)
    ID              reduce using rule 35 (estatuto -> expresion .)
    READ            reduce using rule 35 (estatuto -> expresion .)
    WRITE           reduce using rule 35 (estatuto -> expresion .)
    IF              reduce using rule 35 (estatuto -> expresion .)
    CTEF            reduce using rule 35 (estatuto -> expresion .)
    CTEI            reduce using rule 35 (estatuto -> expresion .)
    WHILE           reduce using rule 35 (estatuto -> expresion .)
    FROM            reduce using rule 35 (estatuto -> expresion .)
    RBRACE          reduce using rule 35 (estatuto -> expresion .)
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

  ! PLUS            [ reduce using rule 35 (estatuto -> expresion .) ]
  ! MINUS           [ reduce using rule 35 (estatuto -> expresion .) ]

    binop                          shift and go to state 96

state 63

    (36) estatuto -> returns .

    LPAREN          reduce using rule 36 (estatuto -> returns .)
    RETURN          reduce using rule 36 (estatuto -> returns .)
    ID              reduce using rule 36 (estatuto -> returns .)
    READ            reduce using rule 36 (estatuto -> returns .)
    WRITE           reduce using rule 36 (estatuto -> returns .)
    IF              reduce using rule 36 (estatuto -> returns .)
    PLUS            reduce using rule 36 (estatuto -> returns .)
    MINUS           reduce using rule 36 (estatuto -> returns .)
    CTEF            reduce using rule 36 (estatuto -> returns .)
    CTEI            reduce using rule 36 (estatuto -> returns .)
    WHILE           reduce using rule 36 (estatuto -> returns .)
    FROM            reduce using rule 36 (estatuto -> returns .)
    RBRACE          reduce using rule 36 (estatuto -> returns .)


state 64

    (37) estatuto -> llamada_funcion . SEMICOLON

    SEMICOLON       shift and go to state 105


state 65

    (38) estatuto -> llamada_objeto . SEMICOLON
    (71) variable -> llamada_objeto .

    SEMICOLON       shift and go to state 106
    EQUAL           reduce using rule 71 (variable -> llamada_objeto .)
    SAME            reduce using rule 71 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 71 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 71 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 71 (variable -> llamada_objeto .)
    PLUS            reduce using rule 71 (variable -> llamada_objeto .)
    MINUS           reduce using rule 71 (variable -> llamada_objeto .)
    TIMES           reduce using rule 71 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 71 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 71 (variable -> llamada_objeto .)
    RETURN          reduce using rule 71 (variable -> llamada_objeto .)
    ID              reduce using rule 71 (variable -> llamada_objeto .)
    READ            reduce using rule 71 (variable -> llamada_objeto .)
    WRITE           reduce using rule 71 (variable -> llamada_objeto .)
    IF              reduce using rule 71 (variable -> llamada_objeto .)
    CTEF            reduce using rule 71 (variable -> llamada_objeto .)
    CTEI            reduce using rule 71 (variable -> llamada_objeto .)
    WHILE           reduce using rule 71 (variable -> llamada_objeto .)
    FROM            reduce using rule 71 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 71 (variable -> llamada_objeto .)


state 66

    (39) estatuto -> lectura .

    LPAREN          reduce using rule 39 (estatuto -> lectura .)
    RETURN          reduce using rule 39 (estatuto -> lectura .)
    ID              reduce using rule 39 (estatuto -> lectura .)
    READ            reduce using rule 39 (estatuto -> lectura .)
    WRITE           reduce using rule 39 (estatuto -> lectura .)
    IF              reduce using rule 39 (estatuto -> lectura .)
    PLUS            reduce using rule 39 (estatuto -> lectura .)
    MINUS           reduce using rule 39 (estatuto -> lectura .)
    CTEF            reduce using rule 39 (estatuto -> lectura .)
    CTEI            reduce using rule 39 (estatuto -> lectura .)
    WHILE           reduce using rule 39 (estatuto -> lectura .)
    FROM            reduce using rule 39 (estatuto -> lectura .)
    RBRACE          reduce using rule 39 (estatuto -> lectura .)


state 67

    (40) estatuto -> escritura .

    LPAREN          reduce using rule 40 (estatuto -> escritura .)
    RETURN          reduce using rule 40 (estatuto -> escritura .)
    ID              reduce using rule 40 (estatuto -> escritura .)
    READ            reduce using rule 40 (estatuto -> escritura .)
    WRITE           reduce using rule 40 (estatuto -> escritura .)
    IF              reduce using rule 40 (estatuto -> escritura .)
    PLUS            reduce using rule 40 (estatuto -> escritura .)
    MINUS           reduce using rule 40 (estatuto -> escritura .)
    CTEF            reduce using rule 40 (estatuto -> escritura .)
    CTEI            reduce using rule 40 (estatuto -> escritura .)
    WHILE           reduce using rule 40 (estatuto -> escritura .)
    FROM            reduce using rule 40 (estatuto -> escritura .)
    RBRACE          reduce using rule 40 (estatuto -> escritura .)


state 68

    (41) estatuto -> decision .

    LPAREN          reduce using rule 41 (estatuto -> decision .)
    RETURN          reduce using rule 41 (estatuto -> decision .)
    ID              reduce using rule 41 (estatuto -> decision .)
    READ            reduce using rule 41 (estatuto -> decision .)
    WRITE           reduce using rule 41 (estatuto -> decision .)
    IF              reduce using rule 41 (estatuto -> decision .)
    PLUS            reduce using rule 41 (estatuto -> decision .)
    MINUS           reduce using rule 41 (estatuto -> decision .)
    CTEF            reduce using rule 41 (estatuto -> decision .)
    CTEI            reduce using rule 41 (estatuto -> decision .)
    WHILE           reduce using rule 41 (estatuto -> decision .)
    FROM            reduce using rule 41 (estatuto -> decision .)
    RBRACE          reduce using rule 41 (estatuto -> decision .)


state 69

    (42) estatuto -> repeticion .

    LPAREN          reduce using rule 42 (estatuto -> repeticion .)
    RETURN          reduce using rule 42 (estatuto -> repeticion .)
    ID              reduce using rule 42 (estatuto -> repeticion .)
    READ            reduce using rule 42 (estatuto -> repeticion .)
    WRITE           reduce using rule 42 (estatuto -> repeticion .)
    IF              reduce using rule 42 (estatuto -> repeticion .)
    PLUS            reduce using rule 42 (estatuto -> repeticion .)
    MINUS           reduce using rule 42 (estatuto -> repeticion .)
    CTEF            reduce using rule 42 (estatuto -> repeticion .)
    CTEI            reduce using rule 42 (estatuto -> repeticion .)
    WHILE           reduce using rule 42 (estatuto -> repeticion .)
    FROM            reduce using rule 42 (estatuto -> repeticion .)
    RBRACE          reduce using rule 42 (estatuto -> repeticion .)


state 70

    (43) asignacion -> variable . EQUAL expresion SEMICOLON
    (58) var_cte -> variable .

    EQUAL           shift and go to state 107
    SAME            reduce using rule 58 (var_cte -> variable .)
    NOTEQ           reduce using rule 58 (var_cte -> variable .)
    GTHAN           reduce using rule 58 (var_cte -> variable .)
    LTHAN           reduce using rule 58 (var_cte -> variable .)
    PLUS            reduce using rule 58 (var_cte -> variable .)
    MINUS           reduce using rule 58 (var_cte -> variable .)
    TIMES           reduce using rule 58 (var_cte -> variable .)
    DIVIDE          reduce using rule 58 (var_cte -> variable .)
    LPAREN          reduce using rule 58 (var_cte -> variable .)
    RETURN          reduce using rule 58 (var_cte -> variable .)
    ID              reduce using rule 58 (var_cte -> variable .)
    READ            reduce using rule 58 (var_cte -> variable .)
    WRITE           reduce using rule 58 (var_cte -> variable .)
    IF              reduce using rule 58 (var_cte -> variable .)
    CTEF            reduce using rule 58 (var_cte -> variable .)
    CTEI            reduce using rule 58 (var_cte -> variable .)
    WHILE           reduce using rule 58 (var_cte -> variable .)
    FROM            reduce using rule 58 (var_cte -> variable .)
    RBRACE          reduce using rule 58 (var_cte -> variable .)


state 71

    (45) expresion -> plus_minus . expresion
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    plus_minus                     shift and go to state 71
    expresion                      shift and go to state 108
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 72

    (46) expresion -> LPAREN . expresion RPAREN
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 112
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 73

    (47) expresion -> var_cte .

    SAME            reduce using rule 47 (expresion -> var_cte .)
    NOTEQ           reduce using rule 47 (expresion -> var_cte .)
    GTHAN           reduce using rule 47 (expresion -> var_cte .)
    LTHAN           reduce using rule 47 (expresion -> var_cte .)
    PLUS            reduce using rule 47 (expresion -> var_cte .)
    MINUS           reduce using rule 47 (expresion -> var_cte .)
    TIMES           reduce using rule 47 (expresion -> var_cte .)
    DIVIDE          reduce using rule 47 (expresion -> var_cte .)
    LPAREN          reduce using rule 47 (expresion -> var_cte .)
    RETURN          reduce using rule 47 (expresion -> var_cte .)
    ID              reduce using rule 47 (expresion -> var_cte .)
    READ            reduce using rule 47 (expresion -> var_cte .)
    WRITE           reduce using rule 47 (expresion -> var_cte .)
    IF              reduce using rule 47 (expresion -> var_cte .)
    CTEF            reduce using rule 47 (expresion -> var_cte .)
    CTEI            reduce using rule 47 (expresion -> var_cte .)
    WHILE           reduce using rule 47 (expresion -> var_cte .)
    FROM            reduce using rule 47 (expresion -> var_cte .)
    RBRACE          reduce using rule 47 (expresion -> var_cte .)
    RPAREN          reduce using rule 47 (expresion -> var_cte .)
    SEMICOLON       reduce using rule 47 (expresion -> var_cte .)
    COMMA           reduce using rule 47 (expresion -> var_cte .)
    RBRACKET        reduce using rule 47 (expresion -> var_cte .)
    TO              reduce using rule 47 (expresion -> var_cte .)
    DO              reduce using rule 47 (expresion -> var_cte .)


state 74

    (61) returns -> RETURN . expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 113
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 75

    (62) llamada_funcion -> ID . LPAREN param_llamada RPAREN
    (66) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (70) variable -> ID . variable_op
    (72) variable_op -> . DOT ID
    (73) variable_op -> . LBRACKET expresion RBRACKET
    (74) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (75) variable_op -> . empty
    (89) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 114
    DOT             shift and go to state 115
    LBRACKET        shift and go to state 117
    EQUAL           reduce using rule 89 (empty -> .)
    SAME            reduce using rule 89 (empty -> .)
    NOTEQ           reduce using rule 89 (empty -> .)
    GTHAN           reduce using rule 89 (empty -> .)
    LTHAN           reduce using rule 89 (empty -> .)
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    TIMES           reduce using rule 89 (empty -> .)
    DIVIDE          reduce using rule 89 (empty -> .)
    RETURN          reduce using rule 89 (empty -> .)
    ID              reduce using rule 89 (empty -> .)
    READ            reduce using rule 89 (empty -> .)
    WRITE           reduce using rule 89 (empty -> .)
    IF              reduce using rule 89 (empty -> .)
    CTEF            reduce using rule 89 (empty -> .)
    CTEI            reduce using rule 89 (empty -> .)
    WHILE           reduce using rule 89 (empty -> .)
    FROM            reduce using rule 89 (empty -> .)
    RBRACE          reduce using rule 89 (empty -> .)

  ! LPAREN          [ reduce using rule 89 (empty -> .) ]

    variable_op                    shift and go to state 116
    empty                          shift and go to state 118

state 76

    (67) lectura -> READ . LPAREN variable op_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 119


state 77

    (76) escritura -> WRITE . LPAREN type_escritura op_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 120


state 78

    (82) decision -> IF . LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 121


state 79

    (85) repeticion -> condicional .

    LPAREN          reduce using rule 85 (repeticion -> condicional .)
    RETURN          reduce using rule 85 (repeticion -> condicional .)
    ID              reduce using rule 85 (repeticion -> condicional .)
    READ            reduce using rule 85 (repeticion -> condicional .)
    WRITE           reduce using rule 85 (repeticion -> condicional .)
    IF              reduce using rule 85 (repeticion -> condicional .)
    PLUS            reduce using rule 85 (repeticion -> condicional .)
    MINUS           reduce using rule 85 (repeticion -> condicional .)
    CTEF            reduce using rule 85 (repeticion -> condicional .)
    CTEI            reduce using rule 85 (repeticion -> condicional .)
    WHILE           reduce using rule 85 (repeticion -> condicional .)
    FROM            reduce using rule 85 (repeticion -> condicional .)
    RBRACE          reduce using rule 85 (repeticion -> condicional .)


state 80

    (86) repeticion -> no_condicional .

    LPAREN          reduce using rule 86 (repeticion -> no_condicional .)
    RETURN          reduce using rule 86 (repeticion -> no_condicional .)
    ID              reduce using rule 86 (repeticion -> no_condicional .)
    READ            reduce using rule 86 (repeticion -> no_condicional .)
    WRITE           reduce using rule 86 (repeticion -> no_condicional .)
    IF              reduce using rule 86 (repeticion -> no_condicional .)
    PLUS            reduce using rule 86 (repeticion -> no_condicional .)
    MINUS           reduce using rule 86 (repeticion -> no_condicional .)
    CTEF            reduce using rule 86 (repeticion -> no_condicional .)
    CTEI            reduce using rule 86 (repeticion -> no_condicional .)
    WHILE           reduce using rule 86 (repeticion -> no_condicional .)
    FROM            reduce using rule 86 (repeticion -> no_condicional .)
    RBRACE          reduce using rule 86 (repeticion -> no_condicional .)


state 81

    (56) plus_minus -> PLUS .

    LPAREN          reduce using rule 56 (plus_minus -> PLUS .)
    PLUS            reduce using rule 56 (plus_minus -> PLUS .)
    MINUS           reduce using rule 56 (plus_minus -> PLUS .)
    CTEF            reduce using rule 56 (plus_minus -> PLUS .)
    CTEI            reduce using rule 56 (plus_minus -> PLUS .)
    ID              reduce using rule 56 (plus_minus -> PLUS .)


state 82

    (57) plus_minus -> MINUS .

    LPAREN          reduce using rule 57 (plus_minus -> MINUS .)
    PLUS            reduce using rule 57 (plus_minus -> MINUS .)
    MINUS           reduce using rule 57 (plus_minus -> MINUS .)
    CTEF            reduce using rule 57 (plus_minus -> MINUS .)
    CTEI            reduce using rule 57 (plus_minus -> MINUS .)
    ID              reduce using rule 57 (plus_minus -> MINUS .)


state 83

    (59) var_cte -> CTEF .

    SAME            reduce using rule 59 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 59 (var_cte -> CTEF .)
    GTHAN           reduce using rule 59 (var_cte -> CTEF .)
    LTHAN           reduce using rule 59 (var_cte -> CTEF .)
    PLUS            reduce using rule 59 (var_cte -> CTEF .)
    MINUS           reduce using rule 59 (var_cte -> CTEF .)
    TIMES           reduce using rule 59 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 59 (var_cte -> CTEF .)
    LPAREN          reduce using rule 59 (var_cte -> CTEF .)
    RETURN          reduce using rule 59 (var_cte -> CTEF .)
    ID              reduce using rule 59 (var_cte -> CTEF .)
    READ            reduce using rule 59 (var_cte -> CTEF .)
    WRITE           reduce using rule 59 (var_cte -> CTEF .)
    IF              reduce using rule 59 (var_cte -> CTEF .)
    CTEF            reduce using rule 59 (var_cte -> CTEF .)
    CTEI            reduce using rule 59 (var_cte -> CTEF .)
    WHILE           reduce using rule 59 (var_cte -> CTEF .)
    FROM            reduce using rule 59 (var_cte -> CTEF .)
    RBRACE          reduce using rule 59 (var_cte -> CTEF .)
    RPAREN          reduce using rule 59 (var_cte -> CTEF .)
    SEMICOLON       reduce using rule 59 (var_cte -> CTEF .)
    COMMA           reduce using rule 59 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 59 (var_cte -> CTEF .)
    TO              reduce using rule 59 (var_cte -> CTEF .)
    DO              reduce using rule 59 (var_cte -> CTEF .)


state 84

    (60) var_cte -> CTEI .

    SAME            reduce using rule 60 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 60 (var_cte -> CTEI .)
    GTHAN           reduce using rule 60 (var_cte -> CTEI .)
    LTHAN           reduce using rule 60 (var_cte -> CTEI .)
    PLUS            reduce using rule 60 (var_cte -> CTEI .)
    MINUS           reduce using rule 60 (var_cte -> CTEI .)
    TIMES           reduce using rule 60 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 60 (var_cte -> CTEI .)
    LPAREN          reduce using rule 60 (var_cte -> CTEI .)
    RETURN          reduce using rule 60 (var_cte -> CTEI .)
    ID              reduce using rule 60 (var_cte -> CTEI .)
    READ            reduce using rule 60 (var_cte -> CTEI .)
    WRITE           reduce using rule 60 (var_cte -> CTEI .)
    IF              reduce using rule 60 (var_cte -> CTEI .)
    CTEF            reduce using rule 60 (var_cte -> CTEI .)
    CTEI            reduce using rule 60 (var_cte -> CTEI .)
    WHILE           reduce using rule 60 (var_cte -> CTEI .)
    FROM            reduce using rule 60 (var_cte -> CTEI .)
    RBRACE          reduce using rule 60 (var_cte -> CTEI .)
    RPAREN          reduce using rule 60 (var_cte -> CTEI .)
    SEMICOLON       reduce using rule 60 (var_cte -> CTEI .)
    COMMA           reduce using rule 60 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 60 (var_cte -> CTEI .)
    TO              reduce using rule 60 (var_cte -> CTEI .)
    DO              reduce using rule 60 (var_cte -> CTEI .)


state 85

    (87) condicional -> WHILE . LPAREN expresion RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 122


state 86

    (88) no_condicional -> FROM . variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 110

    variable                       shift and go to state 123
    llamada_objeto                 shift and go to state 111

state 87

    (25) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 124


state 88

    (17) params -> ID COLON type_simple params_op .

    RPAREN          reduce using rule 17 (params -> ID COLON type_simple params_op .)


state 89

    (18) params_op -> COMMA . params
    (17) params -> . ID COLON type_simple params_op

    ID              shift and go to state 35

    params                         shift and go to state 125

state 90

    (19) params_op -> empty .

    RPAREN          reduce using rule 19 (params_op -> empty .)


state 91

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    VAR             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 92

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 93

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    VAR             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 94

    (20) bloque_func -> LBRACE op_var estatutos RBRACE .

    $end            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    VAR             reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    FUNC            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    CLASS           reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    MAIN            reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)
    RBRACE          reduce using rule 20 (bloque_func -> LBRACE op_var estatutos RBRACE .)


state 95

    (32) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 32 (estatutos -> estatuto estatutos .)


state 96

    (44) expresion -> expresion binop . expresion
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 126
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 97

    (48) binop -> SAME .

    LPAREN          reduce using rule 48 (binop -> SAME .)
    PLUS            reduce using rule 48 (binop -> SAME .)
    MINUS           reduce using rule 48 (binop -> SAME .)
    CTEF            reduce using rule 48 (binop -> SAME .)
    CTEI            reduce using rule 48 (binop -> SAME .)
    ID              reduce using rule 48 (binop -> SAME .)


state 98

    (49) binop -> NOTEQ .

    LPAREN          reduce using rule 49 (binop -> NOTEQ .)
    PLUS            reduce using rule 49 (binop -> NOTEQ .)
    MINUS           reduce using rule 49 (binop -> NOTEQ .)
    CTEF            reduce using rule 49 (binop -> NOTEQ .)
    CTEI            reduce using rule 49 (binop -> NOTEQ .)
    ID              reduce using rule 49 (binop -> NOTEQ .)


state 99

    (50) binop -> GTHAN .

    LPAREN          reduce using rule 50 (binop -> GTHAN .)
    PLUS            reduce using rule 50 (binop -> GTHAN .)
    MINUS           reduce using rule 50 (binop -> GTHAN .)
    CTEF            reduce using rule 50 (binop -> GTHAN .)
    CTEI            reduce using rule 50 (binop -> GTHAN .)
    ID              reduce using rule 50 (binop -> GTHAN .)


state 100

    (51) binop -> LTHAN .

    LPAREN          reduce using rule 51 (binop -> LTHAN .)
    PLUS            reduce using rule 51 (binop -> LTHAN .)
    MINUS           reduce using rule 51 (binop -> LTHAN .)
    CTEF            reduce using rule 51 (binop -> LTHAN .)
    CTEI            reduce using rule 51 (binop -> LTHAN .)
    ID              reduce using rule 51 (binop -> LTHAN .)


state 101

    (52) binop -> PLUS .

    LPAREN          reduce using rule 52 (binop -> PLUS .)
    PLUS            reduce using rule 52 (binop -> PLUS .)
    MINUS           reduce using rule 52 (binop -> PLUS .)
    CTEF            reduce using rule 52 (binop -> PLUS .)
    CTEI            reduce using rule 52 (binop -> PLUS .)
    ID              reduce using rule 52 (binop -> PLUS .)


state 102

    (53) binop -> MINUS .

    LPAREN          reduce using rule 53 (binop -> MINUS .)
    PLUS            reduce using rule 53 (binop -> MINUS .)
    MINUS           reduce using rule 53 (binop -> MINUS .)
    CTEF            reduce using rule 53 (binop -> MINUS .)
    CTEI            reduce using rule 53 (binop -> MINUS .)
    ID              reduce using rule 53 (binop -> MINUS .)


state 103

    (54) binop -> TIMES .

    LPAREN          reduce using rule 54 (binop -> TIMES .)
    PLUS            reduce using rule 54 (binop -> TIMES .)
    MINUS           reduce using rule 54 (binop -> TIMES .)
    CTEF            reduce using rule 54 (binop -> TIMES .)
    CTEI            reduce using rule 54 (binop -> TIMES .)
    ID              reduce using rule 54 (binop -> TIMES .)


state 104

    (55) binop -> DIVIDE .

    LPAREN          reduce using rule 55 (binop -> DIVIDE .)
    PLUS            reduce using rule 55 (binop -> DIVIDE .)
    MINUS           reduce using rule 55 (binop -> DIVIDE .)
    CTEF            reduce using rule 55 (binop -> DIVIDE .)
    CTEI            reduce using rule 55 (binop -> DIVIDE .)
    ID              reduce using rule 55 (binop -> DIVIDE .)


state 105

    (37) estatuto -> llamada_funcion SEMICOLON .

    LPAREN          reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    ID              reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    READ            reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    WRITE           reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    IF              reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    PLUS            reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    MINUS           reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    CTEF            reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    CTEI            reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    FROM            reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)
    RBRACE          reduce using rule 37 (estatuto -> llamada_funcion SEMICOLON .)


state 106

    (38) estatuto -> llamada_objeto SEMICOLON .

    LPAREN          reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    ID              reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    READ            reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    WRITE           reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    IF              reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    PLUS            reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    MINUS           reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    CTEF            reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    CTEI            reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    FROM            reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)
    RBRACE          reduce using rule 38 (estatuto -> llamada_objeto SEMICOLON .)


state 107

    (43) asignacion -> variable EQUAL . expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    variable                       shift and go to state 109
    expresion                      shift and go to state 127
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    llamada_objeto                 shift and go to state 111

state 108

    (45) expresion -> plus_minus expresion .
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 45 (expresion -> plus_minus expresion .)
    RETURN          reduce using rule 45 (expresion -> plus_minus expresion .)
    ID              reduce using rule 45 (expresion -> plus_minus expresion .)
    READ            reduce using rule 45 (expresion -> plus_minus expresion .)
    WRITE           reduce using rule 45 (expresion -> plus_minus expresion .)
    IF              reduce using rule 45 (expresion -> plus_minus expresion .)
    CTEF            reduce using rule 45 (expresion -> plus_minus expresion .)
    CTEI            reduce using rule 45 (expresion -> plus_minus expresion .)
    WHILE           reduce using rule 45 (expresion -> plus_minus expresion .)
    FROM            reduce using rule 45 (expresion -> plus_minus expresion .)
    RBRACE          reduce using rule 45 (expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 45 (expresion -> plus_minus expresion .)
    SEMICOLON       reduce using rule 45 (expresion -> plus_minus expresion .)
    COMMA           reduce using rule 45 (expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 45 (expresion -> plus_minus expresion .)
    TO              reduce using rule 45 (expresion -> plus_minus expresion .)
    DO              reduce using rule 45 (expresion -> plus_minus expresion .)
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

  ! SAME            [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! NOTEQ           [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! GTHAN           [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! LTHAN           [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! PLUS            [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! MINUS           [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! TIMES           [ reduce using rule 45 (expresion -> plus_minus expresion .) ]
  ! DIVIDE          [ reduce using rule 45 (expresion -> plus_minus expresion .) ]

    binop                          shift and go to state 96

state 109

    (58) var_cte -> variable .

    SAME            reduce using rule 58 (var_cte -> variable .)
    NOTEQ           reduce using rule 58 (var_cte -> variable .)
    GTHAN           reduce using rule 58 (var_cte -> variable .)
    LTHAN           reduce using rule 58 (var_cte -> variable .)
    PLUS            reduce using rule 58 (var_cte -> variable .)
    MINUS           reduce using rule 58 (var_cte -> variable .)
    TIMES           reduce using rule 58 (var_cte -> variable .)
    DIVIDE          reduce using rule 58 (var_cte -> variable .)
    LPAREN          reduce using rule 58 (var_cte -> variable .)
    RETURN          reduce using rule 58 (var_cte -> variable .)
    ID              reduce using rule 58 (var_cte -> variable .)
    READ            reduce using rule 58 (var_cte -> variable .)
    WRITE           reduce using rule 58 (var_cte -> variable .)
    IF              reduce using rule 58 (var_cte -> variable .)
    CTEF            reduce using rule 58 (var_cte -> variable .)
    CTEI            reduce using rule 58 (var_cte -> variable .)
    WHILE           reduce using rule 58 (var_cte -> variable .)
    FROM            reduce using rule 58 (var_cte -> variable .)
    RBRACE          reduce using rule 58 (var_cte -> variable .)
    RPAREN          reduce using rule 58 (var_cte -> variable .)
    SEMICOLON       reduce using rule 58 (var_cte -> variable .)
    COMMA           reduce using rule 58 (var_cte -> variable .)
    RBRACKET        reduce using rule 58 (var_cte -> variable .)
    TO              reduce using rule 58 (var_cte -> variable .)
    DO              reduce using rule 58 (var_cte -> variable .)


state 110

    (70) variable -> ID . variable_op
    (66) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (72) variable_op -> . DOT ID
    (73) variable_op -> . LBRACKET expresion RBRACKET
    (74) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (75) variable_op -> . empty
    (89) empty -> .

    DOT             shift and go to state 115
    LBRACKET        shift and go to state 117
    SAME            reduce using rule 89 (empty -> .)
    NOTEQ           reduce using rule 89 (empty -> .)
    GTHAN           reduce using rule 89 (empty -> .)
    LTHAN           reduce using rule 89 (empty -> .)
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    TIMES           reduce using rule 89 (empty -> .)
    DIVIDE          reduce using rule 89 (empty -> .)
    LPAREN          reduce using rule 89 (empty -> .)
    RETURN          reduce using rule 89 (empty -> .)
    ID              reduce using rule 89 (empty -> .)
    READ            reduce using rule 89 (empty -> .)
    WRITE           reduce using rule 89 (empty -> .)
    IF              reduce using rule 89 (empty -> .)
    CTEF            reduce using rule 89 (empty -> .)
    CTEI            reduce using rule 89 (empty -> .)
    WHILE           reduce using rule 89 (empty -> .)
    FROM            reduce using rule 89 (empty -> .)
    RBRACE          reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    SEMICOLON       reduce using rule 89 (empty -> .)
    COMMA           reduce using rule 89 (empty -> .)
    RBRACKET        reduce using rule 89 (empty -> .)
    TO              reduce using rule 89 (empty -> .)
    DO              reduce using rule 89 (empty -> .)
    EQUAL           reduce using rule 89 (empty -> .)

    variable_op                    shift and go to state 116
    empty                          shift and go to state 118

state 111

    (71) variable -> llamada_objeto .

    SAME            reduce using rule 71 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 71 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 71 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 71 (variable -> llamada_objeto .)
    PLUS            reduce using rule 71 (variable -> llamada_objeto .)
    MINUS           reduce using rule 71 (variable -> llamada_objeto .)
    TIMES           reduce using rule 71 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 71 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 71 (variable -> llamada_objeto .)
    RETURN          reduce using rule 71 (variable -> llamada_objeto .)
    ID              reduce using rule 71 (variable -> llamada_objeto .)
    READ            reduce using rule 71 (variable -> llamada_objeto .)
    WRITE           reduce using rule 71 (variable -> llamada_objeto .)
    IF              reduce using rule 71 (variable -> llamada_objeto .)
    CTEF            reduce using rule 71 (variable -> llamada_objeto .)
    CTEI            reduce using rule 71 (variable -> llamada_objeto .)
    WHILE           reduce using rule 71 (variable -> llamada_objeto .)
    FROM            reduce using rule 71 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 71 (variable -> llamada_objeto .)
    RPAREN          reduce using rule 71 (variable -> llamada_objeto .)
    SEMICOLON       reduce using rule 71 (variable -> llamada_objeto .)
    COMMA           reduce using rule 71 (variable -> llamada_objeto .)
    RBRACKET        reduce using rule 71 (variable -> llamada_objeto .)
    TO              reduce using rule 71 (variable -> llamada_objeto .)
    DO              reduce using rule 71 (variable -> llamada_objeto .)
    EQUAL           reduce using rule 71 (variable -> llamada_objeto .)


state 112

    (46) expresion -> LPAREN expresion . RPAREN
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RPAREN          shift and go to state 128
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 113

    (61) returns -> RETURN expresion . SEMICOLON
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    SEMICOLON       shift and go to state 129
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 114

    (62) llamada_funcion -> ID LPAREN . param_llamada RPAREN
    (63) param_llamada -> . expresion
    (64) param_llamada -> . expresion COMMA param_llamada
    (65) param_llamada -> . empty
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (89) empty -> .
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    RPAREN          reduce using rule 89 (empty -> .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    param_llamada                  shift and go to state 130
    expresion                      shift and go to state 131
    empty                          shift and go to state 132
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 115

    (66) llamada_objeto -> ID DOT . ID LPAREN param_llamada RPAREN
    (72) variable_op -> DOT . ID

    ID              shift and go to state 133


state 116

    (70) variable -> ID variable_op .

    EQUAL           reduce using rule 70 (variable -> ID variable_op .)
    SAME            reduce using rule 70 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 70 (variable -> ID variable_op .)
    GTHAN           reduce using rule 70 (variable -> ID variable_op .)
    LTHAN           reduce using rule 70 (variable -> ID variable_op .)
    PLUS            reduce using rule 70 (variable -> ID variable_op .)
    MINUS           reduce using rule 70 (variable -> ID variable_op .)
    TIMES           reduce using rule 70 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 70 (variable -> ID variable_op .)
    LPAREN          reduce using rule 70 (variable -> ID variable_op .)
    RETURN          reduce using rule 70 (variable -> ID variable_op .)
    ID              reduce using rule 70 (variable -> ID variable_op .)
    READ            reduce using rule 70 (variable -> ID variable_op .)
    WRITE           reduce using rule 70 (variable -> ID variable_op .)
    IF              reduce using rule 70 (variable -> ID variable_op .)
    CTEF            reduce using rule 70 (variable -> ID variable_op .)
    CTEI            reduce using rule 70 (variable -> ID variable_op .)
    WHILE           reduce using rule 70 (variable -> ID variable_op .)
    FROM            reduce using rule 70 (variable -> ID variable_op .)
    RBRACE          reduce using rule 70 (variable -> ID variable_op .)
    RPAREN          reduce using rule 70 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 70 (variable -> ID variable_op .)
    COMMA           reduce using rule 70 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 70 (variable -> ID variable_op .)
    TO              reduce using rule 70 (variable -> ID variable_op .)
    DO              reduce using rule 70 (variable -> ID variable_op .)


state 117

    (73) variable_op -> LBRACKET . expresion RBRACKET
    (74) variable_op -> LBRACKET . expresion RBRACKET LBRACKET expresion RBRACKET
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 134
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 118

    (75) variable_op -> empty .

    EQUAL           reduce using rule 75 (variable_op -> empty .)
    SAME            reduce using rule 75 (variable_op -> empty .)
    NOTEQ           reduce using rule 75 (variable_op -> empty .)
    GTHAN           reduce using rule 75 (variable_op -> empty .)
    LTHAN           reduce using rule 75 (variable_op -> empty .)
    PLUS            reduce using rule 75 (variable_op -> empty .)
    MINUS           reduce using rule 75 (variable_op -> empty .)
    TIMES           reduce using rule 75 (variable_op -> empty .)
    DIVIDE          reduce using rule 75 (variable_op -> empty .)
    LPAREN          reduce using rule 75 (variable_op -> empty .)
    RETURN          reduce using rule 75 (variable_op -> empty .)
    ID              reduce using rule 75 (variable_op -> empty .)
    READ            reduce using rule 75 (variable_op -> empty .)
    WRITE           reduce using rule 75 (variable_op -> empty .)
    IF              reduce using rule 75 (variable_op -> empty .)
    CTEF            reduce using rule 75 (variable_op -> empty .)
    CTEI            reduce using rule 75 (variable_op -> empty .)
    WHILE           reduce using rule 75 (variable_op -> empty .)
    FROM            reduce using rule 75 (variable_op -> empty .)
    RBRACE          reduce using rule 75 (variable_op -> empty .)
    RPAREN          reduce using rule 75 (variable_op -> empty .)
    SEMICOLON       reduce using rule 75 (variable_op -> empty .)
    COMMA           reduce using rule 75 (variable_op -> empty .)
    RBRACKET        reduce using rule 75 (variable_op -> empty .)
    TO              reduce using rule 75 (variable_op -> empty .)
    DO              reduce using rule 75 (variable_op -> empty .)


state 119

    (67) lectura -> READ LPAREN . variable op_lectura RPAREN SEMICOLON
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 110

    variable                       shift and go to state 135
    llamada_objeto                 shift and go to state 111

state 120

    (76) escritura -> WRITE LPAREN . type_escritura op_escritura RPAREN SEMICOLON
    (77) type_escritura -> . CTESTRING
    (78) type_escritura -> . expresion
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 137
    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    type_escritura                 shift and go to state 136
    expresion                      shift and go to state 138
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 121

    (82) decision -> IF LPAREN . expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 139
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 122

    (87) condicional -> WHILE LPAREN . expresion RPAREN DO LBRACE estatutos RBRACE
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 140
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 123

    (88) no_condicional -> FROM variable . EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 141


state 124

    (25) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 142


state 125

    (18) params_op -> COMMA params .

    RPAREN          reduce using rule 18 (params_op -> COMMA params .)


state 126

    (44) expresion -> expresion binop expresion .
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 44 (expresion -> expresion binop expresion .)
    RETURN          reduce using rule 44 (expresion -> expresion binop expresion .)
    ID              reduce using rule 44 (expresion -> expresion binop expresion .)
    READ            reduce using rule 44 (expresion -> expresion binop expresion .)
    WRITE           reduce using rule 44 (expresion -> expresion binop expresion .)
    IF              reduce using rule 44 (expresion -> expresion binop expresion .)
    CTEF            reduce using rule 44 (expresion -> expresion binop expresion .)
    CTEI            reduce using rule 44 (expresion -> expresion binop expresion .)
    WHILE           reduce using rule 44 (expresion -> expresion binop expresion .)
    FROM            reduce using rule 44 (expresion -> expresion binop expresion .)
    RBRACE          reduce using rule 44 (expresion -> expresion binop expresion .)
    RPAREN          reduce using rule 44 (expresion -> expresion binop expresion .)
    SEMICOLON       reduce using rule 44 (expresion -> expresion binop expresion .)
    COMMA           reduce using rule 44 (expresion -> expresion binop expresion .)
    RBRACKET        reduce using rule 44 (expresion -> expresion binop expresion .)
    TO              reduce using rule 44 (expresion -> expresion binop expresion .)
    DO              reduce using rule 44 (expresion -> expresion binop expresion .)
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

  ! SAME            [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! NOTEQ           [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! GTHAN           [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! LTHAN           [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! PLUS            [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! MINUS           [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! TIMES           [ reduce using rule 44 (expresion -> expresion binop expresion .) ]
  ! DIVIDE          [ reduce using rule 44 (expresion -> expresion binop expresion .) ]

    binop                          shift and go to state 96

state 127

    (43) asignacion -> variable EQUAL expresion . SEMICOLON
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    SEMICOLON       shift and go to state 143
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 128

    (46) expresion -> LPAREN expresion RPAREN .

    SAME            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    NOTEQ           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    READ            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    WRITE           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)


state 129

    (61) returns -> RETURN expresion SEMICOLON .

    LPAREN          reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    PLUS            reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    MINUS           reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    CTEF            reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    CTEI            reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 61 (returns -> RETURN expresion SEMICOLON .)


state 130

    (62) llamada_funcion -> ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 144


state 131

    (63) param_llamada -> expresion .
    (64) param_llamada -> expresion . COMMA param_llamada
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RPAREN          reduce using rule 63 (param_llamada -> expresion .)
    COMMA           shift and go to state 145
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 132

    (65) param_llamada -> empty .

    RPAREN          reduce using rule 65 (param_llamada -> empty .)


state 133

    (66) llamada_objeto -> ID DOT ID . LPAREN param_llamada RPAREN
    (72) variable_op -> DOT ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 146
    EQUAL           reduce using rule 72 (variable_op -> DOT ID .)
    SAME            reduce using rule 72 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 72 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 72 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 72 (variable_op -> DOT ID .)
    PLUS            reduce using rule 72 (variable_op -> DOT ID .)
    MINUS           reduce using rule 72 (variable_op -> DOT ID .)
    TIMES           reduce using rule 72 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 72 (variable_op -> DOT ID .)
    RETURN          reduce using rule 72 (variable_op -> DOT ID .)
    ID              reduce using rule 72 (variable_op -> DOT ID .)
    READ            reduce using rule 72 (variable_op -> DOT ID .)
    WRITE           reduce using rule 72 (variable_op -> DOT ID .)
    IF              reduce using rule 72 (variable_op -> DOT ID .)
    CTEF            reduce using rule 72 (variable_op -> DOT ID .)
    CTEI            reduce using rule 72 (variable_op -> DOT ID .)
    WHILE           reduce using rule 72 (variable_op -> DOT ID .)
    FROM            reduce using rule 72 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 72 (variable_op -> DOT ID .)
    RPAREN          reduce using rule 72 (variable_op -> DOT ID .)
    SEMICOLON       reduce using rule 72 (variable_op -> DOT ID .)
    COMMA           reduce using rule 72 (variable_op -> DOT ID .)
    RBRACKET        reduce using rule 72 (variable_op -> DOT ID .)
    TO              reduce using rule 72 (variable_op -> DOT ID .)
    DO              reduce using rule 72 (variable_op -> DOT ID .)

  ! LPAREN          [ reduce using rule 72 (variable_op -> DOT ID .) ]


state 134

    (73) variable_op -> LBRACKET expresion . RBRACKET
    (74) variable_op -> LBRACKET expresion . RBRACKET LBRACKET expresion RBRACKET
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RBRACKET        shift and go to state 147
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 135

    (67) lectura -> READ LPAREN variable . op_lectura RPAREN SEMICOLON
    (68) op_lectura -> . COMMA variable op_lectura
    (69) op_lectura -> . empty
    (89) empty -> .

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 89 (empty -> .)

    op_lectura                     shift and go to state 148
    empty                          shift and go to state 150

state 136

    (76) escritura -> WRITE LPAREN type_escritura . op_escritura RPAREN SEMICOLON
    (79) op_escritura -> . COMMA CTESTRING op_escritura
    (80) op_escritura -> . COMMA expresion op_escritura
    (81) op_escritura -> . empty
    (89) empty -> .

    COMMA           shift and go to state 152
    RPAREN          reduce using rule 89 (empty -> .)

    op_escritura                   shift and go to state 151
    empty                          shift and go to state 153

state 137

    (77) type_escritura -> CTESTRING .

    COMMA           reduce using rule 77 (type_escritura -> CTESTRING .)
    RPAREN          reduce using rule 77 (type_escritura -> CTESTRING .)


state 138

    (78) type_escritura -> expresion .
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    COMMA           reduce using rule 78 (type_escritura -> expresion .)
    RPAREN          reduce using rule 78 (type_escritura -> expresion .)
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 139

    (82) decision -> IF LPAREN expresion . RPAREN THEN LBRACE estatutos RBRACE op_decision
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RPAREN          shift and go to state 154
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 140

    (87) condicional -> WHILE LPAREN expresion . RPAREN DO LBRACE estatutos RBRACE
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RPAREN          shift and go to state 155
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 141

    (88) no_condicional -> FROM variable EQUAL . expresion TO expresion DO LBRACE estatutos RBRACE
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    variable                       shift and go to state 109
    expresion                      shift and go to state 156
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    llamada_objeto                 shift and go to state 111

state 142

    (25) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 143

    (43) asignacion -> variable EQUAL expresion SEMICOLON .

    LPAREN          reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    ID              reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    READ            reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WRITE           reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    IF              reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    PLUS            reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    MINUS           reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEF            reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEI            reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FROM            reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 43 (asignacion -> variable EQUAL expresion SEMICOLON .)


state 144

    (62) llamada_funcion -> ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 62 (llamada_funcion -> ID LPAREN param_llamada RPAREN .)


state 145

    (64) param_llamada -> expresion COMMA . param_llamada
    (63) param_llamada -> . expresion
    (64) param_llamada -> . expresion COMMA param_llamada
    (65) param_llamada -> . empty
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (89) empty -> .
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    RPAREN          reduce using rule 89 (empty -> .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 131
    param_llamada                  shift and go to state 157
    empty                          shift and go to state 132
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 146

    (66) llamada_objeto -> ID DOT ID LPAREN . param_llamada RPAREN
    (63) param_llamada -> . expresion
    (64) param_llamada -> . expresion COMMA param_llamada
    (65) param_llamada -> . empty
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (89) empty -> .
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    RPAREN          reduce using rule 89 (empty -> .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    param_llamada                  shift and go to state 158
    expresion                      shift and go to state 131
    empty                          shift and go to state 132
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 147

    (73) variable_op -> LBRACKET expresion RBRACKET .
    (74) variable_op -> LBRACKET expresion RBRACKET . LBRACKET expresion RBRACKET

    EQUAL           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    ID              reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    READ            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    IF              reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    TO              reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    DO              reduce using rule 73 (variable_op -> LBRACKET expresion RBRACKET .)
    LBRACKET        shift and go to state 159


state 148

    (67) lectura -> READ LPAREN variable op_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 160


state 149

    (68) op_lectura -> COMMA . variable op_lectura
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 110

    variable                       shift and go to state 161
    llamada_objeto                 shift and go to state 111

state 150

    (69) op_lectura -> empty .

    RPAREN          reduce using rule 69 (op_lectura -> empty .)


state 151

    (76) escritura -> WRITE LPAREN type_escritura op_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 152

    (79) op_escritura -> COMMA . CTESTRING op_escritura
    (80) op_escritura -> COMMA . expresion op_escritura
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 163
    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 164
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 153

    (81) op_escritura -> empty .

    RPAREN          reduce using rule 81 (op_escritura -> empty .)


state 154

    (82) decision -> IF LPAREN expresion RPAREN . THEN LBRACE estatutos RBRACE op_decision

    THEN            shift and go to state 165


state 155

    (87) condicional -> WHILE LPAREN expresion RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 166


state 156

    (88) no_condicional -> FROM variable EQUAL expresion . TO expresion DO LBRACE estatutos RBRACE
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    TO              shift and go to state 167
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 157

    (64) param_llamada -> expresion COMMA param_llamada .

    RPAREN          reduce using rule 64 (param_llamada -> expresion COMMA param_llamada .)


state 158

    (66) llamada_objeto -> ID DOT ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 168


state 159

    (74) variable_op -> LBRACKET expresion RBRACKET LBRACKET . expresion RBRACKET
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    expresion                      shift and go to state 169
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    variable                       shift and go to state 109
    llamada_objeto                 shift and go to state 111

state 160

    (67) lectura -> READ LPAREN variable op_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 170


state 161

    (68) op_lectura -> COMMA variable . op_lectura
    (68) op_lectura -> . COMMA variable op_lectura
    (69) op_lectura -> . empty
    (89) empty -> .

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 89 (empty -> .)

    op_lectura                     shift and go to state 171
    empty                          shift and go to state 150

state 162

    (76) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 172


state 163

    (79) op_escritura -> COMMA CTESTRING . op_escritura
    (79) op_escritura -> . COMMA CTESTRING op_escritura
    (80) op_escritura -> . COMMA expresion op_escritura
    (81) op_escritura -> . empty
    (89) empty -> .

    COMMA           shift and go to state 152
    RPAREN          reduce using rule 89 (empty -> .)

    op_escritura                   shift and go to state 173
    empty                          shift and go to state 153

state 164

    (80) op_escritura -> COMMA expresion . op_escritura
    (44) expresion -> expresion . binop expresion
    (79) op_escritura -> . COMMA CTESTRING op_escritura
    (80) op_escritura -> . COMMA expresion op_escritura
    (81) op_escritura -> . empty
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE
    (89) empty -> .

    COMMA           shift and go to state 152
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    RPAREN          reduce using rule 89 (empty -> .)

    op_escritura                   shift and go to state 174
    binop                          shift and go to state 96
    empty                          shift and go to state 153

state 165

    (82) decision -> IF LPAREN expresion RPAREN THEN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 175


state 166

    (87) condicional -> WHILE LPAREN expresion RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 176


state 167

    (88) no_condicional -> FROM variable EQUAL expresion TO . expresion DO LBRACE estatutos RBRACE
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 72
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    ID              shift and go to state 110

    variable                       shift and go to state 109
    expresion                      shift and go to state 177
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    llamada_objeto                 shift and go to state 111

state 168

    (66) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    EQUAL           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    SAME            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    NOTEQ           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    GTHAN           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LTHAN           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    PLUS            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    MINUS           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TIMES           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DIVIDE          reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LPAREN          reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RETURN          reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    ID              reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    READ            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WRITE           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    IF              reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEF            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEI            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WHILE           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FROM            reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACE          reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RPAREN          reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    COMMA           reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACKET        reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TO              reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DO              reduce using rule 66 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)


state 169

    (74) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion . RBRACKET
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    RBRACKET        shift and go to state 178
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 170

    (67) lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .

    LPAREN          reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    ID              reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    PLUS            reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    MINUS           reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEF            reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEI            reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FROM            reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)


state 171

    (68) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 68 (op_lectura -> COMMA variable op_lectura .)


state 172

    (76) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .

    LPAREN          reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    ID              reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    PLUS            reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    MINUS           reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEF            reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEI            reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FROM            reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)


state 173

    (79) op_escritura -> COMMA CTESTRING op_escritura .

    RPAREN          reduce using rule 79 (op_escritura -> COMMA CTESTRING op_escritura .)


state 174

    (80) op_escritura -> COMMA expresion op_escritura .

    RPAREN          reduce using rule 80 (op_escritura -> COMMA expresion op_escritura .)


state 175

    (82) decision -> IF LPAREN expresion RPAREN THEN LBRACE . estatutos RBRACE op_decision
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 89 (empty -> .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    expresion                      shift and go to state 62
    estatutos                      shift and go to state 179
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    variable                       shift and go to state 70
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 176

    (87) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE . estatutos RBRACE
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 89 (empty -> .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    expresion                      shift and go to state 62
    estatutos                      shift and go to state 180
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    variable                       shift and go to state 70
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 177

    (88) no_condicional -> FROM variable EQUAL expresion TO expresion . DO LBRACE estatutos RBRACE
    (44) expresion -> expresion . binop expresion
    (48) binop -> . SAME
    (49) binop -> . NOTEQ
    (50) binop -> . GTHAN
    (51) binop -> . LTHAN
    (52) binop -> . PLUS
    (53) binop -> . MINUS
    (54) binop -> . TIMES
    (55) binop -> . DIVIDE

    DO              shift and go to state 181
    SAME            shift and go to state 97
    NOTEQ           shift and go to state 98
    GTHAN           shift and go to state 99
    LTHAN           shift and go to state 100
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104

    binop                          shift and go to state 96

state 178

    (74) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .

    EQUAL           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    ID              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    READ            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    IF              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TO              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DO              reduce using rule 74 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)


state 179

    (82) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 182


state 180

    (87) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 183


state 181

    (88) no_condicional -> FROM variable EQUAL expresion TO expresion DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 184


state 182

    (82) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE . op_decision
    (83) op_decision -> . ELSE LBRACE estatutos RBRACE
    (84) op_decision -> . empty
    (89) empty -> .

    ELSE            shift and go to state 186
    LPAREN          reduce using rule 89 (empty -> .)
    RETURN          reduce using rule 89 (empty -> .)
    ID              reduce using rule 89 (empty -> .)
    READ            reduce using rule 89 (empty -> .)
    WRITE           reduce using rule 89 (empty -> .)
    IF              reduce using rule 89 (empty -> .)
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    CTEF            reduce using rule 89 (empty -> .)
    CTEI            reduce using rule 89 (empty -> .)
    WHILE           reduce using rule 89 (empty -> .)
    FROM            reduce using rule 89 (empty -> .)
    RBRACE          reduce using rule 89 (empty -> .)

    op_decision                    shift and go to state 185
    empty                          shift and go to state 187

state 183

    (87) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 87 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)


state 184

    (88) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE . estatutos RBRACE
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 89 (empty -> .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    variable                       shift and go to state 70
    expresion                      shift and go to state 62
    estatutos                      shift and go to state 188
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 185

    (82) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .

    LPAREN          reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RETURN          reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    ID              reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    READ            reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WRITE           reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    IF              reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    PLUS            reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    MINUS           reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEF            reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEI            reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WHILE           reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FROM            reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RBRACE          reduce using rule 82 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)


state 186

    (83) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 189


state 187

    (84) op_decision -> empty .

    LPAREN          reduce using rule 84 (op_decision -> empty .)
    RETURN          reduce using rule 84 (op_decision -> empty .)
    ID              reduce using rule 84 (op_decision -> empty .)
    READ            reduce using rule 84 (op_decision -> empty .)
    WRITE           reduce using rule 84 (op_decision -> empty .)
    IF              reduce using rule 84 (op_decision -> empty .)
    PLUS            reduce using rule 84 (op_decision -> empty .)
    MINUS           reduce using rule 84 (op_decision -> empty .)
    CTEF            reduce using rule 84 (op_decision -> empty .)
    CTEI            reduce using rule 84 (op_decision -> empty .)
    WHILE           reduce using rule 84 (op_decision -> empty .)
    FROM            reduce using rule 84 (op_decision -> empty .)
    RBRACE          reduce using rule 84 (op_decision -> empty .)


state 188

    (88) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 190


state 189

    (83) op_decision -> ELSE LBRACE . estatutos RBRACE
    (31) estatutos -> . estatuto
    (32) estatutos -> . estatuto estatutos
    (33) estatutos -> . empty
    (34) estatuto -> . asignacion
    (35) estatuto -> . expresion
    (36) estatuto -> . returns
    (37) estatuto -> . llamada_funcion SEMICOLON
    (38) estatuto -> . llamada_objeto SEMICOLON
    (39) estatuto -> . lectura
    (40) estatuto -> . escritura
    (41) estatuto -> . decision
    (42) estatuto -> . repeticion
    (89) empty -> .
    (43) asignacion -> . variable EQUAL expresion SEMICOLON
    (44) expresion -> . expresion binop expresion
    (45) expresion -> . plus_minus expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . var_cte
    (61) returns -> . RETURN expresion SEMICOLON
    (62) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (66) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (67) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (76) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (82) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (85) repeticion -> . condicional
    (86) repeticion -> . no_condicional
    (70) variable -> . ID variable_op
    (71) variable -> . llamada_objeto
    (56) plus_minus -> . PLUS
    (57) plus_minus -> . MINUS
    (58) var_cte -> . variable
    (59) var_cte -> . CTEF
    (60) var_cte -> . CTEI
    (87) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (88) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 89 (empty -> .)
    LPAREN          shift and go to state 72
    RETURN          shift and go to state 74
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    estatutos                      shift and go to state 191
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asignacion                     shift and go to state 61
    expresion                      shift and go to state 62
    returns                        shift and go to state 63
    llamada_funcion                shift and go to state 64
    llamada_objeto                 shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    decision                       shift and go to state 68
    repeticion                     shift and go to state 69
    variable                       shift and go to state 70
    plus_minus                     shift and go to state 71
    var_cte                        shift and go to state 73
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80

state 190

    (88) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 88 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)


state 191

    (83) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 192


state 192

    (83) op_decision -> ELSE LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    ID              reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    READ            reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    IF              reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FROM            reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 83 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for SAME in state 108 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 108 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for SAME in state 126 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 126 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 126 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 126 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 133 resolved as shift
WARNING: reduce/reduce conflict in state 59 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 59
