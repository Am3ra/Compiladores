Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    VAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaraciones main
Rule 2     declaraciones -> empty
Rule 3     declaraciones -> var_def SEMICOLON declaraciones
Rule 4     declaraciones -> funcion_def declaraciones
Rule 5     declaraciones -> clase_def declaraciones
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def op_func
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def SEMICOLON op_var
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> var_def params_op
Rule 18    params -> empty
Rule 19    params_op -> COMMA var_def params_op
Rule 20    params_op -> empty
Rule 21    bloque_func -> LBRACE estatutos RBRACE
Rule 22    main -> MAIN LPAREN RPAREN bloque_func
Rule 23    var_def -> type_compuesto ID
Rule 24    var_def -> type_simple ID op_vardef
Rule 25    op_vardef -> LBRACKET CTEI RBRACKET
Rule 26    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 27    op_vardef -> empty
Rule 28    type_simple -> INT
Rule 29    type_simple -> FLOAT
Rule 30    type_simple -> STRING
Rule 31    type_compuesto -> ID
Rule 32    estatutos -> estatuto
Rule 33    estatutos -> estatuto estatutos
Rule 34    estatutos -> empty
Rule 35    estatuto -> asignacion
Rule 36    estatuto -> expresion
Rule 37    estatuto -> returns
Rule 38    estatuto -> llamada_funcion SEMICOLON
Rule 39    estatuto -> llamada_objeto SEMICOLON
Rule 40    estatuto -> var_def SEMICOLON
Rule 41    estatuto -> lectura
Rule 42    estatuto -> escritura
Rule 43    estatuto -> decision
Rule 44    estatuto -> repeticion
Rule 45    asignacion -> variable EQUAL expresion SEMICOLON
Rule 46    expresion -> expresion binop expresion
Rule 47    expresion -> plus_minus expresion
Rule 48    expresion -> LPAREN expresion RPAREN
Rule 49    expresion -> var_cte
Rule 50    binop -> SAME
Rule 51    binop -> NOTEQ
Rule 52    binop -> GTHAN
Rule 53    binop -> LTHAN
Rule 54    binop -> PLUS
Rule 55    binop -> MINUS
Rule 56    binop -> TIMES
Rule 57    binop -> DIVIDE
Rule 58    plus_minus -> PLUS
Rule 59    plus_minus -> MINUS
Rule 60    var_cte -> variable
Rule 61    var_cte -> CTEF
Rule 62    var_cte -> CTEI
Rule 63    returns -> RETURN expresion SEMICOLON
Rule 64    llamada_funcion -> ID LPAREN param_llamada RPAREN
Rule 65    param_llamada -> expresion
Rule 66    param_llamada -> expresion COMMA param_llamada
Rule 67    param_llamada -> empty
Rule 68    llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN
Rule 69    lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON
Rule 70    op_lectura -> COMMA variable op_lectura
Rule 71    op_lectura -> empty
Rule 72    variable -> ID variable_op
Rule 73    variable -> llamada_objeto
Rule 74    variable_op -> DOT ID
Rule 75    variable_op -> LBRACKET expresion RBRACKET
Rule 76    variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
Rule 77    variable_op -> empty
Rule 78    escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
Rule 79    type_escritura -> CTESTRING
Rule 80    type_escritura -> expresion
Rule 81    op_escritura -> COMMA CTESTRING op_escritura
Rule 82    op_escritura -> COMMA expresion op_escritura
Rule 83    op_escritura -> empty
Rule 84    decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
Rule 85    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 86    op_decision -> empty
Rule 87    repeticion -> condicional
Rule 88    repeticion -> no_condicional
Rule 89    condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
Rule 90    no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
Rule 91    empty -> <empty>

Terminals, with rules where they appear

CLASS                : 6
COLON                : 
COMMA                : 19 66 70 81 82
CTEF                 : 61
CTEI                 : 25 26 26 62
CTESTRING            : 79 81
DIVIDE               : 57
DO                   : 89 90
DOT                  : 68 74
ELSE                 : 85
EQUAL                : 45 90
FLOAT                : 29
FROM                 : 90
FUNC                 : 12
GTHAN                : 52
ID                   : 6 7 12 23 24 31 64 68 68 72 74
IF                   : 84
INHERIT              : 7
INT                  : 28
LBRACE               : 9 21 84 85 89 90
LBRACKET             : 25 26 26 75 76 76
LPAREN               : 12 22 48 64 68 69 78 84 89
LTHAN                : 53
MAIN                 : 22
MINUS                : 55 59
NOTEQ                : 51
PLUS                 : 54 58
RBRACE               : 9 21 84 85 89 90
RBRACKET             : 25 26 26 75 76 76
READ                 : 69
RET                  : 15
RETURN               : 63
RPAREN               : 12 22 48 64 68 69 78 84 89
SAME                 : 50
SEMICOLON            : 3 13 38 39 40 45 63 69 78
STRING               : 30
THEN                 : 84
TIMES                : 56
TO                   : 90
VAR                  : 
WHILE                : 89
WRITE                : 78
error                : 

Nonterminals, with rules where they appear

asignacion           : 35
binop                : 46
bloque_clase         : 6
bloque_func          : 12 22
clase_def            : 5
clase_op             : 6
condicional          : 87
decision             : 43
declaraciones        : 1 3 4 5
empty                : 2 8 11 14 16 18 20 27 34 67 71 77 83 86
escritura            : 42
estatuto             : 32 33
estatutos            : 21 33 84 85 89 90
expresion            : 36 45 46 46 47 48 63 65 66 75 76 76 80 82 84 89 90 90
funcion_def          : 4 10
lectura              : 41
llamada_funcion      : 38
llamada_objeto       : 39 73
main                 : 1
no_condicional       : 88
op_decision          : 84
op_escritura         : 78 81 82
op_func              : 9 10
op_lectura           : 69 70
op_var               : 9 13
op_vardef            : 24
param_llamada        : 64 66 68
params               : 12
params_op            : 17 19
plus_minus           : 47
programa             : 0
repeticion           : 44
return_option        : 12
returns              : 37
type_compuesto       : 23
type_escritura       : 78
type_simple          : 15 24
var_cte              : 49
var_def              : 3 13 17 19 40
variable             : 45 60 69 70 90
variable_op          : 72

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaraciones main
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (91) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    MAIN            reduce using rule 91 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    programa                       shift and go to state 1
    declaraciones                  shift and go to state 2
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaraciones . main
    (22) main -> . MAIN LPAREN RPAREN bloque_func

    MAIN            shift and go to state 16

    main                           shift and go to state 15

state 3

    (2) declaraciones -> empty .

    MAIN            reduce using rule 2 (declaraciones -> empty .)


state 4

    (3) declaraciones -> var_def . SEMICOLON declaraciones

    SEMICOLON       shift and go to state 17


state 5

    (4) declaraciones -> funcion_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (91) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    MAIN            reduce using rule 91 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    funcion_def                    shift and go to state 5
    declaraciones                  shift and go to state 18
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 6

    (5) declaraciones -> clase_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (91) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    MAIN            reduce using rule 91 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    clase_def                      shift and go to state 6
    declaraciones                  shift and go to state 19
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 7

    (23) var_def -> type_compuesto . ID

    ID              shift and go to state 20


state 8

    (31) type_compuesto -> ID .

    ID              reduce using rule 31 (type_compuesto -> ID .)


state 9

    (24) var_def -> type_simple . ID op_vardef

    ID              shift and go to state 21


state 10

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 22


state 11

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 23


state 12

    (28) type_simple -> INT .

    ID              reduce using rule 28 (type_simple -> INT .)
    LBRACE          reduce using rule 28 (type_simple -> INT .)


state 13

    (29) type_simple -> FLOAT .

    ID              reduce using rule 29 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 29 (type_simple -> FLOAT .)


state 14

    (30) type_simple -> STRING .

    ID              reduce using rule 30 (type_simple -> STRING .)
    LBRACE          reduce using rule 30 (type_simple -> STRING .)


state 15

    (1) programa -> declaraciones main .

    $end            reduce using rule 1 (programa -> declaraciones main .)


state 16

    (22) main -> MAIN . LPAREN RPAREN bloque_func

    LPAREN          shift and go to state 24


state 17

    (3) declaraciones -> var_def SEMICOLON . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (91) empty -> .
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    MAIN            reduce using rule 91 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    var_def                        shift and go to state 4
    declaraciones                  shift and go to state 25
    empty                          shift and go to state 3
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 18

    (4) declaraciones -> funcion_def declaraciones .

    MAIN            reduce using rule 4 (declaraciones -> funcion_def declaraciones .)


state 19

    (5) declaraciones -> clase_def declaraciones .

    MAIN            reduce using rule 5 (declaraciones -> clase_def declaraciones .)


state 20

    (23) var_def -> type_compuesto ID .

    SEMICOLON       reduce using rule 23 (var_def -> type_compuesto ID .)
    COMMA           reduce using rule 23 (var_def -> type_compuesto ID .)
    RPAREN          reduce using rule 23 (var_def -> type_compuesto ID .)


state 21

    (24) var_def -> type_simple ID . op_vardef
    (25) op_vardef -> . LBRACKET CTEI RBRACKET
    (26) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (27) op_vardef -> . empty
    (91) empty -> .

    LBRACKET        shift and go to state 27
    SEMICOLON       reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)

    op_vardef                      shift and go to state 26
    empty                          shift and go to state 28

state 22

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 29


state 23

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (91) empty -> .

    INHERIT         shift and go to state 31
    LBRACE          reduce using rule 91 (empty -> .)

    clase_op                       shift and go to state 30
    empty                          shift and go to state 32

state 24

    (22) main -> MAIN LPAREN . RPAREN bloque_func

    RPAREN          shift and go to state 33


state 25

    (3) declaraciones -> var_def SEMICOLON declaraciones .

    MAIN            reduce using rule 3 (declaraciones -> var_def SEMICOLON declaraciones .)


state 26

    (24) var_def -> type_simple ID op_vardef .

    SEMICOLON       reduce using rule 24 (var_def -> type_simple ID op_vardef .)
    COMMA           reduce using rule 24 (var_def -> type_simple ID op_vardef .)
    RPAREN          reduce using rule 24 (var_def -> type_simple ID op_vardef .)


state 27

    (25) op_vardef -> LBRACKET . CTEI RBRACKET
    (26) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 34


state 28

    (27) op_vardef -> empty .

    SEMICOLON       reduce using rule 27 (op_vardef -> empty .)
    COMMA           reduce using rule 27 (op_vardef -> empty .)
    RPAREN          reduce using rule 27 (op_vardef -> empty .)


state 29

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . var_def params_op
    (18) params -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (91) empty -> .
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    RPAREN          reduce using rule 91 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    params                         shift and go to state 35
    var_def                        shift and go to state 36
    empty                          shift and go to state 37
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 30

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 39

    bloque_clase                   shift and go to state 38

state 31

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 40


state 32

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 33

    (22) main -> MAIN LPAREN RPAREN . bloque_func
    (21) bloque_func -> . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 42

    bloque_func                    shift and go to state 41

state 34

    (25) op_vardef -> LBRACKET CTEI . RBRACKET
    (26) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 43


state 35

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 44


state 36

    (17) params -> var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (91) empty -> .

    COMMA           shift and go to state 46
    RPAREN          reduce using rule 91 (empty -> .)

    params_op                      shift and go to state 45
    empty                          shift and go to state 47

state 37

    (18) params -> empty .

    RPAREN          reduce using rule 18 (params -> empty .)


state 38

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    ID              reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    INT             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FLOAT           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    STRING          reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 39

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (91) empty -> .
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    FUNC            reduce using rule 91 (empty -> .)
    RBRACE          reduce using rule 91 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    op_var                         shift and go to state 48
    var_def                        shift and go to state 49
    empty                          shift and go to state 50
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 40

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 41

    (22) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 22 (main -> MAIN LPAREN RPAREN bloque_func .)


state 42

    (21) bloque_func -> LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    estatutos                      shift and go to state 51
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    expresion                      shift and go to state 55
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    variable                       shift and go to state 64
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 43

    (25) op_vardef -> LBRACKET CTEI RBRACKET .
    (26) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 25 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 81


state 44

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (91) empty -> .

    RET             shift and go to state 83
    LBRACE          reduce using rule 91 (empty -> .)

    return_option                  shift and go to state 82
    empty                          shift and go to state 84

state 45

    (17) params -> var_def params_op .

    RPAREN          reduce using rule 17 (params -> var_def params_op .)


state 46

    (19) params_op -> COMMA . var_def params_op
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    var_def                        shift and go to state 85
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 47

    (20) params_op -> empty .

    RPAREN          reduce using rule 20 (params_op -> empty .)


state 48

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (91) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 91 (empty -> .)

    op_func                        shift and go to state 86
    funcion_def                    shift and go to state 87
    empty                          shift and go to state 88

state 49

    (13) op_var -> var_def . SEMICOLON op_var

    SEMICOLON       shift and go to state 89


state 50

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)


state 51

    (21) bloque_func -> LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 90


state 52

    (32) estatutos -> estatuto .
    (33) estatutos -> estatuto . estatutos
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 32 (estatutos -> estatuto .)
    RBRACE          reduce using rule 32 (estatutos -> estatuto .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

  ! RBRACE          [ reduce using rule 91 (empty -> .) ]

    estatuto                       shift and go to state 52
    estatutos                      shift and go to state 91
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    expresion                      shift and go to state 55
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    variable                       shift and go to state 64
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 53

    (34) estatutos -> empty .

    RBRACE          reduce using rule 34 (estatutos -> empty .)


state 54

    (35) estatuto -> asignacion .

    LPAREN          reduce using rule 35 (estatuto -> asignacion .)
    RETURN          reduce using rule 35 (estatuto -> asignacion .)
    ID              reduce using rule 35 (estatuto -> asignacion .)
    READ            reduce using rule 35 (estatuto -> asignacion .)
    WRITE           reduce using rule 35 (estatuto -> asignacion .)
    IF              reduce using rule 35 (estatuto -> asignacion .)
    PLUS            reduce using rule 35 (estatuto -> asignacion .)
    MINUS           reduce using rule 35 (estatuto -> asignacion .)
    CTEF            reduce using rule 35 (estatuto -> asignacion .)
    CTEI            reduce using rule 35 (estatuto -> asignacion .)
    INT             reduce using rule 35 (estatuto -> asignacion .)
    FLOAT           reduce using rule 35 (estatuto -> asignacion .)
    STRING          reduce using rule 35 (estatuto -> asignacion .)
    WHILE           reduce using rule 35 (estatuto -> asignacion .)
    FROM            reduce using rule 35 (estatuto -> asignacion .)
    RBRACE          reduce using rule 35 (estatuto -> asignacion .)


state 55

    (36) estatuto -> expresion .
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          reduce using rule 36 (estatuto -> expresion .)
    RETURN          reduce using rule 36 (estatuto -> expresion .)
    ID              reduce using rule 36 (estatuto -> expresion .)
    READ            reduce using rule 36 (estatuto -> expresion .)
    WRITE           reduce using rule 36 (estatuto -> expresion .)
    IF              reduce using rule 36 (estatuto -> expresion .)
    CTEF            reduce using rule 36 (estatuto -> expresion .)
    CTEI            reduce using rule 36 (estatuto -> expresion .)
    INT             reduce using rule 36 (estatuto -> expresion .)
    FLOAT           reduce using rule 36 (estatuto -> expresion .)
    STRING          reduce using rule 36 (estatuto -> expresion .)
    WHILE           reduce using rule 36 (estatuto -> expresion .)
    FROM            reduce using rule 36 (estatuto -> expresion .)
    RBRACE          reduce using rule 36 (estatuto -> expresion .)
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

  ! PLUS            [ reduce using rule 36 (estatuto -> expresion .) ]
  ! MINUS           [ reduce using rule 36 (estatuto -> expresion .) ]

    binop                          shift and go to state 92

state 56

    (37) estatuto -> returns .

    LPAREN          reduce using rule 37 (estatuto -> returns .)
    RETURN          reduce using rule 37 (estatuto -> returns .)
    ID              reduce using rule 37 (estatuto -> returns .)
    READ            reduce using rule 37 (estatuto -> returns .)
    WRITE           reduce using rule 37 (estatuto -> returns .)
    IF              reduce using rule 37 (estatuto -> returns .)
    PLUS            reduce using rule 37 (estatuto -> returns .)
    MINUS           reduce using rule 37 (estatuto -> returns .)
    CTEF            reduce using rule 37 (estatuto -> returns .)
    CTEI            reduce using rule 37 (estatuto -> returns .)
    INT             reduce using rule 37 (estatuto -> returns .)
    FLOAT           reduce using rule 37 (estatuto -> returns .)
    STRING          reduce using rule 37 (estatuto -> returns .)
    WHILE           reduce using rule 37 (estatuto -> returns .)
    FROM            reduce using rule 37 (estatuto -> returns .)
    RBRACE          reduce using rule 37 (estatuto -> returns .)


state 57

    (38) estatuto -> llamada_funcion . SEMICOLON

    SEMICOLON       shift and go to state 101


state 58

    (39) estatuto -> llamada_objeto . SEMICOLON
    (73) variable -> llamada_objeto .

    SEMICOLON       shift and go to state 102
    EQUAL           reduce using rule 73 (variable -> llamada_objeto .)
    SAME            reduce using rule 73 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 73 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 73 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 73 (variable -> llamada_objeto .)
    PLUS            reduce using rule 73 (variable -> llamada_objeto .)
    MINUS           reduce using rule 73 (variable -> llamada_objeto .)
    TIMES           reduce using rule 73 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 73 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 73 (variable -> llamada_objeto .)
    RETURN          reduce using rule 73 (variable -> llamada_objeto .)
    ID              reduce using rule 73 (variable -> llamada_objeto .)
    READ            reduce using rule 73 (variable -> llamada_objeto .)
    WRITE           reduce using rule 73 (variable -> llamada_objeto .)
    IF              reduce using rule 73 (variable -> llamada_objeto .)
    CTEF            reduce using rule 73 (variable -> llamada_objeto .)
    CTEI            reduce using rule 73 (variable -> llamada_objeto .)
    INT             reduce using rule 73 (variable -> llamada_objeto .)
    FLOAT           reduce using rule 73 (variable -> llamada_objeto .)
    STRING          reduce using rule 73 (variable -> llamada_objeto .)
    WHILE           reduce using rule 73 (variable -> llamada_objeto .)
    FROM            reduce using rule 73 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 73 (variable -> llamada_objeto .)


state 59

    (40) estatuto -> var_def . SEMICOLON

    SEMICOLON       shift and go to state 103


state 60

    (41) estatuto -> lectura .

    LPAREN          reduce using rule 41 (estatuto -> lectura .)
    RETURN          reduce using rule 41 (estatuto -> lectura .)
    ID              reduce using rule 41 (estatuto -> lectura .)
    READ            reduce using rule 41 (estatuto -> lectura .)
    WRITE           reduce using rule 41 (estatuto -> lectura .)
    IF              reduce using rule 41 (estatuto -> lectura .)
    PLUS            reduce using rule 41 (estatuto -> lectura .)
    MINUS           reduce using rule 41 (estatuto -> lectura .)
    CTEF            reduce using rule 41 (estatuto -> lectura .)
    CTEI            reduce using rule 41 (estatuto -> lectura .)
    INT             reduce using rule 41 (estatuto -> lectura .)
    FLOAT           reduce using rule 41 (estatuto -> lectura .)
    STRING          reduce using rule 41 (estatuto -> lectura .)
    WHILE           reduce using rule 41 (estatuto -> lectura .)
    FROM            reduce using rule 41 (estatuto -> lectura .)
    RBRACE          reduce using rule 41 (estatuto -> lectura .)


state 61

    (42) estatuto -> escritura .

    LPAREN          reduce using rule 42 (estatuto -> escritura .)
    RETURN          reduce using rule 42 (estatuto -> escritura .)
    ID              reduce using rule 42 (estatuto -> escritura .)
    READ            reduce using rule 42 (estatuto -> escritura .)
    WRITE           reduce using rule 42 (estatuto -> escritura .)
    IF              reduce using rule 42 (estatuto -> escritura .)
    PLUS            reduce using rule 42 (estatuto -> escritura .)
    MINUS           reduce using rule 42 (estatuto -> escritura .)
    CTEF            reduce using rule 42 (estatuto -> escritura .)
    CTEI            reduce using rule 42 (estatuto -> escritura .)
    INT             reduce using rule 42 (estatuto -> escritura .)
    FLOAT           reduce using rule 42 (estatuto -> escritura .)
    STRING          reduce using rule 42 (estatuto -> escritura .)
    WHILE           reduce using rule 42 (estatuto -> escritura .)
    FROM            reduce using rule 42 (estatuto -> escritura .)
    RBRACE          reduce using rule 42 (estatuto -> escritura .)


state 62

    (43) estatuto -> decision .

    LPAREN          reduce using rule 43 (estatuto -> decision .)
    RETURN          reduce using rule 43 (estatuto -> decision .)
    ID              reduce using rule 43 (estatuto -> decision .)
    READ            reduce using rule 43 (estatuto -> decision .)
    WRITE           reduce using rule 43 (estatuto -> decision .)
    IF              reduce using rule 43 (estatuto -> decision .)
    PLUS            reduce using rule 43 (estatuto -> decision .)
    MINUS           reduce using rule 43 (estatuto -> decision .)
    CTEF            reduce using rule 43 (estatuto -> decision .)
    CTEI            reduce using rule 43 (estatuto -> decision .)
    INT             reduce using rule 43 (estatuto -> decision .)
    FLOAT           reduce using rule 43 (estatuto -> decision .)
    STRING          reduce using rule 43 (estatuto -> decision .)
    WHILE           reduce using rule 43 (estatuto -> decision .)
    FROM            reduce using rule 43 (estatuto -> decision .)
    RBRACE          reduce using rule 43 (estatuto -> decision .)


state 63

    (44) estatuto -> repeticion .

    LPAREN          reduce using rule 44 (estatuto -> repeticion .)
    RETURN          reduce using rule 44 (estatuto -> repeticion .)
    ID              reduce using rule 44 (estatuto -> repeticion .)
    READ            reduce using rule 44 (estatuto -> repeticion .)
    WRITE           reduce using rule 44 (estatuto -> repeticion .)
    IF              reduce using rule 44 (estatuto -> repeticion .)
    PLUS            reduce using rule 44 (estatuto -> repeticion .)
    MINUS           reduce using rule 44 (estatuto -> repeticion .)
    CTEF            reduce using rule 44 (estatuto -> repeticion .)
    CTEI            reduce using rule 44 (estatuto -> repeticion .)
    INT             reduce using rule 44 (estatuto -> repeticion .)
    FLOAT           reduce using rule 44 (estatuto -> repeticion .)
    STRING          reduce using rule 44 (estatuto -> repeticion .)
    WHILE           reduce using rule 44 (estatuto -> repeticion .)
    FROM            reduce using rule 44 (estatuto -> repeticion .)
    RBRACE          reduce using rule 44 (estatuto -> repeticion .)


state 64

    (45) asignacion -> variable . EQUAL expresion SEMICOLON
    (60) var_cte -> variable .

    EQUAL           shift and go to state 104
    SAME            reduce using rule 60 (var_cte -> variable .)
    NOTEQ           reduce using rule 60 (var_cte -> variable .)
    GTHAN           reduce using rule 60 (var_cte -> variable .)
    LTHAN           reduce using rule 60 (var_cte -> variable .)
    PLUS            reduce using rule 60 (var_cte -> variable .)
    MINUS           reduce using rule 60 (var_cte -> variable .)
    TIMES           reduce using rule 60 (var_cte -> variable .)
    DIVIDE          reduce using rule 60 (var_cte -> variable .)
    LPAREN          reduce using rule 60 (var_cte -> variable .)
    RETURN          reduce using rule 60 (var_cte -> variable .)
    ID              reduce using rule 60 (var_cte -> variable .)
    READ            reduce using rule 60 (var_cte -> variable .)
    WRITE           reduce using rule 60 (var_cte -> variable .)
    IF              reduce using rule 60 (var_cte -> variable .)
    CTEF            reduce using rule 60 (var_cte -> variable .)
    CTEI            reduce using rule 60 (var_cte -> variable .)
    INT             reduce using rule 60 (var_cte -> variable .)
    FLOAT           reduce using rule 60 (var_cte -> variable .)
    STRING          reduce using rule 60 (var_cte -> variable .)
    WHILE           reduce using rule 60 (var_cte -> variable .)
    FROM            reduce using rule 60 (var_cte -> variable .)
    RBRACE          reduce using rule 60 (var_cte -> variable .)


state 65

    (47) expresion -> plus_minus . expresion
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    plus_minus                     shift and go to state 65
    expresion                      shift and go to state 105
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 66

    (48) expresion -> LPAREN . expresion RPAREN
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 109
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 67

    (49) expresion -> var_cte .

    SAME            reduce using rule 49 (expresion -> var_cte .)
    NOTEQ           reduce using rule 49 (expresion -> var_cte .)
    GTHAN           reduce using rule 49 (expresion -> var_cte .)
    LTHAN           reduce using rule 49 (expresion -> var_cte .)
    PLUS            reduce using rule 49 (expresion -> var_cte .)
    MINUS           reduce using rule 49 (expresion -> var_cte .)
    TIMES           reduce using rule 49 (expresion -> var_cte .)
    DIVIDE          reduce using rule 49 (expresion -> var_cte .)
    LPAREN          reduce using rule 49 (expresion -> var_cte .)
    RETURN          reduce using rule 49 (expresion -> var_cte .)
    ID              reduce using rule 49 (expresion -> var_cte .)
    READ            reduce using rule 49 (expresion -> var_cte .)
    WRITE           reduce using rule 49 (expresion -> var_cte .)
    IF              reduce using rule 49 (expresion -> var_cte .)
    CTEF            reduce using rule 49 (expresion -> var_cte .)
    CTEI            reduce using rule 49 (expresion -> var_cte .)
    INT             reduce using rule 49 (expresion -> var_cte .)
    FLOAT           reduce using rule 49 (expresion -> var_cte .)
    STRING          reduce using rule 49 (expresion -> var_cte .)
    WHILE           reduce using rule 49 (expresion -> var_cte .)
    FROM            reduce using rule 49 (expresion -> var_cte .)
    RBRACE          reduce using rule 49 (expresion -> var_cte .)
    RPAREN          reduce using rule 49 (expresion -> var_cte .)
    SEMICOLON       reduce using rule 49 (expresion -> var_cte .)
    COMMA           reduce using rule 49 (expresion -> var_cte .)
    RBRACKET        reduce using rule 49 (expresion -> var_cte .)
    TO              reduce using rule 49 (expresion -> var_cte .)
    DO              reduce using rule 49 (expresion -> var_cte .)


state 68

    (63) returns -> RETURN . expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 110
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 69

    (64) llamada_funcion -> ID . LPAREN param_llamada RPAREN
    (68) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (72) variable -> ID . variable_op
    (31) type_compuesto -> ID .
    (74) variable_op -> . DOT ID
    (75) variable_op -> . LBRACKET expresion RBRACKET
    (76) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (77) variable_op -> . empty
    (91) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 31 (type_compuesto -> ID .)
    LPAREN          shift and go to state 111
    DOT             shift and go to state 112
    ID              reduce using rule 31 (type_compuesto -> ID .)
    LBRACKET        shift and go to state 114
    EQUAL           reduce using rule 91 (empty -> .)
    SAME            reduce using rule 91 (empty -> .)
    NOTEQ           reduce using rule 91 (empty -> .)
    GTHAN           reduce using rule 91 (empty -> .)
    LTHAN           reduce using rule 91 (empty -> .)
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    TIMES           reduce using rule 91 (empty -> .)
    DIVIDE          reduce using rule 91 (empty -> .)
    RETURN          reduce using rule 91 (empty -> .)
    READ            reduce using rule 91 (empty -> .)
    WRITE           reduce using rule 91 (empty -> .)
    IF              reduce using rule 91 (empty -> .)
    CTEF            reduce using rule 91 (empty -> .)
    CTEI            reduce using rule 91 (empty -> .)
    INT             reduce using rule 91 (empty -> .)
    FLOAT           reduce using rule 91 (empty -> .)
    STRING          reduce using rule 91 (empty -> .)
    WHILE           reduce using rule 91 (empty -> .)
    FROM            reduce using rule 91 (empty -> .)
    RBRACE          reduce using rule 91 (empty -> .)

  ! LPAREN          [ reduce using rule 91 (empty -> .) ]
  ! ID              [ reduce using rule 91 (empty -> .) ]

    variable_op                    shift and go to state 113
    empty                          shift and go to state 115

state 70

    (69) lectura -> READ . LPAREN variable op_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 116


state 71

    (78) escritura -> WRITE . LPAREN type_escritura op_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 117


state 72

    (84) decision -> IF . LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 118


state 73

    (87) repeticion -> condicional .

    LPAREN          reduce using rule 87 (repeticion -> condicional .)
    RETURN          reduce using rule 87 (repeticion -> condicional .)
    ID              reduce using rule 87 (repeticion -> condicional .)
    READ            reduce using rule 87 (repeticion -> condicional .)
    WRITE           reduce using rule 87 (repeticion -> condicional .)
    IF              reduce using rule 87 (repeticion -> condicional .)
    PLUS            reduce using rule 87 (repeticion -> condicional .)
    MINUS           reduce using rule 87 (repeticion -> condicional .)
    CTEF            reduce using rule 87 (repeticion -> condicional .)
    CTEI            reduce using rule 87 (repeticion -> condicional .)
    INT             reduce using rule 87 (repeticion -> condicional .)
    FLOAT           reduce using rule 87 (repeticion -> condicional .)
    STRING          reduce using rule 87 (repeticion -> condicional .)
    WHILE           reduce using rule 87 (repeticion -> condicional .)
    FROM            reduce using rule 87 (repeticion -> condicional .)
    RBRACE          reduce using rule 87 (repeticion -> condicional .)


state 74

    (88) repeticion -> no_condicional .

    LPAREN          reduce using rule 88 (repeticion -> no_condicional .)
    RETURN          reduce using rule 88 (repeticion -> no_condicional .)
    ID              reduce using rule 88 (repeticion -> no_condicional .)
    READ            reduce using rule 88 (repeticion -> no_condicional .)
    WRITE           reduce using rule 88 (repeticion -> no_condicional .)
    IF              reduce using rule 88 (repeticion -> no_condicional .)
    PLUS            reduce using rule 88 (repeticion -> no_condicional .)
    MINUS           reduce using rule 88 (repeticion -> no_condicional .)
    CTEF            reduce using rule 88 (repeticion -> no_condicional .)
    CTEI            reduce using rule 88 (repeticion -> no_condicional .)
    INT             reduce using rule 88 (repeticion -> no_condicional .)
    FLOAT           reduce using rule 88 (repeticion -> no_condicional .)
    STRING          reduce using rule 88 (repeticion -> no_condicional .)
    WHILE           reduce using rule 88 (repeticion -> no_condicional .)
    FROM            reduce using rule 88 (repeticion -> no_condicional .)
    RBRACE          reduce using rule 88 (repeticion -> no_condicional .)


state 75

    (58) plus_minus -> PLUS .

    LPAREN          reduce using rule 58 (plus_minus -> PLUS .)
    PLUS            reduce using rule 58 (plus_minus -> PLUS .)
    MINUS           reduce using rule 58 (plus_minus -> PLUS .)
    CTEF            reduce using rule 58 (plus_minus -> PLUS .)
    CTEI            reduce using rule 58 (plus_minus -> PLUS .)
    ID              reduce using rule 58 (plus_minus -> PLUS .)


state 76

    (59) plus_minus -> MINUS .

    LPAREN          reduce using rule 59 (plus_minus -> MINUS .)
    PLUS            reduce using rule 59 (plus_minus -> MINUS .)
    MINUS           reduce using rule 59 (plus_minus -> MINUS .)
    CTEF            reduce using rule 59 (plus_minus -> MINUS .)
    CTEI            reduce using rule 59 (plus_minus -> MINUS .)
    ID              reduce using rule 59 (plus_minus -> MINUS .)


state 77

    (61) var_cte -> CTEF .

    SAME            reduce using rule 61 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 61 (var_cte -> CTEF .)
    GTHAN           reduce using rule 61 (var_cte -> CTEF .)
    LTHAN           reduce using rule 61 (var_cte -> CTEF .)
    PLUS            reduce using rule 61 (var_cte -> CTEF .)
    MINUS           reduce using rule 61 (var_cte -> CTEF .)
    TIMES           reduce using rule 61 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 61 (var_cte -> CTEF .)
    LPAREN          reduce using rule 61 (var_cte -> CTEF .)
    RETURN          reduce using rule 61 (var_cte -> CTEF .)
    ID              reduce using rule 61 (var_cte -> CTEF .)
    READ            reduce using rule 61 (var_cte -> CTEF .)
    WRITE           reduce using rule 61 (var_cte -> CTEF .)
    IF              reduce using rule 61 (var_cte -> CTEF .)
    CTEF            reduce using rule 61 (var_cte -> CTEF .)
    CTEI            reduce using rule 61 (var_cte -> CTEF .)
    INT             reduce using rule 61 (var_cte -> CTEF .)
    FLOAT           reduce using rule 61 (var_cte -> CTEF .)
    STRING          reduce using rule 61 (var_cte -> CTEF .)
    WHILE           reduce using rule 61 (var_cte -> CTEF .)
    FROM            reduce using rule 61 (var_cte -> CTEF .)
    RBRACE          reduce using rule 61 (var_cte -> CTEF .)
    RPAREN          reduce using rule 61 (var_cte -> CTEF .)
    SEMICOLON       reduce using rule 61 (var_cte -> CTEF .)
    COMMA           reduce using rule 61 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 61 (var_cte -> CTEF .)
    TO              reduce using rule 61 (var_cte -> CTEF .)
    DO              reduce using rule 61 (var_cte -> CTEF .)


state 78

    (62) var_cte -> CTEI .

    SAME            reduce using rule 62 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 62 (var_cte -> CTEI .)
    GTHAN           reduce using rule 62 (var_cte -> CTEI .)
    LTHAN           reduce using rule 62 (var_cte -> CTEI .)
    PLUS            reduce using rule 62 (var_cte -> CTEI .)
    MINUS           reduce using rule 62 (var_cte -> CTEI .)
    TIMES           reduce using rule 62 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 62 (var_cte -> CTEI .)
    LPAREN          reduce using rule 62 (var_cte -> CTEI .)
    RETURN          reduce using rule 62 (var_cte -> CTEI .)
    ID              reduce using rule 62 (var_cte -> CTEI .)
    READ            reduce using rule 62 (var_cte -> CTEI .)
    WRITE           reduce using rule 62 (var_cte -> CTEI .)
    IF              reduce using rule 62 (var_cte -> CTEI .)
    CTEF            reduce using rule 62 (var_cte -> CTEI .)
    CTEI            reduce using rule 62 (var_cte -> CTEI .)
    INT             reduce using rule 62 (var_cte -> CTEI .)
    FLOAT           reduce using rule 62 (var_cte -> CTEI .)
    STRING          reduce using rule 62 (var_cte -> CTEI .)
    WHILE           reduce using rule 62 (var_cte -> CTEI .)
    FROM            reduce using rule 62 (var_cte -> CTEI .)
    RBRACE          reduce using rule 62 (var_cte -> CTEI .)
    RPAREN          reduce using rule 62 (var_cte -> CTEI .)
    SEMICOLON       reduce using rule 62 (var_cte -> CTEI .)
    COMMA           reduce using rule 62 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 62 (var_cte -> CTEI .)
    TO              reduce using rule 62 (var_cte -> CTEI .)
    DO              reduce using rule 62 (var_cte -> CTEI .)


state 79

    (89) condicional -> WHILE . LPAREN expresion RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 119


state 80

    (90) no_condicional -> FROM . variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 107

    variable                       shift and go to state 120
    llamada_objeto                 shift and go to state 108

state 81

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 121


state 82

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (21) bloque_func -> . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 42

    bloque_func                    shift and go to state 122

state 83

    (15) return_option -> RET . type_simple
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    type_simple                    shift and go to state 123

state 84

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 85

    (19) params_op -> COMMA var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (91) empty -> .

    COMMA           shift and go to state 46
    RPAREN          reduce using rule 91 (empty -> .)

    params_op                      shift and go to state 124
    empty                          shift and go to state 47

state 86

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 125


state 87

    (10) op_func -> funcion_def . op_func
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (91) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 91 (empty -> .)

    funcion_def                    shift and go to state 87
    op_func                        shift and go to state 126
    empty                          shift and go to state 88

state 88

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 89

    (13) op_var -> var_def SEMICOLON . op_var
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (91) empty -> .
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING

    FUNC            reduce using rule 91 (empty -> .)
    RBRACE          reduce using rule 91 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14

    var_def                        shift and go to state 49
    op_var                         shift and go to state 127
    empty                          shift and go to state 50
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 90

    (21) bloque_func -> LBRACE estatutos RBRACE .

    $end            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FUNC            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    CLASS           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    ID              reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    INT             reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    STRING          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    MAIN            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)


state 91

    (33) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 33 (estatutos -> estatuto estatutos .)


state 92

    (46) expresion -> expresion binop . expresion
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 128
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 93

    (50) binop -> SAME .

    LPAREN          reduce using rule 50 (binop -> SAME .)
    PLUS            reduce using rule 50 (binop -> SAME .)
    MINUS           reduce using rule 50 (binop -> SAME .)
    CTEF            reduce using rule 50 (binop -> SAME .)
    CTEI            reduce using rule 50 (binop -> SAME .)
    ID              reduce using rule 50 (binop -> SAME .)


state 94

    (51) binop -> NOTEQ .

    LPAREN          reduce using rule 51 (binop -> NOTEQ .)
    PLUS            reduce using rule 51 (binop -> NOTEQ .)
    MINUS           reduce using rule 51 (binop -> NOTEQ .)
    CTEF            reduce using rule 51 (binop -> NOTEQ .)
    CTEI            reduce using rule 51 (binop -> NOTEQ .)
    ID              reduce using rule 51 (binop -> NOTEQ .)


state 95

    (52) binop -> GTHAN .

    LPAREN          reduce using rule 52 (binop -> GTHAN .)
    PLUS            reduce using rule 52 (binop -> GTHAN .)
    MINUS           reduce using rule 52 (binop -> GTHAN .)
    CTEF            reduce using rule 52 (binop -> GTHAN .)
    CTEI            reduce using rule 52 (binop -> GTHAN .)
    ID              reduce using rule 52 (binop -> GTHAN .)


state 96

    (53) binop -> LTHAN .

    LPAREN          reduce using rule 53 (binop -> LTHAN .)
    PLUS            reduce using rule 53 (binop -> LTHAN .)
    MINUS           reduce using rule 53 (binop -> LTHAN .)
    CTEF            reduce using rule 53 (binop -> LTHAN .)
    CTEI            reduce using rule 53 (binop -> LTHAN .)
    ID              reduce using rule 53 (binop -> LTHAN .)


state 97

    (54) binop -> PLUS .

    LPAREN          reduce using rule 54 (binop -> PLUS .)
    PLUS            reduce using rule 54 (binop -> PLUS .)
    MINUS           reduce using rule 54 (binop -> PLUS .)
    CTEF            reduce using rule 54 (binop -> PLUS .)
    CTEI            reduce using rule 54 (binop -> PLUS .)
    ID              reduce using rule 54 (binop -> PLUS .)


state 98

    (55) binop -> MINUS .

    LPAREN          reduce using rule 55 (binop -> MINUS .)
    PLUS            reduce using rule 55 (binop -> MINUS .)
    MINUS           reduce using rule 55 (binop -> MINUS .)
    CTEF            reduce using rule 55 (binop -> MINUS .)
    CTEI            reduce using rule 55 (binop -> MINUS .)
    ID              reduce using rule 55 (binop -> MINUS .)


state 99

    (56) binop -> TIMES .

    LPAREN          reduce using rule 56 (binop -> TIMES .)
    PLUS            reduce using rule 56 (binop -> TIMES .)
    MINUS           reduce using rule 56 (binop -> TIMES .)
    CTEF            reduce using rule 56 (binop -> TIMES .)
    CTEI            reduce using rule 56 (binop -> TIMES .)
    ID              reduce using rule 56 (binop -> TIMES .)


state 100

    (57) binop -> DIVIDE .

    LPAREN          reduce using rule 57 (binop -> DIVIDE .)
    PLUS            reduce using rule 57 (binop -> DIVIDE .)
    MINUS           reduce using rule 57 (binop -> DIVIDE .)
    CTEF            reduce using rule 57 (binop -> DIVIDE .)
    CTEI            reduce using rule 57 (binop -> DIVIDE .)
    ID              reduce using rule 57 (binop -> DIVIDE .)


state 101

    (38) estatuto -> llamada_funcion SEMICOLON .

    LPAREN          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    ID              reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    READ            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    WRITE           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    IF              reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    PLUS            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    MINUS           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    CTEF            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    CTEI            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    INT             reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    FLOAT           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    STRING          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    FROM            reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)
    RBRACE          reduce using rule 38 (estatuto -> llamada_funcion SEMICOLON .)


state 102

    (39) estatuto -> llamada_objeto SEMICOLON .

    LPAREN          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    RETURN          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    ID              reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    READ            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    WRITE           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    IF              reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    PLUS            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    MINUS           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    CTEF            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    CTEI            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    INT             reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    FLOAT           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    STRING          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    WHILE           reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    FROM            reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)
    RBRACE          reduce using rule 39 (estatuto -> llamada_objeto SEMICOLON .)


state 103

    (40) estatuto -> var_def SEMICOLON .

    LPAREN          reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    RETURN          reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    ID              reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    READ            reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    WRITE           reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    IF              reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    PLUS            reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    MINUS           reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    CTEF            reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    CTEI            reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    INT             reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    FLOAT           reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    STRING          reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    WHILE           reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    FROM            reduce using rule 40 (estatuto -> var_def SEMICOLON .)
    RBRACE          reduce using rule 40 (estatuto -> var_def SEMICOLON .)


state 104

    (45) asignacion -> variable EQUAL . expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    variable                       shift and go to state 106
    expresion                      shift and go to state 129
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    llamada_objeto                 shift and go to state 108

state 105

    (47) expresion -> plus_minus expresion .
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 47 (expresion -> plus_minus expresion .)
    RETURN          reduce using rule 47 (expresion -> plus_minus expresion .)
    ID              reduce using rule 47 (expresion -> plus_minus expresion .)
    READ            reduce using rule 47 (expresion -> plus_minus expresion .)
    WRITE           reduce using rule 47 (expresion -> plus_minus expresion .)
    IF              reduce using rule 47 (expresion -> plus_minus expresion .)
    CTEF            reduce using rule 47 (expresion -> plus_minus expresion .)
    CTEI            reduce using rule 47 (expresion -> plus_minus expresion .)
    INT             reduce using rule 47 (expresion -> plus_minus expresion .)
    FLOAT           reduce using rule 47 (expresion -> plus_minus expresion .)
    STRING          reduce using rule 47 (expresion -> plus_minus expresion .)
    WHILE           reduce using rule 47 (expresion -> plus_minus expresion .)
    FROM            reduce using rule 47 (expresion -> plus_minus expresion .)
    RBRACE          reduce using rule 47 (expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 47 (expresion -> plus_minus expresion .)
    SEMICOLON       reduce using rule 47 (expresion -> plus_minus expresion .)
    COMMA           reduce using rule 47 (expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 47 (expresion -> plus_minus expresion .)
    TO              reduce using rule 47 (expresion -> plus_minus expresion .)
    DO              reduce using rule 47 (expresion -> plus_minus expresion .)
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

  ! SAME            [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! NOTEQ           [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! GTHAN           [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! LTHAN           [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! PLUS            [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! MINUS           [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! TIMES           [ reduce using rule 47 (expresion -> plus_minus expresion .) ]
  ! DIVIDE          [ reduce using rule 47 (expresion -> plus_minus expresion .) ]

    binop                          shift and go to state 92

state 106

    (60) var_cte -> variable .

    SAME            reduce using rule 60 (var_cte -> variable .)
    NOTEQ           reduce using rule 60 (var_cte -> variable .)
    GTHAN           reduce using rule 60 (var_cte -> variable .)
    LTHAN           reduce using rule 60 (var_cte -> variable .)
    PLUS            reduce using rule 60 (var_cte -> variable .)
    MINUS           reduce using rule 60 (var_cte -> variable .)
    TIMES           reduce using rule 60 (var_cte -> variable .)
    DIVIDE          reduce using rule 60 (var_cte -> variable .)
    LPAREN          reduce using rule 60 (var_cte -> variable .)
    RETURN          reduce using rule 60 (var_cte -> variable .)
    ID              reduce using rule 60 (var_cte -> variable .)
    READ            reduce using rule 60 (var_cte -> variable .)
    WRITE           reduce using rule 60 (var_cte -> variable .)
    IF              reduce using rule 60 (var_cte -> variable .)
    CTEF            reduce using rule 60 (var_cte -> variable .)
    CTEI            reduce using rule 60 (var_cte -> variable .)
    INT             reduce using rule 60 (var_cte -> variable .)
    FLOAT           reduce using rule 60 (var_cte -> variable .)
    STRING          reduce using rule 60 (var_cte -> variable .)
    WHILE           reduce using rule 60 (var_cte -> variable .)
    FROM            reduce using rule 60 (var_cte -> variable .)
    RBRACE          reduce using rule 60 (var_cte -> variable .)
    RPAREN          reduce using rule 60 (var_cte -> variable .)
    SEMICOLON       reduce using rule 60 (var_cte -> variable .)
    COMMA           reduce using rule 60 (var_cte -> variable .)
    RBRACKET        reduce using rule 60 (var_cte -> variable .)
    TO              reduce using rule 60 (var_cte -> variable .)
    DO              reduce using rule 60 (var_cte -> variable .)


state 107

    (72) variable -> ID . variable_op
    (68) llamada_objeto -> ID . DOT ID LPAREN param_llamada RPAREN
    (74) variable_op -> . DOT ID
    (75) variable_op -> . LBRACKET expresion RBRACKET
    (76) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (77) variable_op -> . empty
    (91) empty -> .

    DOT             shift and go to state 112
    LBRACKET        shift and go to state 114
    SAME            reduce using rule 91 (empty -> .)
    NOTEQ           reduce using rule 91 (empty -> .)
    GTHAN           reduce using rule 91 (empty -> .)
    LTHAN           reduce using rule 91 (empty -> .)
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    TIMES           reduce using rule 91 (empty -> .)
    DIVIDE          reduce using rule 91 (empty -> .)
    LPAREN          reduce using rule 91 (empty -> .)
    RETURN          reduce using rule 91 (empty -> .)
    ID              reduce using rule 91 (empty -> .)
    READ            reduce using rule 91 (empty -> .)
    WRITE           reduce using rule 91 (empty -> .)
    IF              reduce using rule 91 (empty -> .)
    CTEF            reduce using rule 91 (empty -> .)
    CTEI            reduce using rule 91 (empty -> .)
    INT             reduce using rule 91 (empty -> .)
    FLOAT           reduce using rule 91 (empty -> .)
    STRING          reduce using rule 91 (empty -> .)
    WHILE           reduce using rule 91 (empty -> .)
    FROM            reduce using rule 91 (empty -> .)
    RBRACE          reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)
    SEMICOLON       reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    RBRACKET        reduce using rule 91 (empty -> .)
    TO              reduce using rule 91 (empty -> .)
    DO              reduce using rule 91 (empty -> .)
    EQUAL           reduce using rule 91 (empty -> .)

    variable_op                    shift and go to state 113
    empty                          shift and go to state 115

state 108

    (73) variable -> llamada_objeto .

    SAME            reduce using rule 73 (variable -> llamada_objeto .)
    NOTEQ           reduce using rule 73 (variable -> llamada_objeto .)
    GTHAN           reduce using rule 73 (variable -> llamada_objeto .)
    LTHAN           reduce using rule 73 (variable -> llamada_objeto .)
    PLUS            reduce using rule 73 (variable -> llamada_objeto .)
    MINUS           reduce using rule 73 (variable -> llamada_objeto .)
    TIMES           reduce using rule 73 (variable -> llamada_objeto .)
    DIVIDE          reduce using rule 73 (variable -> llamada_objeto .)
    LPAREN          reduce using rule 73 (variable -> llamada_objeto .)
    RETURN          reduce using rule 73 (variable -> llamada_objeto .)
    ID              reduce using rule 73 (variable -> llamada_objeto .)
    READ            reduce using rule 73 (variable -> llamada_objeto .)
    WRITE           reduce using rule 73 (variable -> llamada_objeto .)
    IF              reduce using rule 73 (variable -> llamada_objeto .)
    CTEF            reduce using rule 73 (variable -> llamada_objeto .)
    CTEI            reduce using rule 73 (variable -> llamada_objeto .)
    INT             reduce using rule 73 (variable -> llamada_objeto .)
    FLOAT           reduce using rule 73 (variable -> llamada_objeto .)
    STRING          reduce using rule 73 (variable -> llamada_objeto .)
    WHILE           reduce using rule 73 (variable -> llamada_objeto .)
    FROM            reduce using rule 73 (variable -> llamada_objeto .)
    RBRACE          reduce using rule 73 (variable -> llamada_objeto .)
    RPAREN          reduce using rule 73 (variable -> llamada_objeto .)
    SEMICOLON       reduce using rule 73 (variable -> llamada_objeto .)
    COMMA           reduce using rule 73 (variable -> llamada_objeto .)
    RBRACKET        reduce using rule 73 (variable -> llamada_objeto .)
    TO              reduce using rule 73 (variable -> llamada_objeto .)
    DO              reduce using rule 73 (variable -> llamada_objeto .)
    EQUAL           reduce using rule 73 (variable -> llamada_objeto .)


state 109

    (48) expresion -> LPAREN expresion . RPAREN
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RPAREN          shift and go to state 130
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 110

    (63) returns -> RETURN expresion . SEMICOLON
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    SEMICOLON       shift and go to state 131
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 111

    (64) llamada_funcion -> ID LPAREN . param_llamada RPAREN
    (65) param_llamada -> . expresion
    (66) param_llamada -> . expresion COMMA param_llamada
    (67) param_llamada -> . empty
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (91) empty -> .
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    RPAREN          reduce using rule 91 (empty -> .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    param_llamada                  shift and go to state 132
    expresion                      shift and go to state 133
    empty                          shift and go to state 134
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 112

    (68) llamada_objeto -> ID DOT . ID LPAREN param_llamada RPAREN
    (74) variable_op -> DOT . ID

    ID              shift and go to state 135


state 113

    (72) variable -> ID variable_op .

    EQUAL           reduce using rule 72 (variable -> ID variable_op .)
    SAME            reduce using rule 72 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 72 (variable -> ID variable_op .)
    GTHAN           reduce using rule 72 (variable -> ID variable_op .)
    LTHAN           reduce using rule 72 (variable -> ID variable_op .)
    PLUS            reduce using rule 72 (variable -> ID variable_op .)
    MINUS           reduce using rule 72 (variable -> ID variable_op .)
    TIMES           reduce using rule 72 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 72 (variable -> ID variable_op .)
    LPAREN          reduce using rule 72 (variable -> ID variable_op .)
    RETURN          reduce using rule 72 (variable -> ID variable_op .)
    ID              reduce using rule 72 (variable -> ID variable_op .)
    READ            reduce using rule 72 (variable -> ID variable_op .)
    WRITE           reduce using rule 72 (variable -> ID variable_op .)
    IF              reduce using rule 72 (variable -> ID variable_op .)
    CTEF            reduce using rule 72 (variable -> ID variable_op .)
    CTEI            reduce using rule 72 (variable -> ID variable_op .)
    INT             reduce using rule 72 (variable -> ID variable_op .)
    FLOAT           reduce using rule 72 (variable -> ID variable_op .)
    STRING          reduce using rule 72 (variable -> ID variable_op .)
    WHILE           reduce using rule 72 (variable -> ID variable_op .)
    FROM            reduce using rule 72 (variable -> ID variable_op .)
    RBRACE          reduce using rule 72 (variable -> ID variable_op .)
    RPAREN          reduce using rule 72 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 72 (variable -> ID variable_op .)
    COMMA           reduce using rule 72 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 72 (variable -> ID variable_op .)
    TO              reduce using rule 72 (variable -> ID variable_op .)
    DO              reduce using rule 72 (variable -> ID variable_op .)


state 114

    (75) variable_op -> LBRACKET . expresion RBRACKET
    (76) variable_op -> LBRACKET . expresion RBRACKET LBRACKET expresion RBRACKET
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 136
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 115

    (77) variable_op -> empty .

    EQUAL           reduce using rule 77 (variable_op -> empty .)
    SAME            reduce using rule 77 (variable_op -> empty .)
    NOTEQ           reduce using rule 77 (variable_op -> empty .)
    GTHAN           reduce using rule 77 (variable_op -> empty .)
    LTHAN           reduce using rule 77 (variable_op -> empty .)
    PLUS            reduce using rule 77 (variable_op -> empty .)
    MINUS           reduce using rule 77 (variable_op -> empty .)
    TIMES           reduce using rule 77 (variable_op -> empty .)
    DIVIDE          reduce using rule 77 (variable_op -> empty .)
    LPAREN          reduce using rule 77 (variable_op -> empty .)
    RETURN          reduce using rule 77 (variable_op -> empty .)
    ID              reduce using rule 77 (variable_op -> empty .)
    READ            reduce using rule 77 (variable_op -> empty .)
    WRITE           reduce using rule 77 (variable_op -> empty .)
    IF              reduce using rule 77 (variable_op -> empty .)
    CTEF            reduce using rule 77 (variable_op -> empty .)
    CTEI            reduce using rule 77 (variable_op -> empty .)
    INT             reduce using rule 77 (variable_op -> empty .)
    FLOAT           reduce using rule 77 (variable_op -> empty .)
    STRING          reduce using rule 77 (variable_op -> empty .)
    WHILE           reduce using rule 77 (variable_op -> empty .)
    FROM            reduce using rule 77 (variable_op -> empty .)
    RBRACE          reduce using rule 77 (variable_op -> empty .)
    RPAREN          reduce using rule 77 (variable_op -> empty .)
    SEMICOLON       reduce using rule 77 (variable_op -> empty .)
    COMMA           reduce using rule 77 (variable_op -> empty .)
    RBRACKET        reduce using rule 77 (variable_op -> empty .)
    TO              reduce using rule 77 (variable_op -> empty .)
    DO              reduce using rule 77 (variable_op -> empty .)


state 116

    (69) lectura -> READ LPAREN . variable op_lectura RPAREN SEMICOLON
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 107

    variable                       shift and go to state 137
    llamada_objeto                 shift and go to state 108

state 117

    (78) escritura -> WRITE LPAREN . type_escritura op_escritura RPAREN SEMICOLON
    (79) type_escritura -> . CTESTRING
    (80) type_escritura -> . expresion
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 139
    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    type_escritura                 shift and go to state 138
    expresion                      shift and go to state 140
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 118

    (84) decision -> IF LPAREN . expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 141
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 119

    (89) condicional -> WHILE LPAREN . expresion RPAREN DO LBRACE estatutos RBRACE
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 142
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 120

    (90) no_condicional -> FROM variable . EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 143


state 121

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 144


state 122

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    ID              reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    INT             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FLOAT           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    STRING          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 123

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 124

    (19) params_op -> COMMA var_def params_op .

    RPAREN          reduce using rule 19 (params_op -> COMMA var_def params_op .)


state 125

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    ID              reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    INT             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FLOAT           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    STRING          reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 126

    (10) op_func -> funcion_def op_func .

    RBRACE          reduce using rule 10 (op_func -> funcion_def op_func .)


state 127

    (13) op_var -> var_def SEMICOLON op_var .

    FUNC            reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)
    RBRACE          reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)


state 128

    (46) expresion -> expresion binop expresion .
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LPAREN          reduce using rule 46 (expresion -> expresion binop expresion .)
    RETURN          reduce using rule 46 (expresion -> expresion binop expresion .)
    ID              reduce using rule 46 (expresion -> expresion binop expresion .)
    READ            reduce using rule 46 (expresion -> expresion binop expresion .)
    WRITE           reduce using rule 46 (expresion -> expresion binop expresion .)
    IF              reduce using rule 46 (expresion -> expresion binop expresion .)
    CTEF            reduce using rule 46 (expresion -> expresion binop expresion .)
    CTEI            reduce using rule 46 (expresion -> expresion binop expresion .)
    INT             reduce using rule 46 (expresion -> expresion binop expresion .)
    FLOAT           reduce using rule 46 (expresion -> expresion binop expresion .)
    STRING          reduce using rule 46 (expresion -> expresion binop expresion .)
    WHILE           reduce using rule 46 (expresion -> expresion binop expresion .)
    FROM            reduce using rule 46 (expresion -> expresion binop expresion .)
    RBRACE          reduce using rule 46 (expresion -> expresion binop expresion .)
    RPAREN          reduce using rule 46 (expresion -> expresion binop expresion .)
    SEMICOLON       reduce using rule 46 (expresion -> expresion binop expresion .)
    COMMA           reduce using rule 46 (expresion -> expresion binop expresion .)
    RBRACKET        reduce using rule 46 (expresion -> expresion binop expresion .)
    TO              reduce using rule 46 (expresion -> expresion binop expresion .)
    DO              reduce using rule 46 (expresion -> expresion binop expresion .)
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

  ! SAME            [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! NOTEQ           [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! GTHAN           [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! LTHAN           [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! PLUS            [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! MINUS           [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! TIMES           [ reduce using rule 46 (expresion -> expresion binop expresion .) ]
  ! DIVIDE          [ reduce using rule 46 (expresion -> expresion binop expresion .) ]

    binop                          shift and go to state 92

state 129

    (45) asignacion -> variable EQUAL expresion . SEMICOLON
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    SEMICOLON       shift and go to state 145
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 130

    (48) expresion -> LPAREN expresion RPAREN .

    SAME            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    NOTEQ           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    READ            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    WRITE           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    INT             reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    FROM            reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 48 (expresion -> LPAREN expresion RPAREN .)


state 131

    (63) returns -> RETURN expresion SEMICOLON .

    LPAREN          reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    READ            reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    WRITE           reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    PLUS            reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    MINUS           reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    CTEF            reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    CTEI            reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    INT             reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    FLOAT           reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    STRING          reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    FROM            reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 63 (returns -> RETURN expresion SEMICOLON .)


state 132

    (64) llamada_funcion -> ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 146


state 133

    (65) param_llamada -> expresion .
    (66) param_llamada -> expresion . COMMA param_llamada
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RPAREN          reduce using rule 65 (param_llamada -> expresion .)
    COMMA           shift and go to state 147
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 134

    (67) param_llamada -> empty .

    RPAREN          reduce using rule 67 (param_llamada -> empty .)


state 135

    (68) llamada_objeto -> ID DOT ID . LPAREN param_llamada RPAREN
    (74) variable_op -> DOT ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 148
    EQUAL           reduce using rule 74 (variable_op -> DOT ID .)
    SAME            reduce using rule 74 (variable_op -> DOT ID .)
    NOTEQ           reduce using rule 74 (variable_op -> DOT ID .)
    GTHAN           reduce using rule 74 (variable_op -> DOT ID .)
    LTHAN           reduce using rule 74 (variable_op -> DOT ID .)
    PLUS            reduce using rule 74 (variable_op -> DOT ID .)
    MINUS           reduce using rule 74 (variable_op -> DOT ID .)
    TIMES           reduce using rule 74 (variable_op -> DOT ID .)
    DIVIDE          reduce using rule 74 (variable_op -> DOT ID .)
    RETURN          reduce using rule 74 (variable_op -> DOT ID .)
    ID              reduce using rule 74 (variable_op -> DOT ID .)
    READ            reduce using rule 74 (variable_op -> DOT ID .)
    WRITE           reduce using rule 74 (variable_op -> DOT ID .)
    IF              reduce using rule 74 (variable_op -> DOT ID .)
    CTEF            reduce using rule 74 (variable_op -> DOT ID .)
    CTEI            reduce using rule 74 (variable_op -> DOT ID .)
    INT             reduce using rule 74 (variable_op -> DOT ID .)
    FLOAT           reduce using rule 74 (variable_op -> DOT ID .)
    STRING          reduce using rule 74 (variable_op -> DOT ID .)
    WHILE           reduce using rule 74 (variable_op -> DOT ID .)
    FROM            reduce using rule 74 (variable_op -> DOT ID .)
    RBRACE          reduce using rule 74 (variable_op -> DOT ID .)
    RPAREN          reduce using rule 74 (variable_op -> DOT ID .)
    SEMICOLON       reduce using rule 74 (variable_op -> DOT ID .)
    COMMA           reduce using rule 74 (variable_op -> DOT ID .)
    RBRACKET        reduce using rule 74 (variable_op -> DOT ID .)
    TO              reduce using rule 74 (variable_op -> DOT ID .)
    DO              reduce using rule 74 (variable_op -> DOT ID .)

  ! LPAREN          [ reduce using rule 74 (variable_op -> DOT ID .) ]


state 136

    (75) variable_op -> LBRACKET expresion . RBRACKET
    (76) variable_op -> LBRACKET expresion . RBRACKET LBRACKET expresion RBRACKET
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RBRACKET        shift and go to state 149
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 137

    (69) lectura -> READ LPAREN variable . op_lectura RPAREN SEMICOLON
    (70) op_lectura -> . COMMA variable op_lectura
    (71) op_lectura -> . empty
    (91) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 91 (empty -> .)

    op_lectura                     shift and go to state 150
    empty                          shift and go to state 152

state 138

    (78) escritura -> WRITE LPAREN type_escritura . op_escritura RPAREN SEMICOLON
    (81) op_escritura -> . COMMA CTESTRING op_escritura
    (82) op_escritura -> . COMMA expresion op_escritura
    (83) op_escritura -> . empty
    (91) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 91 (empty -> .)

    op_escritura                   shift and go to state 153
    empty                          shift and go to state 155

state 139

    (79) type_escritura -> CTESTRING .

    COMMA           reduce using rule 79 (type_escritura -> CTESTRING .)
    RPAREN          reduce using rule 79 (type_escritura -> CTESTRING .)


state 140

    (80) type_escritura -> expresion .
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    COMMA           reduce using rule 80 (type_escritura -> expresion .)
    RPAREN          reduce using rule 80 (type_escritura -> expresion .)
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 141

    (84) decision -> IF LPAREN expresion . RPAREN THEN LBRACE estatutos RBRACE op_decision
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RPAREN          shift and go to state 156
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 142

    (89) condicional -> WHILE LPAREN expresion . RPAREN DO LBRACE estatutos RBRACE
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RPAREN          shift and go to state 157
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 143

    (90) no_condicional -> FROM variable EQUAL . expresion TO expresion DO LBRACE estatutos RBRACE
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    variable                       shift and go to state 106
    expresion                      shift and go to state 158
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    llamada_objeto                 shift and go to state 108

state 144

    (26) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 145

    (45) asignacion -> variable EQUAL expresion SEMICOLON .

    LPAREN          reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RETURN          reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    ID              reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    READ            reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WRITE           reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    IF              reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    PLUS            reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    MINUS           reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEF            reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    CTEI            reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    INT             reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    STRING          reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    FROM            reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 45 (asignacion -> variable EQUAL expresion SEMICOLON .)


state 146

    (64) llamada_funcion -> ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 64 (llamada_funcion -> ID LPAREN param_llamada RPAREN .)


state 147

    (66) param_llamada -> expresion COMMA . param_llamada
    (65) param_llamada -> . expresion
    (66) param_llamada -> . expresion COMMA param_llamada
    (67) param_llamada -> . empty
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (91) empty -> .
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    RPAREN          reduce using rule 91 (empty -> .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 133
    param_llamada                  shift and go to state 159
    empty                          shift and go to state 134
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 148

    (68) llamada_objeto -> ID DOT ID LPAREN . param_llamada RPAREN
    (65) param_llamada -> . expresion
    (66) param_llamada -> . expresion COMMA param_llamada
    (67) param_llamada -> . empty
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (91) empty -> .
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    RPAREN          reduce using rule 91 (empty -> .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    param_llamada                  shift and go to state 160
    expresion                      shift and go to state 133
    empty                          shift and go to state 134
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 149

    (75) variable_op -> LBRACKET expresion RBRACKET .
    (76) variable_op -> LBRACKET expresion RBRACKET . LBRACKET expresion RBRACKET

    EQUAL           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    ID              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    READ            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    IF              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    INT             reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    FLOAT           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    STRING          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    TO              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    DO              reduce using rule 75 (variable_op -> LBRACKET expresion RBRACKET .)
    LBRACKET        shift and go to state 161


state 150

    (69) lectura -> READ LPAREN variable op_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 151

    (70) op_lectura -> COMMA . variable op_lectura
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    ID              shift and go to state 107

    variable                       shift and go to state 163
    llamada_objeto                 shift and go to state 108

state 152

    (71) op_lectura -> empty .

    RPAREN          reduce using rule 71 (op_lectura -> empty .)


state 153

    (78) escritura -> WRITE LPAREN type_escritura op_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 164


state 154

    (81) op_escritura -> COMMA . CTESTRING op_escritura
    (82) op_escritura -> COMMA . expresion op_escritura
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    CTESTRING       shift and go to state 165
    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 166
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 155

    (83) op_escritura -> empty .

    RPAREN          reduce using rule 83 (op_escritura -> empty .)


state 156

    (84) decision -> IF LPAREN expresion RPAREN . THEN LBRACE estatutos RBRACE op_decision

    THEN            shift and go to state 167


state 157

    (89) condicional -> WHILE LPAREN expresion RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 168


state 158

    (90) no_condicional -> FROM variable EQUAL expresion . TO expresion DO LBRACE estatutos RBRACE
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    TO              shift and go to state 169
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 159

    (66) param_llamada -> expresion COMMA param_llamada .

    RPAREN          reduce using rule 66 (param_llamada -> expresion COMMA param_llamada .)


state 160

    (68) llamada_objeto -> ID DOT ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 170


state 161

    (76) variable_op -> LBRACKET expresion RBRACKET LBRACKET . expresion RBRACKET
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    expresion                      shift and go to state 171
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    variable                       shift and go to state 106
    llamada_objeto                 shift and go to state 108

state 162

    (69) lectura -> READ LPAREN variable op_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 172


state 163

    (70) op_lectura -> COMMA variable . op_lectura
    (70) op_lectura -> . COMMA variable op_lectura
    (71) op_lectura -> . empty
    (91) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 91 (empty -> .)

    op_lectura                     shift and go to state 173
    empty                          shift and go to state 152

state 164

    (78) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 174


state 165

    (81) op_escritura -> COMMA CTESTRING . op_escritura
    (81) op_escritura -> . COMMA CTESTRING op_escritura
    (82) op_escritura -> . COMMA expresion op_escritura
    (83) op_escritura -> . empty
    (91) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 91 (empty -> .)

    op_escritura                   shift and go to state 175
    empty                          shift and go to state 155

state 166

    (82) op_escritura -> COMMA expresion . op_escritura
    (46) expresion -> expresion . binop expresion
    (81) op_escritura -> . COMMA CTESTRING op_escritura
    (82) op_escritura -> . COMMA expresion op_escritura
    (83) op_escritura -> . empty
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE
    (91) empty -> .

    COMMA           shift and go to state 154
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100
    RPAREN          reduce using rule 91 (empty -> .)

    op_escritura                   shift and go to state 176
    binop                          shift and go to state 92
    empty                          shift and go to state 155

state 167

    (84) decision -> IF LPAREN expresion RPAREN THEN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 177


state 168

    (89) condicional -> WHILE LPAREN expresion RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 178


state 169

    (90) no_condicional -> FROM variable EQUAL expresion TO . expresion DO LBRACE estatutos RBRACE
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN

    LPAREN          shift and go to state 66
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    ID              shift and go to state 107

    variable                       shift and go to state 106
    expresion                      shift and go to state 179
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    llamada_objeto                 shift and go to state 108

state 170

    (68) llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    EQUAL           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    SAME            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    NOTEQ           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    GTHAN           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LTHAN           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    PLUS            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    MINUS           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TIMES           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DIVIDE          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    LPAREN          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RETURN          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    ID              reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    READ            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WRITE           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    IF              reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEF            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    CTEI            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    INT             reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FLOAT           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    STRING          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    WHILE           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    FROM            reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACE          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RPAREN          reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    COMMA           reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    RBRACKET        reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    TO              reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)
    DO              reduce using rule 68 (llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN .)


state 171

    (76) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion . RBRACKET
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    RBRACKET        shift and go to state 180
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 172

    (69) lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .

    LPAREN          reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    ID              reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    PLUS            reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    MINUS           reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEF            reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    CTEI            reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    INT             reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FLOAT           reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    STRING          reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    FROM            reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON .)


state 173

    (70) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 70 (op_lectura -> COMMA variable op_lectura .)


state 174

    (78) escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .

    LPAREN          reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    ID              reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    PLUS            reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    MINUS           reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEF            reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    CTEI            reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    INT             reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FLOAT           reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    STRING          reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    FROM            reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON .)


state 175

    (81) op_escritura -> COMMA CTESTRING op_escritura .

    RPAREN          reduce using rule 81 (op_escritura -> COMMA CTESTRING op_escritura .)


state 176

    (82) op_escritura -> COMMA expresion op_escritura .

    RPAREN          reduce using rule 82 (op_escritura -> COMMA expresion op_escritura .)


state 177

    (84) decision -> IF LPAREN expresion RPAREN THEN LBRACE . estatutos RBRACE op_decision
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    expresion                      shift and go to state 55
    estatutos                      shift and go to state 181
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    variable                       shift and go to state 64
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 178

    (89) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    expresion                      shift and go to state 55
    estatutos                      shift and go to state 182
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    variable                       shift and go to state 64
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 179

    (90) no_condicional -> FROM variable EQUAL expresion TO expresion . DO LBRACE estatutos RBRACE
    (46) expresion -> expresion . binop expresion
    (50) binop -> . SAME
    (51) binop -> . NOTEQ
    (52) binop -> . GTHAN
    (53) binop -> . LTHAN
    (54) binop -> . PLUS
    (55) binop -> . MINUS
    (56) binop -> . TIMES
    (57) binop -> . DIVIDE

    DO              shift and go to state 183
    SAME            shift and go to state 93
    NOTEQ           shift and go to state 94
    GTHAN           shift and go to state 95
    LTHAN           shift and go to state 96
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    TIMES           shift and go to state 99
    DIVIDE          shift and go to state 100

    binop                          shift and go to state 92

state 180

    (76) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .

    EQUAL           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    ID              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    READ            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WRITE           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    IF              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEF            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    CTEI            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    INT             reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FLOAT           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    STRING          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    FROM            reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TO              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DO              reduce using rule 76 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)


state 181

    (84) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 184


state 182

    (89) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 185


state 183

    (90) no_condicional -> FROM variable EQUAL expresion TO expresion DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 186


state 184

    (84) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE . op_decision
    (85) op_decision -> . ELSE LBRACE estatutos RBRACE
    (86) op_decision -> . empty
    (91) empty -> .

    ELSE            shift and go to state 188
    LPAREN          reduce using rule 91 (empty -> .)
    RETURN          reduce using rule 91 (empty -> .)
    ID              reduce using rule 91 (empty -> .)
    READ            reduce using rule 91 (empty -> .)
    WRITE           reduce using rule 91 (empty -> .)
    IF              reduce using rule 91 (empty -> .)
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    CTEF            reduce using rule 91 (empty -> .)
    CTEI            reduce using rule 91 (empty -> .)
    INT             reduce using rule 91 (empty -> .)
    FLOAT           reduce using rule 91 (empty -> .)
    STRING          reduce using rule 91 (empty -> .)
    WHILE           reduce using rule 91 (empty -> .)
    FROM            reduce using rule 91 (empty -> .)
    RBRACE          reduce using rule 91 (empty -> .)

    op_decision                    shift and go to state 187
    empty                          shift and go to state 189

state 185

    (89) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    INT             reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    STRING          reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 89 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)


state 186

    (90) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    variable                       shift and go to state 64
    expresion                      shift and go to state 55
    estatutos                      shift and go to state 190
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 187

    (84) decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .

    LPAREN          reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RETURN          reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    ID              reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    READ            reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WRITE           reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    IF              reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    PLUS            reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    MINUS           reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEF            reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    CTEI            reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    INT             reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FLOAT           reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    STRING          reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    WHILE           reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    FROM            reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)
    RBRACE          reduce using rule 84 (decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision .)


state 188

    (85) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 191


state 189

    (86) op_decision -> empty .

    LPAREN          reduce using rule 86 (op_decision -> empty .)
    RETURN          reduce using rule 86 (op_decision -> empty .)
    ID              reduce using rule 86 (op_decision -> empty .)
    READ            reduce using rule 86 (op_decision -> empty .)
    WRITE           reduce using rule 86 (op_decision -> empty .)
    IF              reduce using rule 86 (op_decision -> empty .)
    PLUS            reduce using rule 86 (op_decision -> empty .)
    MINUS           reduce using rule 86 (op_decision -> empty .)
    CTEF            reduce using rule 86 (op_decision -> empty .)
    CTEI            reduce using rule 86 (op_decision -> empty .)
    INT             reduce using rule 86 (op_decision -> empty .)
    FLOAT           reduce using rule 86 (op_decision -> empty .)
    STRING          reduce using rule 86 (op_decision -> empty .)
    WHILE           reduce using rule 86 (op_decision -> empty .)
    FROM            reduce using rule 86 (op_decision -> empty .)
    RBRACE          reduce using rule 86 (op_decision -> empty .)


state 190

    (90) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 192


state 191

    (85) op_decision -> ELSE LBRACE . estatutos RBRACE
    (32) estatutos -> . estatuto
    (33) estatutos -> . estatuto estatutos
    (34) estatutos -> . empty
    (35) estatuto -> . asignacion
    (36) estatuto -> . expresion
    (37) estatuto -> . returns
    (38) estatuto -> . llamada_funcion SEMICOLON
    (39) estatuto -> . llamada_objeto SEMICOLON
    (40) estatuto -> . var_def SEMICOLON
    (41) estatuto -> . lectura
    (42) estatuto -> . escritura
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (91) empty -> .
    (45) asignacion -> . variable EQUAL expresion SEMICOLON
    (46) expresion -> . expresion binop expresion
    (47) expresion -> . plus_minus expresion
    (48) expresion -> . LPAREN expresion RPAREN
    (49) expresion -> . var_cte
    (63) returns -> . RETURN expresion SEMICOLON
    (64) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (68) llamada_objeto -> . ID DOT ID LPAREN param_llamada RPAREN
    (23) var_def -> . type_compuesto ID
    (24) var_def -> . type_simple ID op_vardef
    (69) lectura -> . READ LPAREN variable op_lectura RPAREN SEMICOLON
    (78) escritura -> . WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON
    (84) decision -> . IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision
    (87) repeticion -> . condicional
    (88) repeticion -> . no_condicional
    (72) variable -> . ID variable_op
    (73) variable -> . llamada_objeto
    (58) plus_minus -> . PLUS
    (59) plus_minus -> . MINUS
    (60) var_cte -> . variable
    (61) var_cte -> . CTEF
    (62) var_cte -> . CTEI
    (31) type_compuesto -> . ID
    (28) type_simple -> . INT
    (29) type_simple -> . FLOAT
    (30) type_simple -> . STRING
    (89) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (90) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    RBRACE          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 66
    RETURN          shift and go to state 68
    ID              shift and go to state 69
    READ            shift and go to state 70
    WRITE           shift and go to state 71
    IF              shift and go to state 72
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CTEF            shift and go to state 77
    CTEI            shift and go to state 78
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    estatutos                      shift and go to state 193
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    expresion                      shift and go to state 55
    returns                        shift and go to state 56
    llamada_funcion                shift and go to state 57
    llamada_objeto                 shift and go to state 58
    var_def                        shift and go to state 59
    lectura                        shift and go to state 60
    escritura                      shift and go to state 61
    decision                       shift and go to state 62
    repeticion                     shift and go to state 63
    variable                       shift and go to state 64
    plus_minus                     shift and go to state 65
    var_cte                        shift and go to state 67
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 73
    no_condicional                 shift and go to state 74

state 192

    (90) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    ID              reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    READ            reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    IF              reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    INT             reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    STRING          reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    FROM            reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 90 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)


state 193

    (85) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 194


state 194

    (85) op_decision -> ELSE LBRACE estatutos RBRACE .

    LPAREN          reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RETURN          reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    ID              reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    READ            reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WRITE           reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    IF              reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    PLUS            reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    MINUS           reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEF            reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    CTEI            reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    INT             reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    STRING          reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    WHILE           reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    FROM            reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 85 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 69 resolved as shift
WARNING: shift/reduce conflict for SAME in state 105 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 105 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for SAME in state 128 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 128 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 128 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 128 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 128 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 135 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 52
WARNING: reduce/reduce conflict in state 69 resolved using rule (type_compuesto -> ID)
WARNING: rejected rule (empty -> <empty>) in state 69
