Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    VAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaraciones main
Rule 2     declaraciones -> empty
Rule 3     declaraciones -> var_def SEMICOLON declaraciones
Rule 4     declaraciones -> funcion_def declaraciones
Rule 5     declaraciones -> clase_def declaraciones
Rule 6     clase_def -> CLASS ID clase_op bloque_clase
Rule 7     clase_op -> INHERIT ID
Rule 8     clase_op -> empty
Rule 9     bloque_clase -> LBRACE op_var op_func RBRACE
Rule 10    op_func -> funcion_def op_func
Rule 11    op_func -> empty
Rule 12    funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func
Rule 13    op_var -> var_def SEMICOLON op_var
Rule 14    op_var -> empty
Rule 15    return_option -> RET type_simple
Rule 16    return_option -> empty
Rule 17    params -> var_def params_op
Rule 18    params -> empty
Rule 19    params_op -> COMMA var_def params_op
Rule 20    params_op -> empty
Rule 21    bloque_func -> LBRACE estatutos RBRACE
Rule 22    main -> MAIN LPAREN RPAREN bloque_func
Rule 23    main -> MAIN LPAREN RPAREN error
Rule 24    var_def -> type_compuesto ID
Rule 25    var_def -> type_simple ID op_vardef
Rule 26    op_vardef -> LBRACKET CTEI RBRACKET
Rule 27    op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 28    op_vardef -> empty
Rule 29    type_simple -> INT
Rule 30    type_simple -> FLOAT
Rule 31    type_simple -> STRING
Rule 32    type_simple -> BOOL
Rule 33    type_compuesto -> ID
Rule 34    estatutos -> estatuto
Rule 35    estatutos -> estatuto estatutos
Rule 36    estatutos -> empty
Rule 37    estatuto -> asignacion SEMICOLON
Rule 38    estatuto -> expresion SEMICOLON
Rule 39    estatuto -> returns SEMICOLON
Rule 40    estatuto -> llamada_funcion SEMICOLON
Rule 41    estatuto -> llamada_metodo SEMICOLON
Rule 42    estatuto -> var_def SEMICOLON
Rule 43    estatuto -> lectura SEMICOLON
Rule 44    estatuto -> escritura SEMICOLON
Rule 45    estatuto -> decision SEMICOLON
Rule 46    estatuto -> repeticion SEMICOLON
Rule 47    asignacion -> variable EQUAL expresion
Rule 48    expresion -> expresion binop expresion
Rule 49    expresion -> plus_minus expresion
Rule 50    expresion -> LPAREN expresion RPAREN
Rule 51    expresion -> var_cte
Rule 52    binop -> SAME
Rule 53    binop -> NOTEQ
Rule 54    binop -> GTHAN
Rule 55    binop -> LTHAN
Rule 56    binop -> PLUS
Rule 57    binop -> MINUS
Rule 58    binop -> TIMES
Rule 59    binop -> DIVIDE
Rule 60    plus_minus -> PLUS
Rule 61    plus_minus -> MINUS
Rule 62    var_cte -> variable
Rule 63    var_cte -> boolean
Rule 64    var_cte -> CTEF
Rule 65    var_cte -> CTEI
Rule 66    var_cte -> CTESTRING
Rule 67    boolean -> TRUE
Rule 68    boolean -> FALSE
Rule 69    returns -> RETURN expresion
Rule 70    llamada_funcion -> ID LPAREN param_llamada RPAREN
Rule 71    param_llamada -> expresion
Rule 72    param_llamada -> expresion COMMA param_llamada
Rule 73    param_llamada -> empty
Rule 74    llamada_metodo -> ID DOT ID LPAREN param_llamada RPAREN
Rule 75    lectura -> READ LPAREN variable op_lectura RPAREN
Rule 76    op_lectura -> COMMA variable op_lectura
Rule 77    op_lectura -> empty
Rule 78    variable -> ID variable_op
Rule 79    variable_op -> DOT variable
Rule 80    variable_op -> LBRACKET expresion RBRACKET
Rule 81    variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
Rule 82    variable_op -> empty
Rule 83    escritura -> WRITE LPAREN expresion op_escritura RPAREN
Rule 84    op_escritura -> COMMA expresion op_escritura
Rule 85    op_escritura -> empty
Rule 86    decision -> IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
Rule 87    op_decision -> ELSE LBRACE estatutos RBRACE
Rule 88    op_decision -> empty
Rule 89    repeticion -> condicional
Rule 90    repeticion -> no_condicional
Rule 91    condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
Rule 92    no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
Rule 93    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 32
CLASS                : 6
COLON                : 
COMMA                : 19 72 76 84
CTEF                 : 64
CTEI                 : 26 27 27 65
CTESTRING            : 66
DIVIDE               : 59
DO                   : 91 92
DOT                  : 74 79
ELSE                 : 87
EQUAL                : 47 92
FALSE                : 68
FLOAT                : 30
FROM                 : 92
FUNC                 : 12
GTHAN                : 54
ID                   : 6 7 12 24 25 33 70 74 74 78
IF                   : 86
INHERIT              : 7
INT                  : 29
LBRACE               : 9 21 86 87 91 92
LBRACKET             : 26 27 27 80 81 81
LPAREN               : 12 22 23 50 70 74 75 83 86 91
LTHAN                : 55
MAIN                 : 22 23
MINUS                : 57 61
NOTEQ                : 53
PLUS                 : 56 60
RBRACE               : 9 21 86 87 91 92
RBRACKET             : 26 27 27 80 81 81
READ                 : 75
RET                  : 15
RETURN               : 69
RPAREN               : 12 22 23 50 70 74 75 83 86 91
SAME                 : 52
SEMICOLON            : 3 13 37 38 39 40 41 42 43 44 45 46
STRING               : 31
TIMES                : 58
TO                   : 92
TRUE                 : 67
VAR                  : 
WHILE                : 91
WRITE                : 83
error                : 23

Nonterminals, with rules where they appear

asignacion           : 37
binop                : 48
bloque_clase         : 6
bloque_func          : 12 22
boolean              : 63
clase_def            : 5
clase_op             : 6
condicional          : 89
decision             : 45
declaraciones        : 1 3 4 5
empty                : 2 8 11 14 16 18 20 28 36 73 77 82 85 88
escritura            : 44
estatuto             : 34 35
estatutos            : 21 35 86 87 91 92
expresion            : 38 47 48 48 49 50 69 71 72 80 81 81 83 84 86 91 92 92
funcion_def          : 4 10
lectura              : 43
llamada_funcion      : 40
llamada_metodo       : 41
main                 : 1
no_condicional       : 90
op_decision          : 86
op_escritura         : 83 84
op_func              : 9 10
op_lectura           : 75 76
op_var               : 9 13
op_vardef            : 25
param_llamada        : 70 72 74
params               : 12
params_op            : 17 19
plus_minus           : 49
programa             : 0
repeticion           : 46
return_option        : 12
returns              : 39
type_compuesto       : 24
type_simple          : 15 25
var_cte              : 51
var_def              : 3 13 17 19 42
variable             : 47 62 75 76 79 92
variable_op          : 78

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaraciones main
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (93) empty -> .
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    MAIN            reduce using rule 93 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    programa                       shift and go to state 1
    declaraciones                  shift and go to state 2
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaraciones . main
    (22) main -> . MAIN LPAREN RPAREN bloque_func
    (23) main -> . MAIN LPAREN RPAREN error

    MAIN            shift and go to state 17

    main                           shift and go to state 16

state 3

    (2) declaraciones -> empty .

    MAIN            reduce using rule 2 (declaraciones -> empty .)


state 4

    (3) declaraciones -> var_def . SEMICOLON declaraciones

    SEMICOLON       shift and go to state 18


state 5

    (4) declaraciones -> funcion_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (93) empty -> .
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    MAIN            reduce using rule 93 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    funcion_def                    shift and go to state 5
    declaraciones                  shift and go to state 19
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 6

    (5) declaraciones -> clase_def . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (93) empty -> .
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    MAIN            reduce using rule 93 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    clase_def                      shift and go to state 6
    declaraciones                  shift and go to state 20
    empty                          shift and go to state 3
    var_def                        shift and go to state 4
    funcion_def                    shift and go to state 5
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 7

    (24) var_def -> type_compuesto . ID

    ID              shift and go to state 21


state 8

    (33) type_compuesto -> ID .

    ID              reduce using rule 33 (type_compuesto -> ID .)


state 9

    (25) var_def -> type_simple . ID op_vardef

    ID              shift and go to state 22


state 10

    (12) funcion_def -> FUNC . ID LPAREN params RPAREN return_option bloque_func

    ID              shift and go to state 23


state 11

    (6) clase_def -> CLASS . ID clase_op bloque_clase

    ID              shift and go to state 24


state 12

    (29) type_simple -> INT .

    ID              reduce using rule 29 (type_simple -> INT .)
    LBRACE          reduce using rule 29 (type_simple -> INT .)


state 13

    (30) type_simple -> FLOAT .

    ID              reduce using rule 30 (type_simple -> FLOAT .)
    LBRACE          reduce using rule 30 (type_simple -> FLOAT .)


state 14

    (31) type_simple -> STRING .

    ID              reduce using rule 31 (type_simple -> STRING .)
    LBRACE          reduce using rule 31 (type_simple -> STRING .)


state 15

    (32) type_simple -> BOOL .

    ID              reduce using rule 32 (type_simple -> BOOL .)
    LBRACE          reduce using rule 32 (type_simple -> BOOL .)


state 16

    (1) programa -> declaraciones main .

    $end            reduce using rule 1 (programa -> declaraciones main .)


state 17

    (22) main -> MAIN . LPAREN RPAREN bloque_func
    (23) main -> MAIN . LPAREN RPAREN error

    LPAREN          shift and go to state 25


state 18

    (3) declaraciones -> var_def SEMICOLON . declaraciones
    (2) declaraciones -> . empty
    (3) declaraciones -> . var_def SEMICOLON declaraciones
    (4) declaraciones -> . funcion_def declaraciones
    (5) declaraciones -> . clase_def declaraciones
    (93) empty -> .
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (6) clase_def -> . CLASS ID clase_op bloque_clase
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    MAIN            reduce using rule 93 (empty -> .)
    FUNC            shift and go to state 10
    CLASS           shift and go to state 11
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 4
    declaraciones                  shift and go to state 26
    empty                          shift and go to state 3
    funcion_def                    shift and go to state 5
    clase_def                      shift and go to state 6
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 19

    (4) declaraciones -> funcion_def declaraciones .

    MAIN            reduce using rule 4 (declaraciones -> funcion_def declaraciones .)


state 20

    (5) declaraciones -> clase_def declaraciones .

    MAIN            reduce using rule 5 (declaraciones -> clase_def declaraciones .)


state 21

    (24) var_def -> type_compuesto ID .

    SEMICOLON       reduce using rule 24 (var_def -> type_compuesto ID .)
    COMMA           reduce using rule 24 (var_def -> type_compuesto ID .)
    RPAREN          reduce using rule 24 (var_def -> type_compuesto ID .)


state 22

    (25) var_def -> type_simple ID . op_vardef
    (26) op_vardef -> . LBRACKET CTEI RBRACKET
    (27) op_vardef -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (28) op_vardef -> . empty
    (93) empty -> .

    LBRACKET        shift and go to state 28
    SEMICOLON       reduce using rule 93 (empty -> .)
    COMMA           reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)

    op_vardef                      shift and go to state 27
    empty                          shift and go to state 29

state 23

    (12) funcion_def -> FUNC ID . LPAREN params RPAREN return_option bloque_func

    LPAREN          shift and go to state 30


state 24

    (6) clase_def -> CLASS ID . clase_op bloque_clase
    (7) clase_op -> . INHERIT ID
    (8) clase_op -> . empty
    (93) empty -> .

    INHERIT         shift and go to state 32
    LBRACE          reduce using rule 93 (empty -> .)

    clase_op                       shift and go to state 31
    empty                          shift and go to state 33

state 25

    (22) main -> MAIN LPAREN . RPAREN bloque_func
    (23) main -> MAIN LPAREN . RPAREN error

    RPAREN          shift and go to state 34


state 26

    (3) declaraciones -> var_def SEMICOLON declaraciones .

    MAIN            reduce using rule 3 (declaraciones -> var_def SEMICOLON declaraciones .)


state 27

    (25) var_def -> type_simple ID op_vardef .

    SEMICOLON       reduce using rule 25 (var_def -> type_simple ID op_vardef .)
    COMMA           reduce using rule 25 (var_def -> type_simple ID op_vardef .)
    RPAREN          reduce using rule 25 (var_def -> type_simple ID op_vardef .)


state 28

    (26) op_vardef -> LBRACKET . CTEI RBRACKET
    (27) op_vardef -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 35


state 29

    (28) op_vardef -> empty .

    SEMICOLON       reduce using rule 28 (op_vardef -> empty .)
    COMMA           reduce using rule 28 (op_vardef -> empty .)
    RPAREN          reduce using rule 28 (op_vardef -> empty .)


state 30

    (12) funcion_def -> FUNC ID LPAREN . params RPAREN return_option bloque_func
    (17) params -> . var_def params_op
    (18) params -> . empty
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (93) empty -> .
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    RPAREN          reduce using rule 93 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    params                         shift and go to state 36
    var_def                        shift and go to state 37
    empty                          shift and go to state 38
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 31

    (6) clase_def -> CLASS ID clase_op . bloque_clase
    (9) bloque_clase -> . LBRACE op_var op_func RBRACE

    LBRACE          shift and go to state 40

    bloque_clase                   shift and go to state 39

state 32

    (7) clase_op -> INHERIT . ID

    ID              shift and go to state 41


state 33

    (8) clase_op -> empty .

    LBRACE          reduce using rule 8 (clase_op -> empty .)


state 34

    (22) main -> MAIN LPAREN RPAREN . bloque_func
    (23) main -> MAIN LPAREN RPAREN . error
    (21) bloque_func -> . LBRACE estatutos RBRACE

    error           shift and go to state 43
    LBRACE          shift and go to state 44

    bloque_func                    shift and go to state 42

state 35

    (26) op_vardef -> LBRACKET CTEI . RBRACKET
    (27) op_vardef -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 45


state 36

    (12) funcion_def -> FUNC ID LPAREN params . RPAREN return_option bloque_func

    RPAREN          shift and go to state 46


state 37

    (17) params -> var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (93) empty -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 93 (empty -> .)

    params_op                      shift and go to state 47
    empty                          shift and go to state 49

state 38

    (18) params -> empty .

    RPAREN          reduce using rule 18 (params -> empty .)


state 39

    (6) clase_def -> CLASS ID clase_op bloque_clase .

    FUNC            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    CLASS           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    ID              reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    INT             reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    FLOAT           reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    STRING          reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    BOOL            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)
    MAIN            reduce using rule 6 (clase_def -> CLASS ID clase_op bloque_clase .)


state 40

    (9) bloque_clase -> LBRACE . op_var op_func RBRACE
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (93) empty -> .
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    FUNC            reduce using rule 93 (empty -> .)
    RBRACE          reduce using rule 93 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    op_var                         shift and go to state 50
    var_def                        shift and go to state 51
    empty                          shift and go to state 52
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 41

    (7) clase_op -> INHERIT ID .

    LBRACE          reduce using rule 7 (clase_op -> INHERIT ID .)


state 42

    (22) main -> MAIN LPAREN RPAREN bloque_func .

    $end            reduce using rule 22 (main -> MAIN LPAREN RPAREN bloque_func .)


state 43

    (23) main -> MAIN LPAREN RPAREN error .

    $end            reduce using rule 23 (main -> MAIN LPAREN RPAREN error .)


state 44

    (21) bloque_func -> LBRACE . estatutos RBRACE
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RBRACE          reduce using rule 93 (empty -> .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    estatutos                      shift and go to state 53
    estatuto                       shift and go to state 54
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    expresion                      shift and go to state 57
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    variable                       shift and go to state 66
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 45

    (26) op_vardef -> LBRACKET CTEI RBRACKET .
    (27) op_vardef -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 26 (op_vardef -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 87


state 46

    (12) funcion_def -> FUNC ID LPAREN params RPAREN . return_option bloque_func
    (15) return_option -> . RET type_simple
    (16) return_option -> . empty
    (93) empty -> .

    RET             shift and go to state 89
    LBRACE          reduce using rule 93 (empty -> .)

    return_option                  shift and go to state 88
    empty                          shift and go to state 90

state 47

    (17) params -> var_def params_op .

    RPAREN          reduce using rule 17 (params -> var_def params_op .)


state 48

    (19) params_op -> COMMA . var_def params_op
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 91
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 49

    (20) params_op -> empty .

    RPAREN          reduce using rule 20 (params_op -> empty .)


state 50

    (9) bloque_clase -> LBRACE op_var . op_func RBRACE
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (93) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 93 (empty -> .)

    op_func                        shift and go to state 92
    funcion_def                    shift and go to state 93
    empty                          shift and go to state 94

state 51

    (13) op_var -> var_def . SEMICOLON op_var

    SEMICOLON       shift and go to state 95


state 52

    (14) op_var -> empty .

    FUNC            reduce using rule 14 (op_var -> empty .)
    RBRACE          reduce using rule 14 (op_var -> empty .)


state 53

    (21) bloque_func -> LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 96


state 54

    (34) estatutos -> estatuto .
    (35) estatutos -> estatuto . estatutos
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

  ! reduce/reduce conflict for RBRACE resolved using rule 34 (estatutos -> estatuto .)
    RBRACE          reduce using rule 34 (estatutos -> estatuto .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

  ! RBRACE          [ reduce using rule 93 (empty -> .) ]

    estatuto                       shift and go to state 54
    estatutos                      shift and go to state 97
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    expresion                      shift and go to state 57
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    variable                       shift and go to state 66
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 55

    (36) estatutos -> empty .

    RBRACE          reduce using rule 36 (estatutos -> empty .)


state 56

    (37) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 98


state 57

    (38) estatuto -> expresion . SEMICOLON
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    SEMICOLON       shift and go to state 99
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 58

    (39) estatuto -> returns . SEMICOLON

    SEMICOLON       shift and go to state 109


state 59

    (40) estatuto -> llamada_funcion . SEMICOLON

    SEMICOLON       shift and go to state 110


state 60

    (41) estatuto -> llamada_metodo . SEMICOLON

    SEMICOLON       shift and go to state 111


state 61

    (42) estatuto -> var_def . SEMICOLON

    SEMICOLON       shift and go to state 112


state 62

    (43) estatuto -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 113


state 63

    (44) estatuto -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 114


state 64

    (45) estatuto -> decision . SEMICOLON

    SEMICOLON       shift and go to state 115


state 65

    (46) estatuto -> repeticion . SEMICOLON

    SEMICOLON       shift and go to state 116


state 66

    (47) asignacion -> variable . EQUAL expresion
    (62) var_cte -> variable .

    EQUAL           shift and go to state 117
    SEMICOLON       reduce using rule 62 (var_cte -> variable .)
    SAME            reduce using rule 62 (var_cte -> variable .)
    NOTEQ           reduce using rule 62 (var_cte -> variable .)
    GTHAN           reduce using rule 62 (var_cte -> variable .)
    LTHAN           reduce using rule 62 (var_cte -> variable .)
    PLUS            reduce using rule 62 (var_cte -> variable .)
    MINUS           reduce using rule 62 (var_cte -> variable .)
    TIMES           reduce using rule 62 (var_cte -> variable .)
    DIVIDE          reduce using rule 62 (var_cte -> variable .)


state 67

    (49) expresion -> plus_minus . expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    plus_minus                     shift and go to state 67
    expresion                      shift and go to state 118
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 68

    (50) expresion -> LPAREN . expresion RPAREN
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 121
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 69

    (51) expresion -> var_cte .

    SEMICOLON       reduce using rule 51 (expresion -> var_cte .)
    SAME            reduce using rule 51 (expresion -> var_cte .)
    NOTEQ           reduce using rule 51 (expresion -> var_cte .)
    GTHAN           reduce using rule 51 (expresion -> var_cte .)
    LTHAN           reduce using rule 51 (expresion -> var_cte .)
    PLUS            reduce using rule 51 (expresion -> var_cte .)
    MINUS           reduce using rule 51 (expresion -> var_cte .)
    TIMES           reduce using rule 51 (expresion -> var_cte .)
    DIVIDE          reduce using rule 51 (expresion -> var_cte .)
    RPAREN          reduce using rule 51 (expresion -> var_cte .)
    COMMA           reduce using rule 51 (expresion -> var_cte .)
    RBRACKET        reduce using rule 51 (expresion -> var_cte .)
    TO              reduce using rule 51 (expresion -> var_cte .)
    DO              reduce using rule 51 (expresion -> var_cte .)


state 70

    (69) returns -> RETURN . expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 122
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 71

    (70) llamada_funcion -> ID . LPAREN param_llamada RPAREN
    (74) llamada_metodo -> ID . DOT ID LPAREN param_llamada RPAREN
    (78) variable -> ID . variable_op
    (33) type_compuesto -> ID .
    (79) variable_op -> . DOT variable
    (80) variable_op -> . LBRACKET expresion RBRACKET
    (81) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (82) variable_op -> . empty
    (93) empty -> .

    LPAREN          shift and go to state 123
    DOT             shift and go to state 124
    ID              reduce using rule 33 (type_compuesto -> ID .)
    LBRACKET        shift and go to state 126
    EQUAL           reduce using rule 93 (empty -> .)
    SEMICOLON       reduce using rule 93 (empty -> .)
    SAME            reduce using rule 93 (empty -> .)
    NOTEQ           reduce using rule 93 (empty -> .)
    GTHAN           reduce using rule 93 (empty -> .)
    LTHAN           reduce using rule 93 (empty -> .)
    PLUS            reduce using rule 93 (empty -> .)
    MINUS           reduce using rule 93 (empty -> .)
    TIMES           reduce using rule 93 (empty -> .)
    DIVIDE          reduce using rule 93 (empty -> .)

    variable_op                    shift and go to state 125
    empty                          shift and go to state 127

state 72

    (75) lectura -> READ . LPAREN variable op_lectura RPAREN

    LPAREN          shift and go to state 128


state 73

    (83) escritura -> WRITE . LPAREN expresion op_escritura RPAREN

    LPAREN          shift and go to state 129


state 74

    (86) decision -> IF . LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision

    LPAREN          shift and go to state 130


state 75

    (89) repeticion -> condicional .

    SEMICOLON       reduce using rule 89 (repeticion -> condicional .)


state 76

    (90) repeticion -> no_condicional .

    SEMICOLON       reduce using rule 90 (repeticion -> no_condicional .)


state 77

    (60) plus_minus -> PLUS .

    LPAREN          reduce using rule 60 (plus_minus -> PLUS .)
    PLUS            reduce using rule 60 (plus_minus -> PLUS .)
    MINUS           reduce using rule 60 (plus_minus -> PLUS .)
    CTEF            reduce using rule 60 (plus_minus -> PLUS .)
    CTEI            reduce using rule 60 (plus_minus -> PLUS .)
    CTESTRING       reduce using rule 60 (plus_minus -> PLUS .)
    ID              reduce using rule 60 (plus_minus -> PLUS .)
    TRUE            reduce using rule 60 (plus_minus -> PLUS .)
    FALSE           reduce using rule 60 (plus_minus -> PLUS .)


state 78

    (61) plus_minus -> MINUS .

    LPAREN          reduce using rule 61 (plus_minus -> MINUS .)
    PLUS            reduce using rule 61 (plus_minus -> MINUS .)
    MINUS           reduce using rule 61 (plus_minus -> MINUS .)
    CTEF            reduce using rule 61 (plus_minus -> MINUS .)
    CTEI            reduce using rule 61 (plus_minus -> MINUS .)
    CTESTRING       reduce using rule 61 (plus_minus -> MINUS .)
    ID              reduce using rule 61 (plus_minus -> MINUS .)
    TRUE            reduce using rule 61 (plus_minus -> MINUS .)
    FALSE           reduce using rule 61 (plus_minus -> MINUS .)


state 79

    (63) var_cte -> boolean .

    SEMICOLON       reduce using rule 63 (var_cte -> boolean .)
    SAME            reduce using rule 63 (var_cte -> boolean .)
    NOTEQ           reduce using rule 63 (var_cte -> boolean .)
    GTHAN           reduce using rule 63 (var_cte -> boolean .)
    LTHAN           reduce using rule 63 (var_cte -> boolean .)
    PLUS            reduce using rule 63 (var_cte -> boolean .)
    MINUS           reduce using rule 63 (var_cte -> boolean .)
    TIMES           reduce using rule 63 (var_cte -> boolean .)
    DIVIDE          reduce using rule 63 (var_cte -> boolean .)
    RPAREN          reduce using rule 63 (var_cte -> boolean .)
    COMMA           reduce using rule 63 (var_cte -> boolean .)
    RBRACKET        reduce using rule 63 (var_cte -> boolean .)
    TO              reduce using rule 63 (var_cte -> boolean .)
    DO              reduce using rule 63 (var_cte -> boolean .)


state 80

    (64) var_cte -> CTEF .

    SEMICOLON       reduce using rule 64 (var_cte -> CTEF .)
    SAME            reduce using rule 64 (var_cte -> CTEF .)
    NOTEQ           reduce using rule 64 (var_cte -> CTEF .)
    GTHAN           reduce using rule 64 (var_cte -> CTEF .)
    LTHAN           reduce using rule 64 (var_cte -> CTEF .)
    PLUS            reduce using rule 64 (var_cte -> CTEF .)
    MINUS           reduce using rule 64 (var_cte -> CTEF .)
    TIMES           reduce using rule 64 (var_cte -> CTEF .)
    DIVIDE          reduce using rule 64 (var_cte -> CTEF .)
    RPAREN          reduce using rule 64 (var_cte -> CTEF .)
    COMMA           reduce using rule 64 (var_cte -> CTEF .)
    RBRACKET        reduce using rule 64 (var_cte -> CTEF .)
    TO              reduce using rule 64 (var_cte -> CTEF .)
    DO              reduce using rule 64 (var_cte -> CTEF .)


state 81

    (65) var_cte -> CTEI .

    SEMICOLON       reduce using rule 65 (var_cte -> CTEI .)
    SAME            reduce using rule 65 (var_cte -> CTEI .)
    NOTEQ           reduce using rule 65 (var_cte -> CTEI .)
    GTHAN           reduce using rule 65 (var_cte -> CTEI .)
    LTHAN           reduce using rule 65 (var_cte -> CTEI .)
    PLUS            reduce using rule 65 (var_cte -> CTEI .)
    MINUS           reduce using rule 65 (var_cte -> CTEI .)
    TIMES           reduce using rule 65 (var_cte -> CTEI .)
    DIVIDE          reduce using rule 65 (var_cte -> CTEI .)
    RPAREN          reduce using rule 65 (var_cte -> CTEI .)
    COMMA           reduce using rule 65 (var_cte -> CTEI .)
    RBRACKET        reduce using rule 65 (var_cte -> CTEI .)
    TO              reduce using rule 65 (var_cte -> CTEI .)
    DO              reduce using rule 65 (var_cte -> CTEI .)


state 82

    (66) var_cte -> CTESTRING .

    SEMICOLON       reduce using rule 66 (var_cte -> CTESTRING .)
    SAME            reduce using rule 66 (var_cte -> CTESTRING .)
    NOTEQ           reduce using rule 66 (var_cte -> CTESTRING .)
    GTHAN           reduce using rule 66 (var_cte -> CTESTRING .)
    LTHAN           reduce using rule 66 (var_cte -> CTESTRING .)
    PLUS            reduce using rule 66 (var_cte -> CTESTRING .)
    MINUS           reduce using rule 66 (var_cte -> CTESTRING .)
    TIMES           reduce using rule 66 (var_cte -> CTESTRING .)
    DIVIDE          reduce using rule 66 (var_cte -> CTESTRING .)
    RPAREN          reduce using rule 66 (var_cte -> CTESTRING .)
    COMMA           reduce using rule 66 (var_cte -> CTESTRING .)
    RBRACKET        reduce using rule 66 (var_cte -> CTESTRING .)
    TO              reduce using rule 66 (var_cte -> CTESTRING .)
    DO              reduce using rule 66 (var_cte -> CTESTRING .)


state 83

    (91) condicional -> WHILE . LPAREN expresion RPAREN DO LBRACE estatutos RBRACE

    LPAREN          shift and go to state 131


state 84

    (92) no_condicional -> FROM . variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (78) variable -> . ID variable_op

    ID              shift and go to state 120

    variable                       shift and go to state 132

state 85

    (67) boolean -> TRUE .

    SEMICOLON       reduce using rule 67 (boolean -> TRUE .)
    SAME            reduce using rule 67 (boolean -> TRUE .)
    NOTEQ           reduce using rule 67 (boolean -> TRUE .)
    GTHAN           reduce using rule 67 (boolean -> TRUE .)
    LTHAN           reduce using rule 67 (boolean -> TRUE .)
    PLUS            reduce using rule 67 (boolean -> TRUE .)
    MINUS           reduce using rule 67 (boolean -> TRUE .)
    TIMES           reduce using rule 67 (boolean -> TRUE .)
    DIVIDE          reduce using rule 67 (boolean -> TRUE .)
    RPAREN          reduce using rule 67 (boolean -> TRUE .)
    COMMA           reduce using rule 67 (boolean -> TRUE .)
    RBRACKET        reduce using rule 67 (boolean -> TRUE .)
    TO              reduce using rule 67 (boolean -> TRUE .)
    DO              reduce using rule 67 (boolean -> TRUE .)


state 86

    (68) boolean -> FALSE .

    SEMICOLON       reduce using rule 68 (boolean -> FALSE .)
    SAME            reduce using rule 68 (boolean -> FALSE .)
    NOTEQ           reduce using rule 68 (boolean -> FALSE .)
    GTHAN           reduce using rule 68 (boolean -> FALSE .)
    LTHAN           reduce using rule 68 (boolean -> FALSE .)
    PLUS            reduce using rule 68 (boolean -> FALSE .)
    MINUS           reduce using rule 68 (boolean -> FALSE .)
    TIMES           reduce using rule 68 (boolean -> FALSE .)
    DIVIDE          reduce using rule 68 (boolean -> FALSE .)
    RPAREN          reduce using rule 68 (boolean -> FALSE .)
    COMMA           reduce using rule 68 (boolean -> FALSE .)
    RBRACKET        reduce using rule 68 (boolean -> FALSE .)
    TO              reduce using rule 68 (boolean -> FALSE .)
    DO              reduce using rule 68 (boolean -> FALSE .)


state 87

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 133


state 88

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option . bloque_func
    (21) bloque_func -> . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 44

    bloque_func                    shift and go to state 134

state 89

    (15) return_option -> RET . type_simple
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type_simple                    shift and go to state 135

state 90

    (16) return_option -> empty .

    LBRACE          reduce using rule 16 (return_option -> empty .)


state 91

    (19) params_op -> COMMA var_def . params_op
    (19) params_op -> . COMMA var_def params_op
    (20) params_op -> . empty
    (93) empty -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 93 (empty -> .)

    params_op                      shift and go to state 136
    empty                          shift and go to state 49

state 92

    (9) bloque_clase -> LBRACE op_var op_func . RBRACE

    RBRACE          shift and go to state 137


state 93

    (10) op_func -> funcion_def . op_func
    (10) op_func -> . funcion_def op_func
    (11) op_func -> . empty
    (12) funcion_def -> . FUNC ID LPAREN params RPAREN return_option bloque_func
    (93) empty -> .

    FUNC            shift and go to state 10
    RBRACE          reduce using rule 93 (empty -> .)

    funcion_def                    shift and go to state 93
    op_func                        shift and go to state 138
    empty                          shift and go to state 94

state 94

    (11) op_func -> empty .

    RBRACE          reduce using rule 11 (op_func -> empty .)


state 95

    (13) op_var -> var_def SEMICOLON . op_var
    (13) op_var -> . var_def SEMICOLON op_var
    (14) op_var -> . empty
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (93) empty -> .
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL

    FUNC            reduce using rule 93 (empty -> .)
    RBRACE          reduce using rule 93 (empty -> .)
    ID              shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    var_def                        shift and go to state 51
    op_var                         shift and go to state 139
    empty                          shift and go to state 52
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9

state 96

    (21) bloque_func -> LBRACE estatutos RBRACE .

    $end            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FUNC            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    CLASS           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    ID              reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    INT             reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    FLOAT           reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    STRING          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    BOOL            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    MAIN            reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)
    RBRACE          reduce using rule 21 (bloque_func -> LBRACE estatutos RBRACE .)


state 97

    (35) estatutos -> estatuto estatutos .

    RBRACE          reduce using rule 35 (estatutos -> estatuto estatutos .)


state 98

    (37) estatuto -> asignacion SEMICOLON .

    LPAREN          reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    ID              reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    READ            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    WRITE           reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    IF              reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    PLUS            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    MINUS           reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    CTEF            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    CTEI            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    CTESTRING       reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    INT             reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    FLOAT           reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    STRING          reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    BOOL            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    FROM            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    TRUE            reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    FALSE           reduce using rule 37 (estatuto -> asignacion SEMICOLON .)
    RBRACE          reduce using rule 37 (estatuto -> asignacion SEMICOLON .)


state 99

    (38) estatuto -> expresion SEMICOLON .

    LPAREN          reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    ID              reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    READ            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    WRITE           reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    IF              reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    PLUS            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    MINUS           reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    CTEF            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    CTEI            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    CTESTRING       reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    INT             reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    FLOAT           reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    STRING          reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    BOOL            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    FROM            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    TRUE            reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    FALSE           reduce using rule 38 (estatuto -> expresion SEMICOLON .)
    RBRACE          reduce using rule 38 (estatuto -> expresion SEMICOLON .)


state 100

    (48) expresion -> expresion binop . expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 140
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 101

    (52) binop -> SAME .

    LPAREN          reduce using rule 52 (binop -> SAME .)
    PLUS            reduce using rule 52 (binop -> SAME .)
    MINUS           reduce using rule 52 (binop -> SAME .)
    CTEF            reduce using rule 52 (binop -> SAME .)
    CTEI            reduce using rule 52 (binop -> SAME .)
    CTESTRING       reduce using rule 52 (binop -> SAME .)
    ID              reduce using rule 52 (binop -> SAME .)
    TRUE            reduce using rule 52 (binop -> SAME .)
    FALSE           reduce using rule 52 (binop -> SAME .)


state 102

    (53) binop -> NOTEQ .

    LPAREN          reduce using rule 53 (binop -> NOTEQ .)
    PLUS            reduce using rule 53 (binop -> NOTEQ .)
    MINUS           reduce using rule 53 (binop -> NOTEQ .)
    CTEF            reduce using rule 53 (binop -> NOTEQ .)
    CTEI            reduce using rule 53 (binop -> NOTEQ .)
    CTESTRING       reduce using rule 53 (binop -> NOTEQ .)
    ID              reduce using rule 53 (binop -> NOTEQ .)
    TRUE            reduce using rule 53 (binop -> NOTEQ .)
    FALSE           reduce using rule 53 (binop -> NOTEQ .)


state 103

    (54) binop -> GTHAN .

    LPAREN          reduce using rule 54 (binop -> GTHAN .)
    PLUS            reduce using rule 54 (binop -> GTHAN .)
    MINUS           reduce using rule 54 (binop -> GTHAN .)
    CTEF            reduce using rule 54 (binop -> GTHAN .)
    CTEI            reduce using rule 54 (binop -> GTHAN .)
    CTESTRING       reduce using rule 54 (binop -> GTHAN .)
    ID              reduce using rule 54 (binop -> GTHAN .)
    TRUE            reduce using rule 54 (binop -> GTHAN .)
    FALSE           reduce using rule 54 (binop -> GTHAN .)


state 104

    (55) binop -> LTHAN .

    LPAREN          reduce using rule 55 (binop -> LTHAN .)
    PLUS            reduce using rule 55 (binop -> LTHAN .)
    MINUS           reduce using rule 55 (binop -> LTHAN .)
    CTEF            reduce using rule 55 (binop -> LTHAN .)
    CTEI            reduce using rule 55 (binop -> LTHAN .)
    CTESTRING       reduce using rule 55 (binop -> LTHAN .)
    ID              reduce using rule 55 (binop -> LTHAN .)
    TRUE            reduce using rule 55 (binop -> LTHAN .)
    FALSE           reduce using rule 55 (binop -> LTHAN .)


state 105

    (56) binop -> PLUS .

    LPAREN          reduce using rule 56 (binop -> PLUS .)
    PLUS            reduce using rule 56 (binop -> PLUS .)
    MINUS           reduce using rule 56 (binop -> PLUS .)
    CTEF            reduce using rule 56 (binop -> PLUS .)
    CTEI            reduce using rule 56 (binop -> PLUS .)
    CTESTRING       reduce using rule 56 (binop -> PLUS .)
    ID              reduce using rule 56 (binop -> PLUS .)
    TRUE            reduce using rule 56 (binop -> PLUS .)
    FALSE           reduce using rule 56 (binop -> PLUS .)


state 106

    (57) binop -> MINUS .

    LPAREN          reduce using rule 57 (binop -> MINUS .)
    PLUS            reduce using rule 57 (binop -> MINUS .)
    MINUS           reduce using rule 57 (binop -> MINUS .)
    CTEF            reduce using rule 57 (binop -> MINUS .)
    CTEI            reduce using rule 57 (binop -> MINUS .)
    CTESTRING       reduce using rule 57 (binop -> MINUS .)
    ID              reduce using rule 57 (binop -> MINUS .)
    TRUE            reduce using rule 57 (binop -> MINUS .)
    FALSE           reduce using rule 57 (binop -> MINUS .)


state 107

    (58) binop -> TIMES .

    LPAREN          reduce using rule 58 (binop -> TIMES .)
    PLUS            reduce using rule 58 (binop -> TIMES .)
    MINUS           reduce using rule 58 (binop -> TIMES .)
    CTEF            reduce using rule 58 (binop -> TIMES .)
    CTEI            reduce using rule 58 (binop -> TIMES .)
    CTESTRING       reduce using rule 58 (binop -> TIMES .)
    ID              reduce using rule 58 (binop -> TIMES .)
    TRUE            reduce using rule 58 (binop -> TIMES .)
    FALSE           reduce using rule 58 (binop -> TIMES .)


state 108

    (59) binop -> DIVIDE .

    LPAREN          reduce using rule 59 (binop -> DIVIDE .)
    PLUS            reduce using rule 59 (binop -> DIVIDE .)
    MINUS           reduce using rule 59 (binop -> DIVIDE .)
    CTEF            reduce using rule 59 (binop -> DIVIDE .)
    CTEI            reduce using rule 59 (binop -> DIVIDE .)
    CTESTRING       reduce using rule 59 (binop -> DIVIDE .)
    ID              reduce using rule 59 (binop -> DIVIDE .)
    TRUE            reduce using rule 59 (binop -> DIVIDE .)
    FALSE           reduce using rule 59 (binop -> DIVIDE .)


state 109

    (39) estatuto -> returns SEMICOLON .

    LPAREN          reduce using rule 39 (estatuto -> returns SEMICOLON .)
    RETURN          reduce using rule 39 (estatuto -> returns SEMICOLON .)
    ID              reduce using rule 39 (estatuto -> returns SEMICOLON .)
    READ            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    WRITE           reduce using rule 39 (estatuto -> returns SEMICOLON .)
    IF              reduce using rule 39 (estatuto -> returns SEMICOLON .)
    PLUS            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    MINUS           reduce using rule 39 (estatuto -> returns SEMICOLON .)
    CTEF            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    CTEI            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    CTESTRING       reduce using rule 39 (estatuto -> returns SEMICOLON .)
    INT             reduce using rule 39 (estatuto -> returns SEMICOLON .)
    FLOAT           reduce using rule 39 (estatuto -> returns SEMICOLON .)
    STRING          reduce using rule 39 (estatuto -> returns SEMICOLON .)
    BOOL            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    WHILE           reduce using rule 39 (estatuto -> returns SEMICOLON .)
    FROM            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    TRUE            reduce using rule 39 (estatuto -> returns SEMICOLON .)
    FALSE           reduce using rule 39 (estatuto -> returns SEMICOLON .)
    RBRACE          reduce using rule 39 (estatuto -> returns SEMICOLON .)


state 110

    (40) estatuto -> llamada_funcion SEMICOLON .

    LPAREN          reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    RETURN          reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    ID              reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    READ            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    WRITE           reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    IF              reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    PLUS            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    MINUS           reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    CTEF            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    CTEI            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    CTESTRING       reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    INT             reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    FLOAT           reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    STRING          reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    BOOL            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    WHILE           reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    FROM            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    TRUE            reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    FALSE           reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)
    RBRACE          reduce using rule 40 (estatuto -> llamada_funcion SEMICOLON .)


state 111

    (41) estatuto -> llamada_metodo SEMICOLON .

    LPAREN          reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    RETURN          reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    ID              reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    READ            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    WRITE           reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    IF              reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    PLUS            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    MINUS           reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    CTEF            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    CTEI            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    CTESTRING       reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    INT             reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    FLOAT           reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    STRING          reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    BOOL            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    WHILE           reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    FROM            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    TRUE            reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    FALSE           reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)
    RBRACE          reduce using rule 41 (estatuto -> llamada_metodo SEMICOLON .)


state 112

    (42) estatuto -> var_def SEMICOLON .

    LPAREN          reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    RETURN          reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    ID              reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    READ            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    WRITE           reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    IF              reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    PLUS            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    MINUS           reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    CTEF            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    CTEI            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    CTESTRING       reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    INT             reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    FLOAT           reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    STRING          reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    BOOL            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    WHILE           reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    FROM            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    TRUE            reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    FALSE           reduce using rule 42 (estatuto -> var_def SEMICOLON .)
    RBRACE          reduce using rule 42 (estatuto -> var_def SEMICOLON .)


state 113

    (43) estatuto -> lectura SEMICOLON .

    LPAREN          reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    RETURN          reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    ID              reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    READ            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    WRITE           reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    IF              reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    PLUS            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    MINUS           reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    CTEF            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    CTEI            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    CTESTRING       reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    INT             reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    FLOAT           reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    STRING          reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    BOOL            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    WHILE           reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    FROM            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    TRUE            reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    FALSE           reduce using rule 43 (estatuto -> lectura SEMICOLON .)
    RBRACE          reduce using rule 43 (estatuto -> lectura SEMICOLON .)


state 114

    (44) estatuto -> escritura SEMICOLON .

    LPAREN          reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    RETURN          reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    ID              reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    READ            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    WRITE           reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    IF              reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    PLUS            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    MINUS           reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    CTEF            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    CTEI            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    CTESTRING       reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    INT             reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    FLOAT           reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    STRING          reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    BOOL            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    WHILE           reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    FROM            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    TRUE            reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    FALSE           reduce using rule 44 (estatuto -> escritura SEMICOLON .)
    RBRACE          reduce using rule 44 (estatuto -> escritura SEMICOLON .)


state 115

    (45) estatuto -> decision SEMICOLON .

    LPAREN          reduce using rule 45 (estatuto -> decision SEMICOLON .)
    RETURN          reduce using rule 45 (estatuto -> decision SEMICOLON .)
    ID              reduce using rule 45 (estatuto -> decision SEMICOLON .)
    READ            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    WRITE           reduce using rule 45 (estatuto -> decision SEMICOLON .)
    IF              reduce using rule 45 (estatuto -> decision SEMICOLON .)
    PLUS            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    MINUS           reduce using rule 45 (estatuto -> decision SEMICOLON .)
    CTEF            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    CTEI            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    CTESTRING       reduce using rule 45 (estatuto -> decision SEMICOLON .)
    INT             reduce using rule 45 (estatuto -> decision SEMICOLON .)
    FLOAT           reduce using rule 45 (estatuto -> decision SEMICOLON .)
    STRING          reduce using rule 45 (estatuto -> decision SEMICOLON .)
    BOOL            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    WHILE           reduce using rule 45 (estatuto -> decision SEMICOLON .)
    FROM            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    TRUE            reduce using rule 45 (estatuto -> decision SEMICOLON .)
    FALSE           reduce using rule 45 (estatuto -> decision SEMICOLON .)
    RBRACE          reduce using rule 45 (estatuto -> decision SEMICOLON .)


state 116

    (46) estatuto -> repeticion SEMICOLON .

    LPAREN          reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    RETURN          reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    ID              reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    READ            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    WRITE           reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    IF              reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    PLUS            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    MINUS           reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    CTEF            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    CTEI            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    CTESTRING       reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    INT             reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    FLOAT           reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    STRING          reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    BOOL            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    WHILE           reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    FROM            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    TRUE            reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    FALSE           reduce using rule 46 (estatuto -> repeticion SEMICOLON .)
    RBRACE          reduce using rule 46 (estatuto -> repeticion SEMICOLON .)


state 117

    (47) asignacion -> variable EQUAL . expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    variable                       shift and go to state 119
    expresion                      shift and go to state 141
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    boolean                        shift and go to state 79

state 118

    (49) expresion -> plus_minus expresion .
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 49 (expresion -> plus_minus expresion .)
    RPAREN          reduce using rule 49 (expresion -> plus_minus expresion .)
    COMMA           reduce using rule 49 (expresion -> plus_minus expresion .)
    RBRACKET        reduce using rule 49 (expresion -> plus_minus expresion .)
    TO              reduce using rule 49 (expresion -> plus_minus expresion .)
    DO              reduce using rule 49 (expresion -> plus_minus expresion .)
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

  ! SAME            [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! NOTEQ           [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! GTHAN           [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! LTHAN           [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! PLUS            [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! MINUS           [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! TIMES           [ reduce using rule 49 (expresion -> plus_minus expresion .) ]
  ! DIVIDE          [ reduce using rule 49 (expresion -> plus_minus expresion .) ]

    binop                          shift and go to state 100

state 119

    (62) var_cte -> variable .

    SAME            reduce using rule 62 (var_cte -> variable .)
    NOTEQ           reduce using rule 62 (var_cte -> variable .)
    GTHAN           reduce using rule 62 (var_cte -> variable .)
    LTHAN           reduce using rule 62 (var_cte -> variable .)
    PLUS            reduce using rule 62 (var_cte -> variable .)
    MINUS           reduce using rule 62 (var_cte -> variable .)
    TIMES           reduce using rule 62 (var_cte -> variable .)
    DIVIDE          reduce using rule 62 (var_cte -> variable .)
    SEMICOLON       reduce using rule 62 (var_cte -> variable .)
    RPAREN          reduce using rule 62 (var_cte -> variable .)
    COMMA           reduce using rule 62 (var_cte -> variable .)
    RBRACKET        reduce using rule 62 (var_cte -> variable .)
    TO              reduce using rule 62 (var_cte -> variable .)
    DO              reduce using rule 62 (var_cte -> variable .)


state 120

    (78) variable -> ID . variable_op
    (79) variable_op -> . DOT variable
    (80) variable_op -> . LBRACKET expresion RBRACKET
    (81) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (82) variable_op -> . empty
    (93) empty -> .

    DOT             shift and go to state 142
    LBRACKET        shift and go to state 126
    SAME            reduce using rule 93 (empty -> .)
    NOTEQ           reduce using rule 93 (empty -> .)
    GTHAN           reduce using rule 93 (empty -> .)
    LTHAN           reduce using rule 93 (empty -> .)
    PLUS            reduce using rule 93 (empty -> .)
    MINUS           reduce using rule 93 (empty -> .)
    TIMES           reduce using rule 93 (empty -> .)
    DIVIDE          reduce using rule 93 (empty -> .)
    SEMICOLON       reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMMA           reduce using rule 93 (empty -> .)
    RBRACKET        reduce using rule 93 (empty -> .)
    TO              reduce using rule 93 (empty -> .)
    DO              reduce using rule 93 (empty -> .)
    EQUAL           reduce using rule 93 (empty -> .)

    variable_op                    shift and go to state 125
    empty                          shift and go to state 127

state 121

    (50) expresion -> LPAREN expresion . RPAREN
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RPAREN          shift and go to state 143
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 122

    (69) returns -> RETURN expresion .
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    SEMICOLON       reduce using rule 69 (returns -> RETURN expresion .)
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 123

    (70) llamada_funcion -> ID LPAREN . param_llamada RPAREN
    (71) param_llamada -> . expresion
    (72) param_llamada -> . expresion COMMA param_llamada
    (73) param_llamada -> . empty
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (93) empty -> .
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    RPAREN          reduce using rule 93 (empty -> .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    param_llamada                  shift and go to state 144
    expresion                      shift and go to state 145
    empty                          shift and go to state 146
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 124

    (74) llamada_metodo -> ID DOT . ID LPAREN param_llamada RPAREN
    (79) variable_op -> DOT . variable
    (78) variable -> . ID variable_op

    ID              shift and go to state 147

    variable                       shift and go to state 148

state 125

    (78) variable -> ID variable_op .

    EQUAL           reduce using rule 78 (variable -> ID variable_op .)
    SEMICOLON       reduce using rule 78 (variable -> ID variable_op .)
    SAME            reduce using rule 78 (variable -> ID variable_op .)
    NOTEQ           reduce using rule 78 (variable -> ID variable_op .)
    GTHAN           reduce using rule 78 (variable -> ID variable_op .)
    LTHAN           reduce using rule 78 (variable -> ID variable_op .)
    PLUS            reduce using rule 78 (variable -> ID variable_op .)
    MINUS           reduce using rule 78 (variable -> ID variable_op .)
    TIMES           reduce using rule 78 (variable -> ID variable_op .)
    DIVIDE          reduce using rule 78 (variable -> ID variable_op .)
    RPAREN          reduce using rule 78 (variable -> ID variable_op .)
    COMMA           reduce using rule 78 (variable -> ID variable_op .)
    RBRACKET        reduce using rule 78 (variable -> ID variable_op .)
    TO              reduce using rule 78 (variable -> ID variable_op .)
    DO              reduce using rule 78 (variable -> ID variable_op .)


state 126

    (80) variable_op -> LBRACKET . expresion RBRACKET
    (81) variable_op -> LBRACKET . expresion RBRACKET LBRACKET expresion RBRACKET
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 149
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 127

    (82) variable_op -> empty .

    EQUAL           reduce using rule 82 (variable_op -> empty .)
    SEMICOLON       reduce using rule 82 (variable_op -> empty .)
    SAME            reduce using rule 82 (variable_op -> empty .)
    NOTEQ           reduce using rule 82 (variable_op -> empty .)
    GTHAN           reduce using rule 82 (variable_op -> empty .)
    LTHAN           reduce using rule 82 (variable_op -> empty .)
    PLUS            reduce using rule 82 (variable_op -> empty .)
    MINUS           reduce using rule 82 (variable_op -> empty .)
    TIMES           reduce using rule 82 (variable_op -> empty .)
    DIVIDE          reduce using rule 82 (variable_op -> empty .)
    RPAREN          reduce using rule 82 (variable_op -> empty .)
    COMMA           reduce using rule 82 (variable_op -> empty .)
    RBRACKET        reduce using rule 82 (variable_op -> empty .)
    TO              reduce using rule 82 (variable_op -> empty .)
    DO              reduce using rule 82 (variable_op -> empty .)


state 128

    (75) lectura -> READ LPAREN . variable op_lectura RPAREN
    (78) variable -> . ID variable_op

    ID              shift and go to state 120

    variable                       shift and go to state 150

state 129

    (83) escritura -> WRITE LPAREN . expresion op_escritura RPAREN
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 151
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 130

    (86) decision -> IF LPAREN . expresion RPAREN LBRACE estatutos RBRACE op_decision
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 152
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 131

    (91) condicional -> WHILE LPAREN . expresion RPAREN DO LBRACE estatutos RBRACE
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 153
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 132

    (92) no_condicional -> FROM variable . EQUAL expresion TO expresion DO LBRACE estatutos RBRACE

    EQUAL           shift and go to state 154


state 133

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 155


state 134

    (12) funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .

    FUNC            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    CLASS           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    ID              reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    INT             reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    FLOAT           reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    STRING          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    BOOL            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    MAIN            reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)
    RBRACE          reduce using rule 12 (funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func .)


state 135

    (15) return_option -> RET type_simple .

    LBRACE          reduce using rule 15 (return_option -> RET type_simple .)


state 136

    (19) params_op -> COMMA var_def params_op .

    RPAREN          reduce using rule 19 (params_op -> COMMA var_def params_op .)


state 137

    (9) bloque_clase -> LBRACE op_var op_func RBRACE .

    FUNC            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    CLASS           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    ID              reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    INT             reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    FLOAT           reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    STRING          reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    BOOL            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)
    MAIN            reduce using rule 9 (bloque_clase -> LBRACE op_var op_func RBRACE .)


state 138

    (10) op_func -> funcion_def op_func .

    RBRACE          reduce using rule 10 (op_func -> funcion_def op_func .)


state 139

    (13) op_var -> var_def SEMICOLON op_var .

    FUNC            reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)
    RBRACE          reduce using rule 13 (op_var -> var_def SEMICOLON op_var .)


state 140

    (48) expresion -> expresion binop expresion .
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 48 (expresion -> expresion binop expresion .)
    RPAREN          reduce using rule 48 (expresion -> expresion binop expresion .)
    COMMA           reduce using rule 48 (expresion -> expresion binop expresion .)
    RBRACKET        reduce using rule 48 (expresion -> expresion binop expresion .)
    TO              reduce using rule 48 (expresion -> expresion binop expresion .)
    DO              reduce using rule 48 (expresion -> expresion binop expresion .)
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

  ! SAME            [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! NOTEQ           [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! GTHAN           [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! LTHAN           [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! PLUS            [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! MINUS           [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! TIMES           [ reduce using rule 48 (expresion -> expresion binop expresion .) ]
  ! DIVIDE          [ reduce using rule 48 (expresion -> expresion binop expresion .) ]

    binop                          shift and go to state 100

state 141

    (47) asignacion -> variable EQUAL expresion .
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    SEMICOLON       reduce using rule 47 (asignacion -> variable EQUAL expresion .)
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 142

    (79) variable_op -> DOT . variable
    (78) variable -> . ID variable_op

    ID              shift and go to state 120

    variable                       shift and go to state 148

state 143

    (50) expresion -> LPAREN expresion RPAREN .

    SEMICOLON       reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    SAME            reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    NOTEQ           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 50 (expresion -> LPAREN expresion RPAREN .)


state 144

    (70) llamada_funcion -> ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 156


state 145

    (71) param_llamada -> expresion .
    (72) param_llamada -> expresion . COMMA param_llamada
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RPAREN          reduce using rule 71 (param_llamada -> expresion .)
    COMMA           shift and go to state 157
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 146

    (73) param_llamada -> empty .

    RPAREN          reduce using rule 73 (param_llamada -> empty .)


state 147

    (74) llamada_metodo -> ID DOT ID . LPAREN param_llamada RPAREN
    (78) variable -> ID . variable_op
    (79) variable_op -> . DOT variable
    (80) variable_op -> . LBRACKET expresion RBRACKET
    (81) variable_op -> . LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET
    (82) variable_op -> . empty
    (93) empty -> .

    LPAREN          shift and go to state 158
    DOT             shift and go to state 142
    LBRACKET        shift and go to state 126
    EQUAL           reduce using rule 93 (empty -> .)
    SEMICOLON       reduce using rule 93 (empty -> .)
    SAME            reduce using rule 93 (empty -> .)
    NOTEQ           reduce using rule 93 (empty -> .)
    GTHAN           reduce using rule 93 (empty -> .)
    LTHAN           reduce using rule 93 (empty -> .)
    PLUS            reduce using rule 93 (empty -> .)
    MINUS           reduce using rule 93 (empty -> .)
    TIMES           reduce using rule 93 (empty -> .)
    DIVIDE          reduce using rule 93 (empty -> .)

    variable_op                    shift and go to state 125
    empty                          shift and go to state 127

state 148

    (79) variable_op -> DOT variable .

    EQUAL           reduce using rule 79 (variable_op -> DOT variable .)
    SEMICOLON       reduce using rule 79 (variable_op -> DOT variable .)
    SAME            reduce using rule 79 (variable_op -> DOT variable .)
    NOTEQ           reduce using rule 79 (variable_op -> DOT variable .)
    GTHAN           reduce using rule 79 (variable_op -> DOT variable .)
    LTHAN           reduce using rule 79 (variable_op -> DOT variable .)
    PLUS            reduce using rule 79 (variable_op -> DOT variable .)
    MINUS           reduce using rule 79 (variable_op -> DOT variable .)
    TIMES           reduce using rule 79 (variable_op -> DOT variable .)
    DIVIDE          reduce using rule 79 (variable_op -> DOT variable .)
    RPAREN          reduce using rule 79 (variable_op -> DOT variable .)
    COMMA           reduce using rule 79 (variable_op -> DOT variable .)
    RBRACKET        reduce using rule 79 (variable_op -> DOT variable .)
    TO              reduce using rule 79 (variable_op -> DOT variable .)
    DO              reduce using rule 79 (variable_op -> DOT variable .)


state 149

    (80) variable_op -> LBRACKET expresion . RBRACKET
    (81) variable_op -> LBRACKET expresion . RBRACKET LBRACKET expresion RBRACKET
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RBRACKET        shift and go to state 159
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 150

    (75) lectura -> READ LPAREN variable . op_lectura RPAREN
    (76) op_lectura -> . COMMA variable op_lectura
    (77) op_lectura -> . empty
    (93) empty -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 93 (empty -> .)

    op_lectura                     shift and go to state 160
    empty                          shift and go to state 162

state 151

    (83) escritura -> WRITE LPAREN expresion . op_escritura RPAREN
    (48) expresion -> expresion . binop expresion
    (84) op_escritura -> . COMMA expresion op_escritura
    (85) op_escritura -> . empty
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE
    (93) empty -> .

    COMMA           shift and go to state 164
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    RPAREN          reduce using rule 93 (empty -> .)

    op_escritura                   shift and go to state 163
    binop                          shift and go to state 100
    empty                          shift and go to state 165

state 152

    (86) decision -> IF LPAREN expresion . RPAREN LBRACE estatutos RBRACE op_decision
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RPAREN          shift and go to state 166
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 153

    (91) condicional -> WHILE LPAREN expresion . RPAREN DO LBRACE estatutos RBRACE
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RPAREN          shift and go to state 167
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 154

    (92) no_condicional -> FROM variable EQUAL . expresion TO expresion DO LBRACE estatutos RBRACE
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    variable                       shift and go to state 119
    expresion                      shift and go to state 168
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    boolean                        shift and go to state 79

state 155

    (27) op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 27 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 27 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 27 (op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 156

    (70) llamada_funcion -> ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 70 (llamada_funcion -> ID LPAREN param_llamada RPAREN .)


state 157

    (72) param_llamada -> expresion COMMA . param_llamada
    (71) param_llamada -> . expresion
    (72) param_llamada -> . expresion COMMA param_llamada
    (73) param_llamada -> . empty
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (93) empty -> .
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    RPAREN          reduce using rule 93 (empty -> .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 145
    param_llamada                  shift and go to state 169
    empty                          shift and go to state 146
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 158

    (74) llamada_metodo -> ID DOT ID LPAREN . param_llamada RPAREN
    (71) param_llamada -> . expresion
    (72) param_llamada -> . expresion COMMA param_llamada
    (73) param_llamada -> . empty
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (93) empty -> .
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    RPAREN          reduce using rule 93 (empty -> .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    param_llamada                  shift and go to state 170
    expresion                      shift and go to state 145
    empty                          shift and go to state 146
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 159

    (80) variable_op -> LBRACKET expresion RBRACKET .
    (81) variable_op -> LBRACKET expresion RBRACKET . LBRACKET expresion RBRACKET

    EQUAL           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    TO              reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    DO              reduce using rule 80 (variable_op -> LBRACKET expresion RBRACKET .)
    LBRACKET        shift and go to state 171


state 160

    (75) lectura -> READ LPAREN variable op_lectura . RPAREN

    RPAREN          shift and go to state 172


state 161

    (76) op_lectura -> COMMA . variable op_lectura
    (78) variable -> . ID variable_op

    ID              shift and go to state 120

    variable                       shift and go to state 173

state 162

    (77) op_lectura -> empty .

    RPAREN          reduce using rule 77 (op_lectura -> empty .)


state 163

    (83) escritura -> WRITE LPAREN expresion op_escritura . RPAREN

    RPAREN          shift and go to state 174


state 164

    (84) op_escritura -> COMMA . expresion op_escritura
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 175
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 165

    (85) op_escritura -> empty .

    RPAREN          reduce using rule 85 (op_escritura -> empty .)


state 166

    (86) decision -> IF LPAREN expresion RPAREN . LBRACE estatutos RBRACE op_decision

    LBRACE          shift and go to state 176


state 167

    (91) condicional -> WHILE LPAREN expresion RPAREN . DO LBRACE estatutos RBRACE

    DO              shift and go to state 177


state 168

    (92) no_condicional -> FROM variable EQUAL expresion . TO expresion DO LBRACE estatutos RBRACE
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    TO              shift and go to state 178
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 169

    (72) param_llamada -> expresion COMMA param_llamada .

    RPAREN          reduce using rule 72 (param_llamada -> expresion COMMA param_llamada .)


state 170

    (74) llamada_metodo -> ID DOT ID LPAREN param_llamada . RPAREN

    RPAREN          shift and go to state 179


state 171

    (81) variable_op -> LBRACKET expresion RBRACKET LBRACKET . expresion RBRACKET
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 180
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    variable                       shift and go to state 119
    boolean                        shift and go to state 79

state 172

    (75) lectura -> READ LPAREN variable op_lectura RPAREN .

    SEMICOLON       reduce using rule 75 (lectura -> READ LPAREN variable op_lectura RPAREN .)


state 173

    (76) op_lectura -> COMMA variable . op_lectura
    (76) op_lectura -> . COMMA variable op_lectura
    (77) op_lectura -> . empty
    (93) empty -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 93 (empty -> .)

    op_lectura                     shift and go to state 181
    empty                          shift and go to state 162

state 174

    (83) escritura -> WRITE LPAREN expresion op_escritura RPAREN .

    SEMICOLON       reduce using rule 83 (escritura -> WRITE LPAREN expresion op_escritura RPAREN .)


state 175

    (84) op_escritura -> COMMA expresion . op_escritura
    (48) expresion -> expresion . binop expresion
    (84) op_escritura -> . COMMA expresion op_escritura
    (85) op_escritura -> . empty
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE
    (93) empty -> .

    COMMA           shift and go to state 164
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    RPAREN          reduce using rule 93 (empty -> .)

    op_escritura                   shift and go to state 182
    binop                          shift and go to state 100
    empty                          shift and go to state 165

state 176

    (86) decision -> IF LPAREN expresion RPAREN LBRACE . estatutos RBRACE op_decision
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RBRACE          reduce using rule 93 (empty -> .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 57
    estatutos                      shift and go to state 183
    estatuto                       shift and go to state 54
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    variable                       shift and go to state 66
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 177

    (91) condicional -> WHILE LPAREN expresion RPAREN DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 184


state 178

    (92) no_condicional -> FROM variable EQUAL expresion TO . expresion DO LBRACE estatutos RBRACE
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (78) variable -> . ID variable_op
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    ID              shift and go to state 120
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    variable                       shift and go to state 119
    expresion                      shift and go to state 185
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    boolean                        shift and go to state 79

state 179

    (74) llamada_metodo -> ID DOT ID LPAREN param_llamada RPAREN .

    SEMICOLON       reduce using rule 74 (llamada_metodo -> ID DOT ID LPAREN param_llamada RPAREN .)


state 180

    (81) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion . RBRACKET
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    RBRACKET        shift and go to state 186
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 181

    (76) op_lectura -> COMMA variable op_lectura .

    RPAREN          reduce using rule 76 (op_lectura -> COMMA variable op_lectura .)


state 182

    (84) op_escritura -> COMMA expresion op_escritura .

    RPAREN          reduce using rule 84 (op_escritura -> COMMA expresion op_escritura .)


state 183

    (86) decision -> IF LPAREN expresion RPAREN LBRACE estatutos . RBRACE op_decision

    RBRACE          shift and go to state 187


state 184

    (91) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE . estatutos RBRACE
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RBRACE          reduce using rule 93 (empty -> .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    expresion                      shift and go to state 57
    estatutos                      shift and go to state 188
    estatuto                       shift and go to state 54
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    variable                       shift and go to state 66
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 185

    (92) no_condicional -> FROM variable EQUAL expresion TO expresion . DO LBRACE estatutos RBRACE
    (48) expresion -> expresion . binop expresion
    (52) binop -> . SAME
    (53) binop -> . NOTEQ
    (54) binop -> . GTHAN
    (55) binop -> . LTHAN
    (56) binop -> . PLUS
    (57) binop -> . MINUS
    (58) binop -> . TIMES
    (59) binop -> . DIVIDE

    DO              shift and go to state 189
    SAME            shift and go to state 101
    NOTEQ           shift and go to state 102
    GTHAN           shift and go to state 103
    LTHAN           shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

    binop                          shift and go to state 100

state 186

    (81) variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .

    EQUAL           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    NOTEQ           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TIMES           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    COMMA           reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    TO              reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)
    DO              reduce using rule 81 (variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET .)


state 187

    (86) decision -> IF LPAREN expresion RPAREN LBRACE estatutos RBRACE . op_decision
    (87) op_decision -> . ELSE LBRACE estatutos RBRACE
    (88) op_decision -> . empty
    (93) empty -> .

    ELSE            shift and go to state 191
    SEMICOLON       reduce using rule 93 (empty -> .)

    op_decision                    shift and go to state 190
    empty                          shift and go to state 192

state 188

    (91) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 193


state 189

    (92) no_condicional -> FROM variable EQUAL expresion TO expresion DO . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 194


state 190

    (86) decision -> IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision .

    SEMICOLON       reduce using rule 86 (decision -> IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision .)


state 191

    (87) op_decision -> ELSE . LBRACE estatutos RBRACE

    LBRACE          shift and go to state 195


state 192

    (88) op_decision -> empty .

    SEMICOLON       reduce using rule 88 (op_decision -> empty .)


state 193

    (91) condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .

    SEMICOLON       reduce using rule 91 (condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE .)


state 194

    (92) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE . estatutos RBRACE
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RBRACE          reduce using rule 93 (empty -> .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    variable                       shift and go to state 66
    expresion                      shift and go to state 57
    estatutos                      shift and go to state 196
    estatuto                       shift and go to state 54
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 195

    (87) op_decision -> ELSE LBRACE . estatutos RBRACE
    (34) estatutos -> . estatuto
    (35) estatutos -> . estatuto estatutos
    (36) estatutos -> . empty
    (37) estatuto -> . asignacion SEMICOLON
    (38) estatuto -> . expresion SEMICOLON
    (39) estatuto -> . returns SEMICOLON
    (40) estatuto -> . llamada_funcion SEMICOLON
    (41) estatuto -> . llamada_metodo SEMICOLON
    (42) estatuto -> . var_def SEMICOLON
    (43) estatuto -> . lectura SEMICOLON
    (44) estatuto -> . escritura SEMICOLON
    (45) estatuto -> . decision SEMICOLON
    (46) estatuto -> . repeticion SEMICOLON
    (93) empty -> .
    (47) asignacion -> . variable EQUAL expresion
    (48) expresion -> . expresion binop expresion
    (49) expresion -> . plus_minus expresion
    (50) expresion -> . LPAREN expresion RPAREN
    (51) expresion -> . var_cte
    (69) returns -> . RETURN expresion
    (70) llamada_funcion -> . ID LPAREN param_llamada RPAREN
    (74) llamada_metodo -> . ID DOT ID LPAREN param_llamada RPAREN
    (24) var_def -> . type_compuesto ID
    (25) var_def -> . type_simple ID op_vardef
    (75) lectura -> . READ LPAREN variable op_lectura RPAREN
    (83) escritura -> . WRITE LPAREN expresion op_escritura RPAREN
    (86) decision -> . IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision
    (89) repeticion -> . condicional
    (90) repeticion -> . no_condicional
    (78) variable -> . ID variable_op
    (60) plus_minus -> . PLUS
    (61) plus_minus -> . MINUS
    (62) var_cte -> . variable
    (63) var_cte -> . boolean
    (64) var_cte -> . CTEF
    (65) var_cte -> . CTEI
    (66) var_cte -> . CTESTRING
    (33) type_compuesto -> . ID
    (29) type_simple -> . INT
    (30) type_simple -> . FLOAT
    (31) type_simple -> . STRING
    (32) type_simple -> . BOOL
    (91) condicional -> . WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE
    (92) no_condicional -> . FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RBRACE          reduce using rule 93 (empty -> .)
    LPAREN          shift and go to state 68
    RETURN          shift and go to state 70
    ID              shift and go to state 71
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    CTEF            shift and go to state 80
    CTEI            shift and go to state 81
    CTESTRING       shift and go to state 82
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86

    estatutos                      shift and go to state 197
    estatuto                       shift and go to state 54
    empty                          shift and go to state 55
    asignacion                     shift and go to state 56
    expresion                      shift and go to state 57
    returns                        shift and go to state 58
    llamada_funcion                shift and go to state 59
    llamada_metodo                 shift and go to state 60
    var_def                        shift and go to state 61
    lectura                        shift and go to state 62
    escritura                      shift and go to state 63
    decision                       shift and go to state 64
    repeticion                     shift and go to state 65
    variable                       shift and go to state 66
    plus_minus                     shift and go to state 67
    var_cte                        shift and go to state 69
    type_compuesto                 shift and go to state 7
    type_simple                    shift and go to state 9
    condicional                    shift and go to state 75
    no_condicional                 shift and go to state 76
    boolean                        shift and go to state 79

state 196

    (92) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 198


state 197

    (87) op_decision -> ELSE LBRACE estatutos . RBRACE

    RBRACE          shift and go to state 199


state 198

    (92) no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .

    SEMICOLON       reduce using rule 92 (no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE .)


state 199

    (87) op_decision -> ELSE LBRACE estatutos RBRACE .

    SEMICOLON       reduce using rule 87 (op_decision -> ELSE LBRACE estatutos RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SAME in state 118 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 118 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 118 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for SAME in state 140 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 140 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 140 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: reduce/reduce conflict in state 54 resolved using rule (estatutos -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 54
