
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECLASS COLON COMMA CTEF CTEI CTESTRING DIVIDE DO DOT ELSE EQUAL FLOAT FROM FUNC GTHAN ID IF INHERIT INT LBRACE LBRACKET LPAREN LTHAN MAIN MINUS NOTEQ PLUS RBRACE RBRACKET READ RET RETURN RPAREN SAME SEMICOLON STRING THEN TIMES TO VAR WHILE WRITEprograma : declaraciones main declaraciones : empty declaraciones : var_def declaraciones declaraciones : funcion_def declaraciones declaraciones : clase_def declaraciones clase_def : CLASS ID clase_op bloque_clase clase_op : INHERIT ID \n\t\t\t\t | empty  bloque_clase : LBRACE op_var op_func RBRACE op_func : funcion_def op_func\n\t\t\t\t| empty funcion_def : FUNC ID LPAREN params RPAREN return_option bloque_func op_var : var_def op_var\n\t\t\t   | empty return_option : RET type_simple\n\t\t\t\t\t\t\t\t\t  | empty  params : ID COLON type_simple params_op\n\t\t\t\t\t   | empty params_op : COMMA params\n\t\t\t\t\t\t\t\t\t| empty  bloque_func : LBRACE op_var estatutos RBRACE main : MAIN LPAREN RPAREN bloque_func var_def : VAR type_compuesto    ID           SEMICOLON\n\t\t\t\t\t\t\t| VAR type_simple       ID op_vardef  SEMICOLON  op_vardef : LBRACKET CTEI RBRACKET \n\t\t\t\t\t\t\t  | LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET \n\t\t\t\t\t\t\t  | empty type_simple : INT\n\t\t\t\t\t\t\t\t\t| FLOAT\n\t\t\t\t\t\t\t\t\t| STRING  type_compuesto : ID  estatutos : estatuto\n\t\t\t\t\t\t\t| estatuto estatutos\n\t\t\t\t\t\t\t| empty  estatuto : asignacion\n\t\t\t\t\t\t\t| expresion\n\t\t\t\t\t\t\t| returns\n\t\t\t\t\t\t\t| llamada_funcion SEMICOLON\n\t\t\t\t\t\t\t| llamada_objeto SEMICOLON\n\t\t\t\t\t\t\t| lectura\n\t\t\t\t\t\t\t| escritura\n\t\t\t\t\t\t\t| decision\n\t\t\t\t\t\t\t| repeticion  asignacion : variable EQUAL expresion SEMICOLON  expresion : expresion binop expresion\n\t\t\t\t\t   | plus_minus expresion\n\t\t\t\t\t   | LPAREN expresion RPAREN\n\t\t\t\t\t   | var_cte  binop : SAME\n\t\t\t\t\t  | NOTEQ\n\t\t\t\t\t  | GTHAN \n\t\t\t\t\t  | LTHAN \n\t\t\t\t\t  | PLUS\n\t\t\t\t\t  | MINUS\n\t\t\t\t\t  | TIMES\n\t\t\t\t\t  | DIVIDE plus_minus : PLUS\n\t\t\t\t\t\t\t   | MINUS  var_cte : variable\n\t\t\t\t\t\t\t| CTEF\n\t\t\t\t\t\t\t| CTEI  returns : RETURN expresion SEMICOLON  llamada_funcion : ID LPAREN param_llamada RPAREN  param_llamada : expresion\n\t\t\t\t\t\t\t\t\t  | expresion COMMA param_llamada\n\t\t\t\t\t\t\t\t\t  | empty  llamada_objeto : ID DOT ID LPAREN param_llamada RPAREN   lectura : READ LPAREN variable op_lectura RPAREN SEMICOLON  op_lectura : COMMA variable op_lectura \n\t\t\t\t\t\t\t   | empty  variable : ID variable_op\n\t\t\t\t\t\t\t  | llamada_objeto  variable_op : DOT ID \n\t\t\t\t\t\t\t\t\t| LBRACKET expresion RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET\n\t\t\t\t\t\t\t\t\t| empty\n\t\t\t\t\t\t\t\t\t escritura : WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON  type_escritura : CTESTRING \n\t\t\t\t\t\t\t\t\t   | expresion  op_escritura : COMMA CTESTRING op_escritura \n\t\t\t\t\t\t\t\t\t | COMMA expresion op_escritura\n\t\t\t\t\t\t\t\t\t | empty  decision : IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision  op_decision : ELSE LBRACE estatutos RBRACE \n\t\t\t\t\t\t\t\t\t| empty  repeticion : condicional \n\t\t\t\t\t\t\t   | no_condicional  condicional : WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE  no_condicional : FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE  empty : '
    
_lr_action_items = {'MAIN':([0,2,3,4,5,6,12,13,14,31,38,43,93,95,97,],[-90,11,-2,-90,-90,-90,-3,-4,-5,-23,-6,-24,-12,-9,-21,]),'VAR':([0,4,5,6,31,38,39,42,43,48,93,95,97,],[7,7,7,7,-23,-6,7,7,-24,7,-12,-9,-21,]),'FUNC':([0,4,5,6,31,38,39,43,47,48,49,57,59,93,95,97,],[8,8,8,8,-23,-6,-90,-24,8,-90,-14,8,-13,-12,-9,-21,]),'CLASS':([0,4,5,6,31,38,43,93,95,97,],[9,9,9,9,-23,-6,-24,-12,-9,-21,]),'$end':([1,10,41,97,],[0,-1,-22,-21,]),'ID':([7,8,9,15,16,17,18,19,20,26,28,31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,88,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,129,131,132,136,144,146,148,149,150,152,155,162,170,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[16,21,22,24,-31,25,-28,-29,-30,35,40,-23,-90,-24,-90,-14,77,-13,77,-35,-36,-37,-72,-40,-41,-42,-43,-59,113,113,-48,113,-90,-86,-87,-57,-58,-60,-61,113,35,113,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,113,-46,-59,-90,-72,113,136,-71,113,-76,113,113,113,113,-45,-47,-62,-73,113,-44,113,113,-74,113,113,113,113,-67,-68,-77,77,77,-75,-90,-88,77,-83,-85,77,-89,-84,]),'INT':([7,45,54,],[18,18,18,]),'FLOAT':([7,45,54,],[19,19,19,]),'STRING':([7,45,54,],[20,20,20,]),'LPAREN':([11,21,31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,121,123,124,125,129,131,132,136,144,146,148,149,150,155,162,170,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[23,26,-23,-90,-24,-90,-14,74,-13,74,-35,-36,-37,-72,-40,-41,-42,-43,-59,74,74,-48,74,117,122,123,124,-86,-87,-57,-58,-60,-61,125,74,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,74,-46,-59,-90,-72,74,-71,74,-76,74,74,74,-45,-47,-62,149,74,-44,74,74,-74,74,74,74,-67,-68,-77,74,74,-75,-90,-88,74,-83,-85,74,-89,-84,]),'COMMA':([18,19,20,52,75,85,86,111,112,113,114,119,121,129,131,134,136,138,139,140,141,150,164,166,167,171,181,],[-28,-29,-30,91,-48,-60,-61,-46,-59,-90,-72,-71,-76,-45,-47,148,-73,152,155,-78,-79,-74,152,155,155,-67,-75,]),'RPAREN':([18,19,20,23,26,36,37,52,75,85,86,90,91,92,111,112,113,114,115,117,119,121,128,129,131,133,134,135,136,138,139,140,141,142,143,148,149,150,151,153,154,156,160,161,164,166,167,171,174,176,177,181,],[-28,-29,-30,30,-90,46,-18,-90,-48,-60,-61,-17,-90,-20,-46,-59,-90,-72,131,-90,-71,-76,-19,-45,-47,147,-64,-66,-73,-90,-90,-78,-79,157,158,-90,-90,-74,163,-70,165,-82,-65,171,-90,-90,-90,-67,-69,-80,-81,-75,]),'LBRACE':([18,19,20,22,27,29,30,40,46,53,55,94,168,169,184,189,],[-28,-29,-30,-90,39,-8,42,-7,-90,42,-16,-15,178,179,187,192,]),'INHERIT':([22,],[28,]),'SEMICOLON':([24,25,32,34,51,66,67,75,85,86,111,112,113,114,116,119,121,129,130,131,136,145,147,150,163,165,171,181,],[31,-90,43,-27,-25,108,109,-48,-60,-61,-46,-59,-90,-72,132,-71,-76,-45,146,-47,-73,-26,-63,-74,173,175,-67,-75,]),'LBRACKET':([25,51,77,113,150,],[33,89,120,120,162,]),'RBRACE':([31,39,42,43,47,48,49,50,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,93,96,97,98,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,182,183,185,186,187,188,190,191,192,193,194,195,],[-23,-90,-90,-24,-90,-90,-14,-90,95,-90,-11,-13,97,-32,-34,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-12,-10,-21,-33,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,-90,-90,-75,185,186,-90,-88,-90,-83,-85,193,-90,-89,195,-84,]),'RETURN':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,76,-13,76,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,76,76,-75,-90,-88,76,-83,-85,76,-89,-84,]),'READ':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,78,-13,78,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,78,78,-75,-90,-88,78,-83,-85,78,-89,-84,]),'WRITE':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,79,-13,79,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,79,79,-75,-90,-88,79,-83,-85,79,-89,-84,]),'IF':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,80,-13,80,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,80,80,-75,-90,-88,80,-83,-85,80,-89,-84,]),'PLUS':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,125,129,130,131,132,134,136,137,141,142,143,144,146,148,149,150,155,159,162,167,170,171,172,173,175,178,179,180,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,83,-13,83,-35,104,-37,-72,-40,-41,-42,-43,-59,83,83,-48,83,-90,-86,-87,-57,-58,-60,-61,83,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,83,104,-59,-90,-72,104,104,83,-71,83,-76,83,83,83,104,104,-47,-62,104,-73,104,104,104,104,83,-44,83,83,-74,83,104,83,104,83,-67,104,-68,-77,83,83,104,-75,-90,-88,83,-83,-85,83,-89,-84,]),'MINUS':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,125,129,130,131,132,134,136,137,141,142,143,144,146,148,149,150,155,159,162,167,170,171,172,173,175,178,179,180,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,84,-13,84,-35,105,-37,-72,-40,-41,-42,-43,-59,84,84,-48,84,-90,-86,-87,-57,-58,-60,-61,84,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,84,105,-59,-90,-72,105,105,84,-71,84,-76,84,84,84,105,105,-47,-62,105,-73,105,105,105,105,84,-44,84,84,-74,84,105,84,105,84,-67,105,-68,-77,84,84,105,-75,-90,-88,84,-83,-85,84,-89,-84,]),'CTEF':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,121,123,124,125,129,131,132,136,144,146,148,149,150,155,162,170,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,85,-13,85,-35,-36,-37,-72,-40,-41,-42,-43,-59,85,85,-48,85,-90,-86,-87,-57,-58,-60,-61,85,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,85,-46,-59,-90,-72,85,-71,85,-76,85,85,85,-45,-47,-62,-73,85,-44,85,85,-74,85,85,85,-67,-68,-77,85,85,-75,-90,-88,85,-83,-85,85,-89,-84,]),'CTEI':([31,33,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,89,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,121,123,124,125,129,131,132,136,144,146,148,149,150,155,162,170,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,44,-90,-24,-90,-14,86,-13,86,-35,-36,-37,-72,-40,-41,-42,-43,-59,86,86,-48,86,-90,-86,-87,-57,-58,-60,-61,127,86,-49,-50,-51,-52,-53,-54,-55,-56,-38,-39,86,-46,-59,-90,-72,86,-71,86,-76,86,86,86,-45,-47,-62,-73,86,-44,86,86,-74,86,86,86,-67,-68,-77,86,86,-75,-90,-88,86,-83,-85,86,-89,-84,]),'WHILE':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,87,-13,87,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,87,87,-75,-90,-88,87,-83,-85,87,-89,-84,]),'FROM':([31,42,43,48,49,50,59,61,63,64,65,67,68,69,70,71,72,75,77,81,82,85,86,108,109,111,112,113,114,119,121,129,131,132,136,146,150,171,173,175,178,179,181,185,186,187,188,190,192,193,195,],[-23,-90,-24,-90,-14,88,-13,88,-35,-36,-37,-72,-40,-41,-42,-43,-59,-48,-90,-86,-87,-60,-61,-38,-39,-46,-59,-90,-72,-71,-76,-45,-47,-62,-73,-44,-74,-67,-68,-77,88,88,-75,-90,-88,88,-83,-85,88,-89,-84,]),'COLON':([35,],[45,]),'RBRACKET':([44,75,85,86,111,112,113,114,119,121,127,129,131,136,137,150,171,172,181,],[51,-48,-60,-61,-46,-59,-90,-72,-71,-76,145,-45,-47,-73,150,-74,-67,181,-75,]),'RET':([46,],[54,]),'SAME':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[100,-72,-59,-48,-90,-60,-61,100,-59,-90,-72,100,100,-71,-76,100,100,-47,100,-73,100,100,100,100,-74,100,100,-67,100,100,-75,]),'NOTEQ':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[101,-72,-59,-48,-90,-60,-61,101,-59,-90,-72,101,101,-71,-76,101,101,-47,101,-73,101,101,101,101,-74,101,101,-67,101,101,-75,]),'GTHAN':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[102,-72,-59,-48,-90,-60,-61,102,-59,-90,-72,102,102,-71,-76,102,102,-47,102,-73,102,102,102,102,-74,102,102,-67,102,102,-75,]),'LTHAN':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[103,-72,-59,-48,-90,-60,-61,103,-59,-90,-72,103,103,-71,-76,103,103,-47,103,-73,103,103,103,103,-74,103,103,-67,103,103,-75,]),'TIMES':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[106,-72,-59,-48,-90,-60,-61,106,-59,-90,-72,106,106,-71,-76,106,106,-47,106,-73,106,106,106,106,-74,106,106,-67,106,106,-75,]),'DIVIDE':([64,67,72,75,77,85,86,111,112,113,114,115,116,119,121,129,130,131,134,136,137,141,142,143,150,159,167,171,172,180,181,],[107,-72,-59,-48,-90,-60,-61,107,-59,-90,-72,107,107,-71,-76,107,107,-47,107,-73,107,107,107,107,-74,107,107,-67,107,107,-75,]),'EQUAL':([67,72,77,113,114,119,121,126,136,150,171,181,],[-72,110,-90,-90,-72,-71,-76,144,-73,-74,-67,-75,]),'TO':([75,85,86,111,112,113,114,119,121,129,131,136,150,159,171,181,],[-48,-60,-61,-46,-59,-90,-72,-71,-76,-45,-47,-73,-74,170,-67,-75,]),'DO':([75,85,86,111,112,113,114,119,121,129,131,136,150,158,171,180,181,],[-48,-60,-61,-46,-59,-90,-72,-71,-76,-45,-47,-73,-74,169,-67,184,-75,]),'DOT':([77,113,],[118,118,]),'CTESTRING':([123,155,],[140,166,]),'THEN':([157,],[168,]),'ELSE':([185,],[189,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,4,5,6,],[2,12,13,14,]),'empty':([0,4,5,6,22,25,26,39,42,46,47,48,50,52,57,61,77,91,113,117,138,139,148,149,164,166,167,178,179,185,187,192,],[3,3,3,3,29,34,37,49,49,55,58,49,62,92,58,62,121,37,121,135,153,156,135,135,153,156,156,62,62,190,62,62,]),'var_def':([0,4,5,6,39,42,48,],[4,4,4,4,48,48,48,]),'funcion_def':([0,4,5,6,47,57,],[5,5,5,5,57,57,]),'clase_def':([0,4,5,6,],[6,6,6,6,]),'main':([2,],[10,]),'type_compuesto':([7,],[15,]),'type_simple':([7,45,54,],[17,52,94,]),'clase_op':([22,],[27,]),'op_vardef':([25,],[32,]),'params':([26,91,],[36,128,]),'bloque_clase':([27,],[38,]),'bloque_func':([30,53,],[41,93,]),'op_var':([39,42,48,],[47,50,59,]),'return_option':([46,],[53,]),'op_func':([47,57,],[56,96,]),'estatutos':([50,61,178,179,187,192,],[60,98,182,183,191,194,]),'estatuto':([50,61,178,179,187,192,],[61,61,61,61,61,61,]),'asignacion':([50,61,178,179,187,192,],[63,63,63,63,63,63,]),'expresion':([50,61,73,74,76,99,110,117,120,123,124,125,144,148,149,155,162,170,178,179,187,192,],[64,64,111,115,116,129,130,134,137,141,142,143,159,134,134,167,172,180,64,64,64,64,]),'returns':([50,61,178,179,187,192,],[65,65,65,65,65,65,]),'llamada_funcion':([50,61,178,179,187,192,],[66,66,66,66,66,66,]),'llamada_objeto':([50,61,73,74,76,88,99,110,117,120,122,123,124,125,144,148,149,152,155,162,170,178,179,187,192,],[67,67,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,67,67,67,67,]),'lectura':([50,61,178,179,187,192,],[68,68,68,68,68,68,]),'escritura':([50,61,178,179,187,192,],[69,69,69,69,69,69,]),'decision':([50,61,178,179,187,192,],[70,70,70,70,70,70,]),'repeticion':([50,61,178,179,187,192,],[71,71,71,71,71,71,]),'variable':([50,61,73,74,76,88,99,110,117,120,122,123,124,125,144,148,149,152,155,162,170,178,179,187,192,],[72,72,112,112,112,126,112,112,112,112,138,112,112,112,112,112,112,164,112,112,112,72,72,72,72,]),'plus_minus':([50,61,73,74,76,99,110,117,120,123,124,125,144,148,149,155,162,170,178,179,187,192,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'var_cte':([50,61,73,74,76,99,110,117,120,123,124,125,144,148,149,155,162,170,178,179,187,192,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'condicional':([50,61,178,179,187,192,],[81,81,81,81,81,81,]),'no_condicional':([50,61,178,179,187,192,],[82,82,82,82,82,82,]),'params_op':([52,],[90,]),'binop':([64,111,115,116,129,130,134,137,141,142,143,159,167,172,180,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'variable_op':([77,113,],[119,119,]),'param_llamada':([117,148,149,],[133,160,161,]),'type_escritura':([123,],[139,]),'op_lectura':([138,164,],[151,174,]),'op_escritura':([139,166,167,],[154,176,177,]),'op_decision':([185,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones main','programa',2,'p_programa','parser.py',146),
  ('declaraciones -> empty','declaraciones',1,'p_declaraciones','parser.py',151),
  ('declaraciones -> var_def declaraciones','declaraciones',2,'p_declaraciones_variables','parser.py',156),
  ('declaraciones -> funcion_def declaraciones','declaraciones',2,'p_declaraciones_funciones','parser.py',161),
  ('declaraciones -> clase_def declaraciones','declaraciones',2,'p_declaraciones_clases','parser.py',166),
  ('clase_def -> CLASS ID clase_op bloque_clase','clase_def',4,'p_clase_def','parser.py',171),
  ('clase_op -> INHERIT ID','clase_op',2,'p_clase_op','parser.py',176),
  ('clase_op -> empty','clase_op',1,'p_clase_op','parser.py',177),
  ('bloque_clase -> LBRACE op_var op_func RBRACE','bloque_clase',4,'p_bloque_clase','parser.py',185),
  ('op_func -> funcion_def op_func','op_func',2,'p_op_func','parser.py',199),
  ('op_func -> empty','op_func',1,'p_op_func','parser.py',200),
  ('funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func','funcion_def',7,'p_funcion_def','parser.py',208),
  ('op_var -> var_def op_var','op_var',2,'p_op_var','parser.py',214),
  ('op_var -> empty','op_var',1,'p_op_var','parser.py',215),
  ('return_option -> RET type_simple','return_option',2,'p_return_option','parser.py',224),
  ('return_option -> empty','return_option',1,'p_return_option','parser.py',225),
  ('params -> ID COLON type_simple params_op','params',4,'p_params','parser.py',235),
  ('params -> empty','params',1,'p_params','parser.py',236),
  ('params_op -> COMMA params','params_op',2,'p_params_op','parser.py',244),
  ('params_op -> empty','params_op',1,'p_params_op','parser.py',245),
  ('bloque_func -> LBRACE op_var estatutos RBRACE','bloque_func',4,'p_bloque_func','parser.py',253),
  ('main -> MAIN LPAREN RPAREN bloque_func','main',4,'p_main','parser.py',258),
  ('var_def -> VAR type_compuesto ID SEMICOLON','var_def',4,'p_var_def','parser.py',277),
  ('var_def -> VAR type_simple ID op_vardef SEMICOLON','var_def',5,'p_var_def','parser.py',278),
  ('op_vardef -> LBRACKET CTEI RBRACKET','op_vardef',3,'p_op_vardef','parser.py',288),
  ('op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','op_vardef',6,'p_op_vardef','parser.py',289),
  ('op_vardef -> empty','op_vardef',1,'p_op_vardef','parser.py',290),
  ('type_simple -> INT','type_simple',1,'p_type_simple','parser.py',300),
  ('type_simple -> FLOAT','type_simple',1,'p_type_simple','parser.py',301),
  ('type_simple -> STRING','type_simple',1,'p_type_simple','parser.py',302),
  ('type_compuesto -> ID','type_compuesto',1,'p_type_compuesto','parser.py',307),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','parser.py',312),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','parser.py',313),
  ('estatutos -> empty','estatutos',1,'p_estatutos','parser.py',314),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',327),
  ('estatuto -> expresion','estatuto',1,'p_estatuto','parser.py',328),
  ('estatuto -> returns','estatuto',1,'p_estatuto','parser.py',329),
  ('estatuto -> llamada_funcion SEMICOLON','estatuto',2,'p_estatuto','parser.py',330),
  ('estatuto -> llamada_objeto SEMICOLON','estatuto',2,'p_estatuto','parser.py',331),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',332),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',333),
  ('estatuto -> decision','estatuto',1,'p_estatuto','parser.py',334),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',335),
  ('asignacion -> variable EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',340),
  ('expresion -> expresion binop expresion','expresion',3,'p_expresion','parser.py',377),
  ('expresion -> plus_minus expresion','expresion',2,'p_expresion','parser.py',378),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion','parser.py',379),
  ('expresion -> var_cte','expresion',1,'p_expresion','parser.py',380),
  ('binop -> SAME','binop',1,'p_binop','parser.py',391),
  ('binop -> NOTEQ','binop',1,'p_binop','parser.py',392),
  ('binop -> GTHAN','binop',1,'p_binop','parser.py',393),
  ('binop -> LTHAN','binop',1,'p_binop','parser.py',394),
  ('binop -> PLUS','binop',1,'p_binop','parser.py',395),
  ('binop -> MINUS','binop',1,'p_binop','parser.py',396),
  ('binop -> TIMES','binop',1,'p_binop','parser.py',397),
  ('binop -> DIVIDE','binop',1,'p_binop','parser.py',398),
  ('plus_minus -> PLUS','plus_minus',1,'p_plus_minus','parser.py',403),
  ('plus_minus -> MINUS','plus_minus',1,'p_plus_minus','parser.py',404),
  ('var_cte -> variable','var_cte',1,'p_var_cte','parser.py',409),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte','parser.py',410),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte','parser.py',411),
  ('returns -> RETURN expresion SEMICOLON','returns',3,'p_returns','parser.py',417),
  ('llamada_funcion -> ID LPAREN param_llamada RPAREN','llamada_funcion',4,'p_llamada_funcion','parser.py',424),
  ('param_llamada -> expresion','param_llamada',1,'p_param_llamada','parser.py',438),
  ('param_llamada -> expresion COMMA param_llamada','param_llamada',3,'p_param_llamada','parser.py',439),
  ('param_llamada -> empty','param_llamada',1,'p_param_llamada','parser.py',440),
  ('llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN','llamada_objeto',6,'p_llamada_objeto','parser.py',451),
  ('lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON','lectura',6,'p_lectura','parser.py',457),
  ('op_lectura -> COMMA variable op_lectura','op_lectura',3,'p_op_lectura','parser.py',462),
  ('op_lectura -> empty','op_lectura',1,'p_op_lectura','parser.py',463),
  ('variable -> ID variable_op','variable',2,'p_variable','parser.py',473),
  ('variable -> llamada_objeto','variable',1,'p_variable','parser.py',474),
  ('variable_op -> DOT ID','variable_op',2,'p_variable_op','parser.py',482),
  ('variable_op -> LBRACKET expresion RBRACKET','variable_op',3,'p_variable_op','parser.py',483),
  ('variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET','variable_op',6,'p_variable_op','parser.py',484),
  ('variable_op -> empty','variable_op',1,'p_variable_op','parser.py',485),
  ('escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON','escritura',6,'p_escritura','parser.py',516),
  ('type_escritura -> CTESTRING','type_escritura',1,'p_type_escritura','parser.py',521),
  ('type_escritura -> expresion','type_escritura',1,'p_type_escritura','parser.py',522),
  ('op_escritura -> COMMA CTESTRING op_escritura','op_escritura',3,'p_op_escritura','parser.py',527),
  ('op_escritura -> COMMA expresion op_escritura','op_escritura',3,'p_op_escritura','parser.py',528),
  ('op_escritura -> empty','op_escritura',1,'p_op_escritura','parser.py',529),
  ('decision -> IF LPAREN expresion RPAREN THEN LBRACE estatutos RBRACE op_decision','decision',9,'p_decision','parser.py',537),
  ('op_decision -> ELSE LBRACE estatutos RBRACE','op_decision',4,'p_op_decision','parser.py',542),
  ('op_decision -> empty','op_decision',1,'p_op_decision','parser.py',543),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',551),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','parser.py',552),
  ('condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE','condicional',8,'p_condicional','parser.py',557),
  ('no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE','no_condicional',10,'p_no_condicional','parser.py',562),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',577),
]
