
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLASS COLON COMMA CTEF CTEI CTESTRING DIVIDE DO DOT ELSE EQUAL FLOAT FROM FUNC GTHAN ID IF INHERIT INT LBRACE LBRACKET LPAREN LTHAN MAIN MINUS NOTEQ PLUS RBRACE RBRACKET READ RET RETURN RPAREN SAME SEMICOLON STRING THEN TIMES TO VAR WHILE WRITEprograma : definiciones main definiciones : var_def definiciones\n\t\t\t\t\t| funcion_def definiciones\n\t\t\t\t\t| clase_def definiciones\n\t\t\t\t\t| empty clase_def : CLASS ID clase_op bloque_clase clase_op : INHERIT ID \n\t\t\t\t| empty  bloque_clase : LBRACE op_var op_func RBRACE op_func : funcion_def\n\t\t\t\t| empty funcion_def : FUNC ID LPAREN params RPAREN return_option bloque_func op_var : var_def\n\t\t\t\t| empty return_option : RET type_simple\n\t\t\t\t\t  | empty  params : ID COLON type_simple params_op params_op : COMMA params\n\t\t\t\t\t| empty  bloque_func : LBRACE op_var estatutos RBRACE main : MAIN  LPAREN RPAREN bloque_func var_def : VAR type_compuesto ID ids SEMICOLON\n\t\t\t\t| VAR type_simple ID op_vardef SEMICOLON  ids : COMMA ID ids\n\t\t\t\t| empty op_vardef : LBRACKET CTEI RBRACKET \n\t\t\t\t  | LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET \n\t\t\t\t  | empty type_simple : INT\n\t\t\t\t\t| FLOAT\n\t\t\t\t\t| STRING  type_compuesto : ID  estatutos : estatuto\n\t\t\t\t| estatuto estatutos\n\t\t\t\t| empty  estatuto : asignacion\n\t\t\t\t| expr\n\t\t\t\t| returns\n\t\t\t\t| llamada_void\n                | llamada_objeto\n\t\t\t\t| lectura\n\t\t\t\t| escritura\n\t\t\t\t| decision\n\t\t\t\t| repeticion  asignacion : variable EQUAL expr SEMICOLON  expr : expresion\n\t\t\t | expresion binop expresion  expresion : termino op_expresion  op_expresion : plus_minus expresion \n                     | empty termino : factor op_factor  op_factor : mulop factor\n                  | empty  factor : LPAREN expr RPAREN \n               | var_cte\n               | variable  binop : SAME\n              | NOTEQ\n              | GTHAN \n              | LTHAN  mulop : TIMES \n              | DIVIDE  plus_minus : PLUS\n                   | MINUS  var_cte : ID\n                | CTEF\n                | CTEI  returns : RETURN expr SEMICOLON  llamada_void : ID LPAREN param_llamada RPAREN SEMICOLON  param_llamada : expr\n                      | empty  llamada_objeto : ID DOT ID LPAREN param_llamada RPAREN SEMICOLON  lectura : READ LPAREN variable op_lectura RPAREN SEMICOLON  op_lectura : COMMA variable op_lectura \n                   | empty  variable : ID variable_op  variable_op : DOT ID\n\t\t\t\t\t| LBRACKET expr RBRACKET matrix\n\t\t\t\t\t| empty\n\t\t\t\t\t matrix : LBRACKET expr RBRACKET matrix\n\t\t\t   | empty  escritura : WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON  type_escritura : CTESTRING \n                       | expr  op_escritura : COMMA CTESTRING op_escritura \n                     | COMMA expr op_escritura\n                     | empty  decision : IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision  op_decision : ELSE LBRACE estatutos RBRACE \n                    | empty  repeticion : condicional \n                   | no_condicional  condicional : WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE  no_condicional : FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE  type_no_condicional : ID\n                            | ID LBRACKET expr RBRACKET \n                            | ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET  empty : '
    
_lr_action_items = {'VAR':([0,3,4,5,39,40,43,44,46,96,98,99,],[7,7,7,7,-6,7,7,-22,-23,-12,-9,-20,]),'FUNC':([0,3,4,5,39,40,44,46,50,51,52,96,98,99,],[8,8,8,8,-6,-98,-22,-23,8,-13,-14,-12,-9,-20,]),'CLASS':([0,3,4,5,39,44,46,96,98,99,],[9,9,9,9,-6,-22,-23,-12,-9,-20,]),'MAIN':([0,2,3,4,5,6,12,13,14,39,44,46,96,98,99,],[-98,11,-98,-98,-98,-5,-2,-3,-4,-6,-22,-23,-12,-9,-20,]),'$end':([1,10,42,99,],[0,-1,-21,-20,]),'ID':([7,8,9,15,16,17,18,19,20,26,28,32,43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,87,88,89,90,91,94,101,102,103,104,105,106,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,127,128,129,130,131,135,136,137,141,143,150,152,153,154,156,157,159,160,162,165,171,173,174,175,183,187,189,192,193,195,196,197,202,203,204,205,207,209,211,212,214,],[16,21,22,24,-32,25,-29,-30,-31,37,41,45,-98,-22,-23,-13,-14,78,78,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,109,-65,109,-91,-92,-98,126,-98,-55,-66,-67,37,109,109,-57,-58,-59,-60,-56,-65,109,141,-76,109,-79,145,109,109,-48,109,-50,-63,-64,109,-51,109,-53,-61,-62,-47,-68,157,-77,-54,-49,109,109,-52,-45,-77,109,-98,145,109,-69,109,-78,-81,109,-73,-82,78,78,109,-72,-98,-80,-98,-93,78,-88,-90,78,-94,-89,]),'INT':([7,48,58,],[18,18,18,]),'FLOAT':([7,48,58,],[19,19,19,]),'STRING':([7,48,58,],[20,20,20,]),'LPAREN':([11,21,43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,101,102,103,104,105,106,108,109,110,112,113,114,117,118,119,120,121,122,123,124,127,128,129,130,131,135,136,141,143,150,152,153,154,156,157,159,160,165,171,173,174,175,183,187,189,192,193,195,196,197,202,203,204,205,207,209,211,212,214,],[23,26,-98,-22,-23,-13,-14,79,79,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,79,110,79,116,117,118,-91,-92,-98,124,-98,-55,-66,-67,79,79,-57,-58,-59,-60,-56,-65,79,-76,79,-79,79,79,-48,79,-50,-63,-64,79,-51,79,-53,-61,-62,-47,-68,159,-54,-49,79,79,-52,-45,-77,79,-98,79,-69,79,-78,-81,79,-73,-82,79,79,79,-72,-98,-80,-98,-93,79,-88,-90,79,-94,-89,]),'COMMA':([18,19,20,24,45,56,76,85,88,89,90,91,108,109,112,114,119,121,127,129,135,143,144,145,146,147,148,150,154,157,160,174,175,177,179,180,197,202,],[-29,-30,-31,32,32,94,-46,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-54,162,-98,165,-83,-84,-49,-52,-77,-98,-78,-81,162,165,165,-98,-80,]),'RPAREN':([18,19,20,23,38,56,76,85,88,89,90,91,93,95,108,109,110,112,114,115,119,121,127,129,133,135,138,139,140,143,144,145,146,147,148,149,150,151,154,157,159,160,161,163,164,166,172,174,175,177,179,180,188,190,191,197,202,],[-29,-30,-31,30,49,-98,-46,-98,-98,-55,-66,-67,-17,-19,-56,-65,-98,-76,-79,143,-48,-50,-51,-53,-18,-47,158,-70,-71,-54,-98,-98,-98,-83,-84,167,-49,168,-52,-77,-98,-98,176,-75,178,-87,185,-78,-81,-98,-98,-98,-74,-85,-86,-98,-80,]),'LBRACE':([18,19,20,22,27,29,30,41,49,57,59,97,181,182,200,208,],[-29,-30,-31,-98,40,-8,43,-7,-98,43,-16,-15,192,193,205,211,]),'INHERIT':([22,],[28,]),'SEMICOLON':([24,25,31,33,34,36,45,54,55,76,85,88,89,90,91,107,108,109,112,114,119,121,127,129,134,135,143,150,154,155,157,158,160,174,175,176,178,185,197,202,],[-98,-98,44,-25,46,-28,-98,-24,-26,-46,-98,-98,-55,-66,-67,136,-56,-65,-76,-79,-48,-50,-51,-53,156,-47,-54,-49,-52,-27,-77,171,-98,-78,-81,187,189,196,-98,-80,]),'LBRACKET':([25,55,78,109,126,145,160,184,197,],[35,92,113,113,153,113,173,195,173,]),'CTEI':([35,43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,88,89,90,91,92,101,102,103,104,105,106,108,109,110,112,113,114,117,118,119,120,121,122,123,124,127,128,129,130,131,135,136,141,143,150,152,153,154,156,157,159,160,165,171,173,174,175,183,187,189,192,193,195,196,197,202,203,204,205,207,209,211,212,214,],[47,-98,-22,-23,-13,-14,91,91,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,91,-65,91,-91,-92,-98,-98,-55,-66,-67,132,91,91,-57,-58,-59,-60,-56,-65,91,-76,91,-79,91,91,-48,91,-50,-63,-64,91,-51,91,-53,-61,-62,-47,-68,-77,-54,-49,91,91,-52,-45,-77,91,-98,91,-69,91,-78,-81,91,-73,-82,91,91,91,-72,-98,-80,-98,-93,91,-88,-90,91,-94,-89,]),'COLON':([37,],[48,]),'RBRACE':([40,43,44,46,50,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,96,99,100,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,198,199,202,203,204,205,207,209,210,211,212,213,214,],[-98,-98,-22,-23,-98,-13,-14,-98,98,-10,-11,99,-33,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-12,-20,-34,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,-98,-98,-72,-98,203,204,-80,-98,-93,-98,-88,-90,212,-98,-94,214,-89,]),'RETURN':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,77,77,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,77,77,-72,-98,-80,-98,-93,77,-88,-90,77,-94,-89,]),'READ':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,80,80,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,80,80,-72,-98,-80,-98,-93,80,-88,-90,80,-94,-89,]),'WRITE':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,81,81,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,81,81,-72,-98,-80,-98,-93,81,-88,-90,81,-94,-89,]),'IF':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,82,82,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,82,82,-72,-98,-80,-98,-93,82,-88,-90,82,-94,-89,]),'WHILE':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,86,86,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,86,86,-72,-98,-80,-98,-93,86,-88,-90,86,-94,-89,]),'FROM':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,78,83,84,85,88,89,90,91,108,109,112,114,119,121,127,129,135,136,141,143,150,154,156,157,160,171,174,175,187,189,192,193,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,87,87,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,-65,-91,-92,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-68,-77,-54,-49,-52,-45,-77,-98,-69,-78,-81,-73,-82,87,87,-72,-98,-80,-98,-93,87,-88,-90,87,-94,-89,]),'CTEF':([43,44,46,51,52,53,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,88,89,90,91,101,102,103,104,105,106,108,109,110,112,113,114,117,118,119,120,121,122,123,124,127,128,129,130,131,135,136,141,143,150,152,153,154,156,157,159,160,165,171,173,174,175,183,187,189,192,193,195,196,197,202,203,204,205,207,209,211,212,214,],[-98,-22,-23,-13,-14,90,90,-36,-37,-38,-39,-40,-41,-42,-43,-44,-56,-46,90,-65,90,-91,-92,-98,-98,-55,-66,-67,90,90,-57,-58,-59,-60,-56,-65,90,-76,90,-79,90,90,-48,90,-50,-63,-64,90,-51,90,-53,-61,-62,-47,-68,-77,-54,-49,90,90,-52,-45,-77,90,-98,90,-69,90,-78,-81,90,-73,-82,90,90,90,-72,-98,-80,-98,-93,90,-88,-90,90,-94,-89,]),'RBRACKET':([47,76,85,88,89,90,91,108,109,112,114,119,121,127,129,132,135,142,143,150,154,157,160,170,174,175,186,197,201,202,],[55,-46,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,155,-47,160,-54,-49,-52,-77,-98,184,-78,-81,197,-98,206,-80,]),'RET':([49,],[58,]),'EQUAL':([75,78,112,114,125,126,141,160,174,175,184,197,202,206,],[101,-98,-76,-79,152,-95,-77,-98,-78,-81,-96,-98,-80,-97,]),'TIMES':([75,78,88,89,90,91,108,109,112,114,141,143,157,160,174,175,197,202,],[-56,-65,130,-55,-66,-67,-56,-65,-76,-79,-77,-54,-77,-98,-78,-81,-98,-80,]),'DIVIDE':([75,78,88,89,90,91,108,109,112,114,141,143,157,160,174,175,197,202,],[-56,-65,131,-55,-66,-67,-56,-65,-76,-79,-77,-54,-77,-98,-78,-81,-98,-80,]),'PLUS':([75,78,85,88,89,90,91,108,109,112,114,127,129,141,143,154,157,160,174,175,197,202,],[-56,-65,122,-98,-55,-66,-67,-56,-65,-76,-79,-51,-53,-77,-54,-52,-77,-98,-78,-81,-98,-80,]),'MINUS':([75,78,85,88,89,90,91,108,109,112,114,127,129,141,143,154,157,160,174,175,197,202,],[-56,-65,123,-98,-55,-66,-67,-56,-65,-76,-79,-51,-53,-77,-54,-52,-77,-98,-78,-81,-98,-80,]),'SAME':([75,76,78,85,88,89,90,91,108,109,112,114,119,121,127,129,141,143,150,154,157,160,174,175,197,202,],[-56,103,-65,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-77,-54,-49,-52,-77,-98,-78,-81,-98,-80,]),'NOTEQ':([75,76,78,85,88,89,90,91,108,109,112,114,119,121,127,129,141,143,150,154,157,160,174,175,197,202,],[-56,104,-65,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-77,-54,-49,-52,-77,-98,-78,-81,-98,-80,]),'GTHAN':([75,76,78,85,88,89,90,91,108,109,112,114,119,121,127,129,141,143,150,154,157,160,174,175,197,202,],[-56,105,-65,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-77,-54,-49,-52,-77,-98,-78,-81,-98,-80,]),'LTHAN':([75,76,78,85,88,89,90,91,108,109,112,114,119,121,127,129,141,143,150,154,157,160,174,175,197,202,],[-56,106,-65,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-77,-54,-49,-52,-77,-98,-78,-81,-98,-80,]),'TO':([76,85,88,89,90,91,108,109,112,114,119,121,127,129,135,143,150,154,157,160,169,174,175,197,202,],[-46,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-54,-49,-52,-77,-98,183,-78,-81,-98,-80,]),'DO':([76,85,88,89,90,91,108,109,112,114,119,121,127,129,135,143,150,154,157,160,168,174,175,194,197,202,],[-46,-98,-98,-55,-66,-67,-56,-65,-76,-79,-48,-50,-51,-53,-47,-54,-49,-52,-77,-98,182,-78,-81,200,-98,-80,]),'DOT':([78,109,145,],[111,137,137,]),'CTESTRING':([117,165,],[147,179,]),'THEN':([167,],[181,]),'ELSE':([203,],[208,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'definiciones':([0,3,4,5,],[2,12,13,14,]),'var_def':([0,3,4,5,40,43,],[3,3,3,3,51,51,]),'funcion_def':([0,3,4,5,50,],[4,4,4,4,61,]),'clase_def':([0,3,4,5,],[5,5,5,5,]),'empty':([0,3,4,5,22,24,25,40,43,45,49,50,53,56,64,78,85,88,109,110,144,145,146,159,160,177,179,180,192,193,197,203,205,211,],[6,6,6,6,29,33,36,52,52,33,59,62,65,95,65,114,121,129,114,140,163,114,166,140,175,163,166,166,65,65,175,209,65,65,]),'main':([2,],[10,]),'type_compuesto':([7,],[15,]),'type_simple':([7,48,58,],[17,56,97,]),'clase_op':([22,],[27,]),'ids':([24,45,],[31,54,]),'op_vardef':([25,],[34,]),'params':([26,94,],[38,133,]),'bloque_clase':([27,],[39,]),'bloque_func':([30,57,],[42,96,]),'op_var':([40,43,],[50,53,]),'return_option':([49,],[57,]),'op_func':([50,],[60,]),'estatutos':([53,64,192,193,205,211,],[63,100,198,199,210,213,]),'estatuto':([53,64,192,193,205,211,],[64,64,64,64,64,64,]),'asignacion':([53,64,192,193,205,211,],[66,66,66,66,66,66,]),'expr':([53,64,77,79,101,110,113,117,118,124,152,153,159,165,173,183,192,193,195,205,211,],[67,67,107,115,134,139,142,148,149,151,169,170,139,180,186,194,67,67,201,67,67,]),'returns':([53,64,192,193,205,211,],[68,68,68,68,68,68,]),'llamada_void':([53,64,192,193,205,211,],[69,69,69,69,69,69,]),'llamada_objeto':([53,64,192,193,205,211,],[70,70,70,70,70,70,]),'lectura':([53,64,192,193,205,211,],[71,71,71,71,71,71,]),'escritura':([53,64,192,193,205,211,],[72,72,72,72,72,72,]),'decision':([53,64,192,193,205,211,],[73,73,73,73,73,73,]),'repeticion':([53,64,192,193,205,211,],[74,74,74,74,74,74,]),'variable':([53,64,77,79,101,102,110,113,116,117,118,120,124,128,152,153,159,162,165,173,183,192,193,195,205,211,],[75,75,108,108,108,108,108,108,144,108,108,108,108,108,108,108,108,177,108,108,108,75,75,108,75,75,]),'expresion':([53,64,77,79,101,102,110,113,117,118,120,124,152,153,159,165,173,183,192,193,195,205,211,],[76,76,76,76,76,135,76,76,76,76,150,76,76,76,76,76,76,76,76,76,76,76,76,]),'condicional':([53,64,192,193,205,211,],[83,83,83,83,83,83,]),'no_condicional':([53,64,192,193,205,211,],[84,84,84,84,84,84,]),'termino':([53,64,77,79,101,102,110,113,117,118,120,124,152,153,159,165,173,183,192,193,195,205,211,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'factor':([53,64,77,79,101,102,110,113,117,118,120,124,128,152,153,159,165,173,183,192,193,195,205,211,],[88,88,88,88,88,88,88,88,88,88,88,88,154,88,88,88,88,88,88,88,88,88,88,88,]),'var_cte':([53,64,77,79,101,102,110,113,117,118,120,124,128,152,153,159,165,173,183,192,193,195,205,211,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'params_op':([56,],[93,]),'binop':([76,],[102,]),'variable_op':([78,109,145,],[112,112,112,]),'op_expresion':([85,],[119,]),'plus_minus':([85,],[120,]),'type_no_condicional':([87,],[125,]),'op_factor':([88,],[127,]),'mulop':([88,],[128,]),'param_llamada':([110,159,],[138,172,]),'type_escritura':([117,],[146,]),'op_lectura':([144,177,],[161,188,]),'op_escritura':([146,179,180,],[164,190,191,]),'matrix':([160,197,],[174,202,]),'op_decision':([203,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> definiciones main','programa',2,'p_programa','lexer.py',102),
  ('definiciones -> var_def definiciones','definiciones',2,'p_definiciones','lexer.py',105),
  ('definiciones -> funcion_def definiciones','definiciones',2,'p_definiciones','lexer.py',106),
  ('definiciones -> clase_def definiciones','definiciones',2,'p_definiciones','lexer.py',107),
  ('definiciones -> empty','definiciones',1,'p_definiciones','lexer.py',108),
  ('clase_def -> CLASS ID clase_op bloque_clase','clase_def',4,'p_clase_def','lexer.py',111),
  ('clase_op -> INHERIT ID','clase_op',2,'p_clase_op','lexer.py',114),
  ('clase_op -> empty','clase_op',1,'p_clase_op','lexer.py',115),
  ('bloque_clase -> LBRACE op_var op_func RBRACE','bloque_clase',4,'p_bloque_clase','lexer.py',118),
  ('op_func -> funcion_def','op_func',1,'p_op_func','lexer.py',122),
  ('op_func -> empty','op_func',1,'p_op_func','lexer.py',123),
  ('funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func','funcion_def',7,'p_funcion_def','lexer.py',126),
  ('op_var -> var_def','op_var',1,'p_op_var','lexer.py',129),
  ('op_var -> empty','op_var',1,'p_op_var','lexer.py',130),
  ('return_option -> RET type_simple','return_option',2,'p_return_option','lexer.py',133),
  ('return_option -> empty','return_option',1,'p_return_option','lexer.py',134),
  ('params -> ID COLON type_simple params_op','params',4,'p_params','lexer.py',138),
  ('params_op -> COMMA params','params_op',2,'p_params_op','lexer.py',141),
  ('params_op -> empty','params_op',1,'p_params_op','lexer.py',142),
  ('bloque_func -> LBRACE op_var estatutos RBRACE','bloque_func',4,'p_bloque_func','lexer.py',145),
  ('main -> MAIN LPAREN RPAREN bloque_func','main',4,'p_main','lexer.py',148),
  ('var_def -> VAR type_compuesto ID ids SEMICOLON','var_def',5,'p_var_def','lexer.py',151),
  ('var_def -> VAR type_simple ID op_vardef SEMICOLON','var_def',5,'p_var_def','lexer.py',152),
  ('ids -> COMMA ID ids','ids',3,'p_ids','lexer.py',155),
  ('ids -> empty','ids',1,'p_ids','lexer.py',156),
  ('op_vardef -> LBRACKET CTEI RBRACKET','op_vardef',3,'p_op_vardef','lexer.py',160),
  ('op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','op_vardef',6,'p_op_vardef','lexer.py',161),
  ('op_vardef -> empty','op_vardef',1,'p_op_vardef','lexer.py',162),
  ('type_simple -> INT','type_simple',1,'p_type_simple','lexer.py',166),
  ('type_simple -> FLOAT','type_simple',1,'p_type_simple','lexer.py',167),
  ('type_simple -> STRING','type_simple',1,'p_type_simple','lexer.py',168),
  ('type_compuesto -> ID','type_compuesto',1,'p_type_compuesto','lexer.py',171),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','lexer.py',174),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','lexer.py',175),
  ('estatutos -> empty','estatutos',1,'p_estatutos','lexer.py',176),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lexer.py',180),
  ('estatuto -> expr','estatuto',1,'p_estatuto','lexer.py',181),
  ('estatuto -> returns','estatuto',1,'p_estatuto','lexer.py',182),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','lexer.py',183),
  ('estatuto -> llamada_objeto','estatuto',1,'p_estatuto','lexer.py',184),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','lexer.py',185),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lexer.py',186),
  ('estatuto -> decision','estatuto',1,'p_estatuto','lexer.py',187),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','lexer.py',188),
  ('asignacion -> variable EQUAL expr SEMICOLON','asignacion',4,'p_asignacion','lexer.py',193),
  ('expr -> expresion','expr',1,'p_expr','lexer.py',197),
  ('expr -> expresion binop expresion','expr',3,'p_expr','lexer.py',198),
  ('expresion -> termino op_expresion','expresion',2,'p_expresion','lexer.py',202),
  ('op_expresion -> plus_minus expresion','op_expresion',2,'p_op_expresion','lexer.py',205),
  ('op_expresion -> empty','op_expresion',1,'p_op_expresion','lexer.py',206),
  ('termino -> factor op_factor','termino',2,'p_termino','lexer.py',209),
  ('op_factor -> mulop factor','op_factor',2,'p_op_factor','lexer.py',212),
  ('op_factor -> empty','op_factor',1,'p_op_factor','lexer.py',213),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','lexer.py',216),
  ('factor -> var_cte','factor',1,'p_factor','lexer.py',217),
  ('factor -> variable','factor',1,'p_factor','lexer.py',218),
  ('binop -> SAME','binop',1,'p_binop','lexer.py',221),
  ('binop -> NOTEQ','binop',1,'p_binop','lexer.py',222),
  ('binop -> GTHAN','binop',1,'p_binop','lexer.py',223),
  ('binop -> LTHAN','binop',1,'p_binop','lexer.py',224),
  ('mulop -> TIMES','mulop',1,'p_mulop','lexer.py',227),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','lexer.py',228),
  ('plus_minus -> PLUS','plus_minus',1,'p_plus_minus','lexer.py',231),
  ('plus_minus -> MINUS','plus_minus',1,'p_plus_minus','lexer.py',232),
  ('var_cte -> ID','var_cte',1,'p_var_cte','lexer.py',235),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte','lexer.py',236),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte','lexer.py',237),
  ('returns -> RETURN expr SEMICOLON','returns',3,'p_returns','lexer.py',240),
  ('llamada_void -> ID LPAREN param_llamada RPAREN SEMICOLON','llamada_void',5,'p_llamada_void','lexer.py',243),
  ('param_llamada -> expr','param_llamada',1,'p_param_llamada','lexer.py',246),
  ('param_llamada -> empty','param_llamada',1,'p_param_llamada','lexer.py',247),
  ('llamada_objeto -> ID DOT ID LPAREN param_llamada RPAREN SEMICOLON','llamada_objeto',7,'p_llamada_objeto','lexer.py',250),
  ('lectura -> READ LPAREN variable op_lectura RPAREN SEMICOLON','lectura',6,'p_lectura','lexer.py',253),
  ('op_lectura -> COMMA variable op_lectura','op_lectura',3,'p_op_lectura','lexer.py',256),
  ('op_lectura -> empty','op_lectura',1,'p_op_lectura','lexer.py',257),
  ('variable -> ID variable_op','variable',2,'p_variable','lexer.py',260),
  ('variable_op -> DOT ID','variable_op',2,'p_variable_op','lexer.py',264),
  ('variable_op -> LBRACKET expr RBRACKET matrix','variable_op',4,'p_variable_op','lexer.py',265),
  ('variable_op -> empty','variable_op',1,'p_variable_op','lexer.py',266),
  ('matrix -> LBRACKET expr RBRACKET matrix','matrix',4,'p_matrix','lexer.py',270),
  ('matrix -> empty','matrix',1,'p_matrix','lexer.py',271),
  ('escritura -> WRITE LPAREN type_escritura op_escritura RPAREN SEMICOLON','escritura',6,'p_escritura','lexer.py',274),
  ('type_escritura -> CTESTRING','type_escritura',1,'p_type_escritura','lexer.py',277),
  ('type_escritura -> expr','type_escritura',1,'p_type_escritura','lexer.py',278),
  ('op_escritura -> COMMA CTESTRING op_escritura','op_escritura',3,'p_op_escritura','lexer.py',281),
  ('op_escritura -> COMMA expr op_escritura','op_escritura',3,'p_op_escritura','lexer.py',282),
  ('op_escritura -> empty','op_escritura',1,'p_op_escritura','lexer.py',283),
  ('decision -> IF LPAREN expr RPAREN THEN LBRACE estatutos RBRACE op_decision','decision',9,'p_decision','lexer.py',286),
  ('op_decision -> ELSE LBRACE estatutos RBRACE','op_decision',4,'p_op_decision','lexer.py',289),
  ('op_decision -> empty','op_decision',1,'p_op_decision','lexer.py',290),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',293),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',294),
  ('condicional -> WHILE LPAREN expr RPAREN DO LBRACE estatutos RBRACE','condicional',8,'p_condicional','lexer.py',297),
  ('no_condicional -> FROM type_no_condicional EQUAL expr TO expr DO LBRACE estatutos RBRACE','no_condicional',10,'p_no_condicional','lexer.py',300),
  ('type_no_condicional -> ID','type_no_condicional',1,'p_type_no_condicional','lexer.py',303),
  ('type_no_condicional -> ID LBRACKET expr RBRACKET','type_no_condicional',4,'p_type_no_condicional','lexer.py',304),
  ('type_no_condicional -> ID LBRACKET expr RBRACKET LBRACKET expr RBRACKET','type_no_condicional',7,'p_type_no_condicional','lexer.py',305),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',308),
]
