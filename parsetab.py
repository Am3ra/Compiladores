
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEBOOL CLASS COLON COMMA CTEF CTEI CTESTRING DIVIDE DO DOT ELSE EQUAL FALSE FLOAT FROM FUNC GTHAN ID IF INHERIT INT LBRACE LBRACKET LPAREN LTHAN MAIN MINUS NOTEQ PLUS RBRACE RBRACKET READ RET RETURN RPAREN SAME SEMICOLON STRING TIMES TO TRUE VAR WHILE WRITEprograma : declaraciones main declaraciones : empty declaraciones : var_def SEMICOLON declaraciones declaraciones : funcion_def declaraciones declaraciones : clase_def declaraciones clase_def : CLASS ID clase_op bloque_clase clase_op : INHERIT ID \n\t\t\t\t | empty  bloque_clase : LBRACE op_var op_func RBRACE op_func : funcion_def op_func\n\t\t\t\t| empty funcion_def : FUNC ID LPAREN params RPAREN return_option bloque_func op_var : var_def SEMICOLON op_var\n\t\t\t   | empty return_option : RET type_simple\n\t\t\t\t\t  | empty  params : var_def params_op\n\t\t\t\t| empty params_op : COMMA var_def params_op\n\t\t\t\t\t| empty  bloque_func : LBRACE estatutos RBRACE main : MAIN LPAREN RPAREN bloque_func main : MAIN LPAREN RPAREN error var_def :  type_compuesto    ID           \n\t\t\t\t|  type_simple       ID op_vardef    op_vardef : LBRACKET CTEI RBRACKET \n\t\t\t\t\t| LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET \n\t\t\t\t\t| empty type_simple : INT\n\t\t\t\t\t| FLOAT\n\t\t\t\t\t| STRING \n\t\t\t\t\t| BOOL type_compuesto : ID  estatutos : estatuto\n\t\t\t\t| estatuto estatutos\n\t\t\t\t| empty  estatuto : asignacion SEMICOLON\n\t\t\t\t| expresion SEMICOLON\n\t\t\t\t| returns SEMICOLON\n\t\t\t\t| llamada_funcion SEMICOLON\n\t\t\t\t| llamada_metodo SEMICOLON\n\t\t\t\t| var_def SEMICOLON\n\t\t\t\t| lectura SEMICOLON\n\t\t\t\t| escritura SEMICOLON\n\t\t\t\t| decision SEMICOLON\n\t\t\t\t| repeticion SEMICOLON\n\t\t\t\t| bloque_func SEMICOLON asignacion : variable EQUAL expresion  expresion : expresion binop expresion\n\t\t\t\t\t| plus_minus expresion\n\t\t\t\t\t| LPAREN expresion RPAREN\n\t\t\t\t\t| var_cte  binop : SAME\n\t\t\t| NOTEQ\n\t\t\t| GTHAN \n\t\t\t| LTHAN \n\t\t\t| PLUS\n\t\t\t| MINUS\n\t\t\t| TIMES\n\t\t\t| DIVIDE plus_minus : PLUS\n\t\t\t\t\t| MINUS  var_cte : variable var_cte : boolean  var_cte : CTEF  var_cte : CTEI  var_cte : CTESTRING boolean : TRUE\n\t\t\t\t| FALSE  returns : RETURN expresion  llamada_funcion : ID LPAREN param_llamada RPAREN  param_llamada : expresion\n\t\t\t\t\t| expresion COMMA param_llamada\n\t\t\t\t\t| empty  llamada_metodo : ID DOT ID LPAREN param_llamada RPAREN   lectura : READ LPAREN variable op_lectura RPAREN  op_lectura : COMMA variable op_lectura \n\t\t\t\t\t| empty  variable : ID variable_op  variable_op : DOT ID \n\t\t\t\t\t| LBRACKET expresion RBRACKET \n\t\t\t\t\t| LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET\n\t\t\t\t\t| empty\n\t\t\t\t\t\t\t\t\t escritura : WRITE LPAREN expresion op_escritura RPAREN  op_escritura : COMMA expresion op_escritura\n\t\t\t\t\t| empty  decision : IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision  op_decision : ELSE LBRACE estatutos RBRACE \n\t\t\t\t\t\t\t\t\t| empty  repeticion : condicional \n\t\t\t\t\t| no_condicional  condicional : WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE  no_condicional : FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE  empty : '
    
_lr_action_items = {'MAIN':([0,2,3,5,6,18,19,20,26,39,97,136,139,],[-94,17,-2,-94,-94,-94,-4,-5,-3,-6,-21,-12,-9,]),'FUNC':([0,5,6,18,39,40,50,52,94,96,97,136,139,141,],[10,10,10,10,-6,-94,10,-14,10,-94,-21,-12,-9,-13,]),'CLASS':([0,5,6,18,39,97,136,139,],[11,11,11,11,-6,-21,-12,-9,]),'ID':([0,5,6,7,8,9,10,11,12,13,14,15,18,30,32,39,40,44,48,54,68,69,71,72,78,79,85,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,126,128,130,131,132,133,136,139,144,155,159,160,163,166,173,178,180,186,196,197,],[8,8,8,21,-33,22,23,24,-29,-30,-31,-32,8,8,41,-6,8,72,8,72,122,122,122,-33,-61,-62,122,8,-21,-37,-38,122,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,122,122,149,122,122,122,122,122,-12,-9,157,122,122,122,122,122,122,72,122,72,72,72,]),'INT':([0,5,6,18,30,39,40,44,48,54,90,96,97,99,100,110,111,112,113,114,115,116,117,118,136,139,178,186,196,197,],[12,12,12,12,12,-6,12,12,12,12,12,12,-21,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-12,-9,12,12,12,12,]),'FLOAT':([0,5,6,18,30,39,40,44,48,54,90,96,97,99,100,110,111,112,113,114,115,116,117,118,136,139,178,186,196,197,],[13,13,13,13,13,-6,13,13,13,13,13,13,-21,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-12,-9,13,13,13,13,]),'STRING':([0,5,6,18,30,39,40,44,48,54,90,96,97,99,100,110,111,112,113,114,115,116,117,118,136,139,178,186,196,197,],[14,14,14,14,14,-6,14,14,14,14,14,14,-21,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-12,-9,14,14,14,14,]),'BOOL':([0,5,6,18,30,39,40,44,48,54,90,96,97,99,100,110,111,112,113,114,115,116,117,118,136,139,178,186,196,197,],[15,15,15,15,15,-6,15,15,15,15,15,15,-21,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-12,-9,15,15,15,15,]),'$end':([1,16,42,43,97,],[0,-1,-22,-23,-21,]),'SEMICOLON':([4,21,22,27,29,45,51,56,57,58,59,60,61,62,63,64,65,66,67,70,72,76,77,80,81,82,83,86,87,97,120,121,122,124,127,129,142,143,145,149,156,157,158,161,174,176,181,188,189,192,194,195,200,201,],[18,-24,-94,-25,-28,-26,96,99,100,110,111,112,113,114,115,116,117,118,-63,-52,-94,-90,-91,-64,-65,-66,-67,-68,-69,-21,-50,-63,-94,-70,-79,-83,-49,-48,-51,-80,-27,-80,-71,-81,-76,-84,-75,-82,-94,-87,-89,-92,-93,-88,]),'LBRACE':([12,13,14,15,24,31,33,34,41,44,46,54,89,91,99,100,110,111,112,113,114,115,116,117,118,137,168,178,179,186,191,193,196,197,],[-29,-30,-31,-32,-94,40,-8,44,-7,44,-94,44,44,-16,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-15,178,44,186,44,196,197,44,44,]),'LPAREN':([17,23,44,54,68,69,71,72,73,74,75,78,79,84,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,149,155,159,160,166,173,178,180,186,196,197,],[25,30,69,69,69,69,69,125,130,131,132,-61,-62,133,-37,-38,69,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,69,69,69,69,69,69,160,69,69,69,69,69,69,69,69,69,69,]),'COMMA':([21,22,27,29,37,45,70,80,81,82,83,86,87,92,120,121,122,127,129,142,145,147,151,152,156,157,161,175,177,188,],[-24,-94,-25,-28,48,-26,-52,-64,-65,-66,-67,-68,-69,48,-50,-63,-94,-79,-83,-49,-51,159,163,166,-27,-80,-81,163,166,-82,]),'RPAREN':([21,22,25,27,29,30,36,37,38,45,47,49,70,80,81,82,83,86,87,92,120,121,122,123,125,127,129,138,142,145,146,147,148,151,152,153,154,156,157,159,160,161,162,164,165,167,171,172,175,177,183,184,188,],[-24,-94,34,-25,-28,-94,46,-94,-18,-26,-17,-20,-52,-64,-65,-66,-67,-68,-69,-94,-50,-63,-94,145,-94,-79,-83,-19,-49,-51,158,-72,-74,-94,-94,168,169,-27,-80,-94,-94,-81,174,-78,176,-86,-73,181,-94,-94,-77,-85,-82,]),'LBRACKET':([22,45,72,122,161,],[28,88,128,128,173,]),'INHERIT':([24,],[32,]),'CTEI':([28,44,54,68,69,71,78,79,88,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[35,82,82,82,82,82,-61,-62,135,-37,-38,82,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'error':([34,],[43,]),'RBRACKET':([35,70,80,81,82,83,86,87,120,121,122,127,129,135,142,145,150,157,161,182,188,],[45,-52,-64,-65,-66,-67,-68,-69,-50,-63,-94,-79,-83,156,-49,-51,161,-80,-81,188,-82,]),'RBRACE':([40,44,50,52,53,54,55,93,94,95,96,97,98,99,100,110,111,112,113,114,115,116,117,118,136,140,141,178,185,186,190,196,197,198,199,],[-94,-94,-94,-14,97,-34,-36,139,-94,-11,-94,-21,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-12,-10,-13,-94,189,-94,195,-94,-94,200,201,]),'RETURN':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[71,71,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,71,71,71,71,]),'READ':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[73,73,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,73,73,73,73,]),'WRITE':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[74,74,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,74,74,74,74,]),'IF':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[75,75,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,75,75,75,75,]),'PLUS':([44,54,57,67,68,69,70,71,72,78,79,80,81,82,83,86,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,132,133,142,143,145,147,149,150,152,153,154,155,157,159,160,161,166,170,173,177,178,180,182,186,187,188,196,197,],[78,78,106,-63,78,78,-52,78,-94,-61,-62,-64,-65,-66,-67,-68,-69,-37,-38,78,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,78,106,-63,-94,106,106,78,-79,78,-83,78,78,78,106,106,-51,106,-80,106,106,106,106,78,-80,78,78,-81,78,106,78,106,78,78,106,78,106,-82,78,78,]),'MINUS':([44,54,57,67,68,69,70,71,72,78,79,80,81,82,83,86,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,132,133,142,143,145,147,149,150,152,153,154,155,157,159,160,161,166,170,173,177,178,180,182,186,187,188,196,197,],[79,79,107,-63,79,79,-52,79,-94,-61,-62,-64,-65,-66,-67,-68,-69,-37,-38,79,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,79,107,-63,-94,107,107,79,-79,79,-83,79,79,79,107,107,-51,107,-80,107,107,107,107,79,-80,79,79,-81,79,107,79,107,79,79,107,79,107,-82,79,79,]),'CTEF':([44,54,68,69,71,78,79,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[81,81,81,81,81,-61,-62,-37,-38,81,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'CTESTRING':([44,54,68,69,71,78,79,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[83,83,83,83,83,-61,-62,-37,-38,83,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'WHILE':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[84,84,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,84,84,84,84,]),'FROM':([44,54,99,100,110,111,112,113,114,115,116,117,118,178,186,196,197,],[85,85,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,85,85,85,85,]),'TRUE':([44,54,68,69,71,78,79,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[86,86,86,86,86,-61,-62,-37,-38,86,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'FALSE':([44,54,68,69,71,78,79,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[87,87,87,87,87,-61,-62,-37,-38,87,-53,-54,-55,-56,-57,-58,-59,-60,-39,-40,-41,-42,-43,-44,-45,-46,-47,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'RET':([46,],[90,]),'SAME':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[102,-63,-52,-94,-64,-65,-66,-67,-68,-69,102,-63,-94,102,102,-79,-83,102,102,-51,102,-80,102,102,102,102,-80,-81,102,102,102,102,-82,]),'NOTEQ':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[103,-63,-52,-94,-64,-65,-66,-67,-68,-69,103,-63,-94,103,103,-79,-83,103,103,-51,103,-80,103,103,103,103,-80,-81,103,103,103,103,-82,]),'GTHAN':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[104,-63,-52,-94,-64,-65,-66,-67,-68,-69,104,-63,-94,104,104,-79,-83,104,104,-51,104,-80,104,104,104,104,-80,-81,104,104,104,104,-82,]),'LTHAN':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[105,-63,-52,-94,-64,-65,-66,-67,-68,-69,105,-63,-94,105,105,-79,-83,105,105,-51,105,-80,105,105,105,105,-80,-81,105,105,105,105,-82,]),'TIMES':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[108,-63,-52,-94,-64,-65,-66,-67,-68,-69,108,-63,-94,108,108,-79,-83,108,108,-51,108,-80,108,108,108,108,-80,-81,108,108,108,108,-82,]),'DIVIDE':([57,67,70,72,80,81,82,83,86,87,120,121,122,123,124,127,129,142,143,145,147,149,150,152,153,154,157,161,170,177,182,187,188,],[109,-63,-52,-94,-64,-65,-66,-67,-68,-69,109,-63,-94,109,109,-79,-83,109,109,-51,109,-80,109,109,109,109,-80,-81,109,109,109,109,-82,]),'EQUAL':([67,72,122,127,129,134,149,157,161,188,],[119,-94,-94,-79,-83,155,-80,-80,-81,-82,]),'TO':([70,80,81,82,83,86,87,120,121,122,127,129,142,145,157,161,170,188,],[-52,-64,-65,-66,-67,-68,-69,-50,-63,-94,-79,-83,-49,-51,-80,-81,180,-82,]),'DO':([70,80,81,82,83,86,87,120,121,122,127,129,142,145,157,161,169,187,188,],[-52,-64,-65,-66,-67,-68,-69,-50,-63,-94,-79,-83,-49,-51,-80,-81,179,191,-82,]),'DOT':([72,122,],[126,144,]),'ELSE':([189,],[193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,5,6,18,],[2,19,20,26,]),'empty':([0,5,6,18,22,24,30,37,40,44,46,50,54,72,92,94,96,122,125,151,152,159,160,175,177,178,186,189,196,197,],[3,3,3,3,29,33,38,49,52,55,91,95,55,129,49,95,52,129,148,164,167,148,148,164,167,55,55,194,55,55,]),'var_def':([0,5,6,18,30,40,44,48,54,96,178,186,196,197,],[4,4,4,4,37,51,61,92,61,51,61,61,61,61,]),'funcion_def':([0,5,6,18,50,94,],[5,5,5,5,94,94,]),'clase_def':([0,5,6,18,],[6,6,6,6,]),'type_compuesto':([0,5,6,18,30,40,44,48,54,96,178,186,196,197,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_simple':([0,5,6,18,30,40,44,48,54,90,96,178,186,196,197,],[9,9,9,9,9,9,9,9,9,137,9,9,9,9,9,]),'main':([2,],[16,]),'op_vardef':([22,],[27,]),'clase_op':([24,],[31,]),'params':([30,],[36,]),'bloque_clase':([31,],[39,]),'bloque_func':([34,44,54,89,178,186,196,197,],[42,66,66,136,66,66,66,66,]),'params_op':([37,92,],[47,138,]),'op_var':([40,96,],[50,141,]),'estatutos':([44,54,178,186,196,197,],[53,98,185,190,198,199,]),'estatuto':([44,54,178,186,196,197,],[54,54,54,54,54,54,]),'asignacion':([44,54,178,186,196,197,],[56,56,56,56,56,56,]),'expresion':([44,54,68,69,71,101,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[57,57,120,123,124,142,143,147,150,152,153,154,170,147,147,177,182,57,187,57,57,57,]),'returns':([44,54,178,186,196,197,],[58,58,58,58,58,58,]),'llamada_funcion':([44,54,178,186,196,197,],[59,59,59,59,59,59,]),'llamada_metodo':([44,54,178,186,196,197,],[60,60,60,60,60,60,]),'lectura':([44,54,178,186,196,197,],[62,62,62,62,62,62,]),'escritura':([44,54,178,186,196,197,],[63,63,63,63,63,63,]),'decision':([44,54,178,186,196,197,],[64,64,64,64,64,64,]),'repeticion':([44,54,178,186,196,197,],[65,65,65,65,65,65,]),'variable':([44,54,68,69,71,85,101,119,125,128,130,131,132,133,155,159,160,163,166,173,178,180,186,196,197,],[67,67,121,121,121,134,121,121,121,121,151,121,121,121,121,121,121,175,121,121,67,121,67,67,67,]),'plus_minus':([44,54,68,69,71,101,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'var_cte':([44,54,68,69,71,101,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'condicional':([44,54,178,186,196,197,],[76,76,76,76,76,76,]),'no_condicional':([44,54,178,186,196,197,],[77,77,77,77,77,77,]),'boolean':([44,54,68,69,71,101,119,125,128,131,132,133,155,159,160,166,173,178,180,186,196,197,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'return_option':([46,],[89,]),'op_func':([50,94,],[93,140,]),'binop':([57,120,123,124,142,143,147,150,152,153,154,170,177,182,187,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'variable_op':([72,122,],[127,127,]),'param_llamada':([125,159,160,],[146,171,172,]),'op_lectura':([151,175,],[162,183,]),'op_escritura':([152,177,],[165,184,]),'op_decision':([189,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones main','programa',2,'p_programa','parser.py',854),
  ('declaraciones -> empty','declaraciones',1,'p_declaraciones','parser.py',859),
  ('declaraciones -> var_def SEMICOLON declaraciones','declaraciones',3,'p_declaraciones_variables','parser.py',864),
  ('declaraciones -> funcion_def declaraciones','declaraciones',2,'p_declaraciones_funciones','parser.py',869),
  ('declaraciones -> clase_def declaraciones','declaraciones',2,'p_declaraciones_clases','parser.py',874),
  ('clase_def -> CLASS ID clase_op bloque_clase','clase_def',4,'p_clase_def','parser.py',879),
  ('clase_op -> INHERIT ID','clase_op',2,'p_clase_op','parser.py',885),
  ('clase_op -> empty','clase_op',1,'p_clase_op','parser.py',886),
  ('bloque_clase -> LBRACE op_var op_func RBRACE','bloque_clase',4,'p_bloque_clase','parser.py',894),
  ('op_func -> funcion_def op_func','op_func',2,'p_op_func','parser.py',908),
  ('op_func -> empty','op_func',1,'p_op_func','parser.py',909),
  ('funcion_def -> FUNC ID LPAREN params RPAREN return_option bloque_func','funcion_def',7,'p_funcion_def','parser.py',917),
  ('op_var -> var_def SEMICOLON op_var','op_var',3,'p_op_var','parser.py',923),
  ('op_var -> empty','op_var',1,'p_op_var','parser.py',924),
  ('return_option -> RET type_simple','return_option',2,'p_return_option','parser.py',933),
  ('return_option -> empty','return_option',1,'p_return_option','parser.py',934),
  ('params -> var_def params_op','params',2,'p_params','parser.py',949),
  ('params -> empty','params',1,'p_params','parser.py',950),
  ('params_op -> COMMA var_def params_op','params_op',3,'p_params_op','parser.py',958),
  ('params_op -> empty','params_op',1,'p_params_op','parser.py',959),
  ('bloque_func -> LBRACE estatutos RBRACE','bloque_func',3,'p_bloque_func','parser.py',968),
  ('main -> MAIN LPAREN RPAREN bloque_func','main',4,'p_main','parser.py',973),
  ('main -> MAIN LPAREN RPAREN error','main',4,'p_main_error','parser.py',978),
  ('var_def -> type_compuesto ID','var_def',2,'p_var_def','parser.py',996),
  ('var_def -> type_simple ID op_vardef','var_def',3,'p_var_def','parser.py',997),
  ('op_vardef -> LBRACKET CTEI RBRACKET','op_vardef',3,'p_op_vardef','parser.py',1007),
  ('op_vardef -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','op_vardef',6,'p_op_vardef','parser.py',1008),
  ('op_vardef -> empty','op_vardef',1,'p_op_vardef','parser.py',1009),
  ('type_simple -> INT','type_simple',1,'p_type_simple','parser.py',1019),
  ('type_simple -> FLOAT','type_simple',1,'p_type_simple','parser.py',1020),
  ('type_simple -> STRING','type_simple',1,'p_type_simple','parser.py',1021),
  ('type_simple -> BOOL','type_simple',1,'p_type_simple','parser.py',1022),
  ('type_compuesto -> ID','type_compuesto',1,'p_type_compuesto','parser.py',1041),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','parser.py',1046),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','parser.py',1047),
  ('estatutos -> empty','estatutos',1,'p_estatutos','parser.py',1048),
  ('estatuto -> asignacion SEMICOLON','estatuto',2,'p_estatuto','parser.py',1065),
  ('estatuto -> expresion SEMICOLON','estatuto',2,'p_estatuto','parser.py',1066),
  ('estatuto -> returns SEMICOLON','estatuto',2,'p_estatuto','parser.py',1067),
  ('estatuto -> llamada_funcion SEMICOLON','estatuto',2,'p_estatuto','parser.py',1068),
  ('estatuto -> llamada_metodo SEMICOLON','estatuto',2,'p_estatuto','parser.py',1069),
  ('estatuto -> var_def SEMICOLON','estatuto',2,'p_estatuto','parser.py',1070),
  ('estatuto -> lectura SEMICOLON','estatuto',2,'p_estatuto','parser.py',1071),
  ('estatuto -> escritura SEMICOLON','estatuto',2,'p_estatuto','parser.py',1072),
  ('estatuto -> decision SEMICOLON','estatuto',2,'p_estatuto','parser.py',1073),
  ('estatuto -> repeticion SEMICOLON','estatuto',2,'p_estatuto','parser.py',1074),
  ('estatuto -> bloque_func SEMICOLON','estatuto',2,'p_estatuto','parser.py',1075),
  ('asignacion -> variable EQUAL expresion','asignacion',3,'p_asignacion','parser.py',1093),
  ('expresion -> expresion binop expresion','expresion',3,'p_expresion','parser.py',1130),
  ('expresion -> plus_minus expresion','expresion',2,'p_expresion','parser.py',1131),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion','parser.py',1132),
  ('expresion -> var_cte','expresion',1,'p_expresion','parser.py',1133),
  ('binop -> SAME','binop',1,'p_binop','parser.py',1146),
  ('binop -> NOTEQ','binop',1,'p_binop','parser.py',1147),
  ('binop -> GTHAN','binop',1,'p_binop','parser.py',1148),
  ('binop -> LTHAN','binop',1,'p_binop','parser.py',1149),
  ('binop -> PLUS','binop',1,'p_binop','parser.py',1150),
  ('binop -> MINUS','binop',1,'p_binop','parser.py',1151),
  ('binop -> TIMES','binop',1,'p_binop','parser.py',1152),
  ('binop -> DIVIDE','binop',1,'p_binop','parser.py',1153),
  ('plus_minus -> PLUS','plus_minus',1,'p_plus_minus','parser.py',1173),
  ('plus_minus -> MINUS','plus_minus',1,'p_plus_minus','parser.py',1174),
  ('var_cte -> variable','var_cte',1,'p_var_cte_var','parser.py',1179),
  ('var_cte -> boolean','var_cte',1,'p_var_cte_bool','parser.py',1184),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte_f','parser.py',1190),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte_i','parser.py',1195),
  ('var_cte -> CTESTRING','var_cte',1,'p_var_cte_string','parser.py',1199),
  ('boolean -> TRUE','boolean',1,'p_bool','parser.py',1204),
  ('boolean -> FALSE','boolean',1,'p_bool','parser.py',1205),
  ('returns -> RETURN expresion','returns',2,'p_returns','parser.py',1209),
  ('llamada_funcion -> ID LPAREN param_llamada RPAREN','llamada_funcion',4,'p_llamada_funcion','parser.py',1216),
  ('param_llamada -> expresion','param_llamada',1,'p_param_llamada','parser.py',1230),
  ('param_llamada -> expresion COMMA param_llamada','param_llamada',3,'p_param_llamada','parser.py',1231),
  ('param_llamada -> empty','param_llamada',1,'p_param_llamada','parser.py',1232),
  ('llamada_metodo -> ID DOT ID LPAREN param_llamada RPAREN','llamada_metodo',6,'p_llamada_metodo','parser.py',1243),
  ('lectura -> READ LPAREN variable op_lectura RPAREN','lectura',5,'p_lectura','parser.py',1249),
  ('op_lectura -> COMMA variable op_lectura','op_lectura',3,'p_op_lectura','parser.py',1254),
  ('op_lectura -> empty','op_lectura',1,'p_op_lectura','parser.py',1255),
  ('variable -> ID variable_op','variable',2,'p_variable','parser.py',1265),
  ('variable_op -> DOT ID','variable_op',2,'p_variable_op','parser.py',1270),
  ('variable_op -> LBRACKET expresion RBRACKET','variable_op',3,'p_variable_op','parser.py',1271),
  ('variable_op -> LBRACKET expresion RBRACKET LBRACKET expresion RBRACKET','variable_op',6,'p_variable_op','parser.py',1272),
  ('variable_op -> empty','variable_op',1,'p_variable_op','parser.py',1273),
  ('escritura -> WRITE LPAREN expresion op_escritura RPAREN','escritura',5,'p_escritura','parser.py',1300),
  ('op_escritura -> COMMA expresion op_escritura','op_escritura',3,'p_op_escritura','parser.py',1305),
  ('op_escritura -> empty','op_escritura',1,'p_op_escritura','parser.py',1306),
  ('decision -> IF LPAREN expresion RPAREN LBRACE estatutos RBRACE op_decision','decision',8,'p_decision','parser.py',1314),
  ('op_decision -> ELSE LBRACE estatutos RBRACE','op_decision',4,'p_op_decision','parser.py',1319),
  ('op_decision -> empty','op_decision',1,'p_op_decision','parser.py',1320),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',1328),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','parser.py',1329),
  ('condicional -> WHILE LPAREN expresion RPAREN DO LBRACE estatutos RBRACE','condicional',8,'p_condicional','parser.py',1334),
  ('no_condicional -> FROM variable EQUAL expresion TO expresion DO LBRACE estatutos RBRACE','no_condicional',10,'p_no_condicional','parser.py',1339),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1354),
]
