
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COLON COMMA CTEF CTEI CTESTRING DIVIDE ELSE FLOAT GT ID IF INT LBRACKET LPAREN LT MINUS NE PLUS PRINT PROGRAM RBRACKET RPAREN SCOLON TIMES VARprograma : PROGRAM ID SCOLON vars bloque \n                | PROGRAM ID SCOLON bloquevars : VAR declaraciondeclaracion : nombre COLON tipo SCOLON \n                   | nombre COLON tipo SCOLON declaraciontipo : INT \n            | FLOATbloque : LBRACKET estatutos RBRACKETestatutos : estatuto \n                | estatuto estatutos\n    estatuto : asignacion \n                   | condicion \n                   | escrituraasignacion : ID ASSIGN expresion SCOLONescritura : PRINT LPAREN contenido RPAREN SCOLONcontenido : CTESTRING \n                | expresion\n                | CTESTRING COMMA contenido\n                | expresion COMMA contenido expresion : exp relop exp\n                | expnombre : ID \n                | ID COMMA nombrecondicion : IF LPAREN expresion RPAREN bloque SCOLON\n                    | IF LPAREN expresion RPAREN bloque ELSE bloque SCOLON relop : LT \n                | GT\n                | NE  exp : termino\n            | termino addop exp addop : PLUS \n                | MINUS  termino : factor\n                | factor mulop termino mulop : TIMES\n                | DIVIDE  factor : LPAREN expresion RPAREN\n                | addop varcte varcte : ID\n                | CTEF\n                | CTEI '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,9,23,],[0,-2,-1,-8,]),'ID':([2,7,8,14,15,16,17,22,35,38,39,44,45,69,72,75,],[3,12,18,18,-11,-12,-13,12,52,-31,-32,12,-14,-15,-24,-25,]),'SCOLON':([3,23,28,29,30,32,33,34,36,51,52,53,54,60,64,65,66,67,68,74,],[4,-8,44,-6,-7,45,-21,-29,-33,-38,-39,-40,-41,69,-20,-30,-34,-37,72,75,]),'VAR':([4,],[7,]),'LBRACKET':([4,5,10,44,59,63,73,],[8,8,-3,-4,8,-5,8,]),'IF':([8,14,15,16,17,45,69,72,75,],[19,19,-11,-12,-13,-14,-15,-24,-25,]),'PRINT':([8,14,15,16,17,45,69,72,75,],[20,20,-11,-12,-13,-14,-15,-24,-25,]),'COLON':([11,12,31,],[21,-22,-23,]),'COMMA':([12,33,34,36,42,43,51,52,53,54,64,65,66,67,],[22,-21,-29,-33,61,62,-38,-39,-40,-41,-20,-30,-34,-37,]),'RBRACKET':([13,14,15,16,17,24,45,69,72,75,],[23,-9,-11,-12,-13,-10,-14,-15,-24,-25,]),'ASSIGN':([18,],[25,]),'LPAREN':([19,20,25,26,27,37,38,39,46,47,48,49,50,55,56,57,61,62,],[26,27,37,37,37,37,-31,-32,37,-26,-27,-28,37,37,-35,-36,37,37,]),'INT':([21,],[29,]),'FLOAT':([21,],[30,]),'ELSE':([23,68,],[-8,73,]),'PLUS':([25,26,27,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,61,62,66,67,],[38,38,38,38,-33,38,-31,-32,38,-26,-27,-28,38,-38,-39,-40,-41,38,-35,-36,38,38,-34,-37,]),'MINUS':([25,26,27,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,61,62,66,67,],[39,39,39,39,-33,39,-31,-32,39,-26,-27,-28,39,-38,-39,-40,-41,39,-35,-36,39,39,-34,-37,]),'CTESTRING':([27,61,62,],[42,42,42,]),'RPAREN':([33,34,36,40,41,42,43,51,52,53,54,58,64,65,66,67,70,71,],[-21,-29,-33,59,60,-16,-17,-38,-39,-40,-41,67,-20,-30,-34,-37,-18,-19,]),'LT':([33,34,36,51,52,53,54,65,66,67,],[47,-29,-33,-38,-39,-40,-41,-30,-34,-37,]),'GT':([33,34,36,51,52,53,54,65,66,67,],[48,-29,-33,-38,-39,-40,-41,-30,-34,-37,]),'NE':([33,34,36,51,52,53,54,65,66,67,],[49,-29,-33,-38,-39,-40,-41,-30,-34,-37,]),'CTEF':([35,38,39,],[53,-31,-32,]),'CTEI':([35,38,39,],[54,-31,-32,]),'TIMES':([36,51,52,53,54,67,],[56,-38,-39,-40,-41,-37,]),'DIVIDE':([36,51,52,53,54,67,],[57,-38,-39,-40,-41,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,],[5,]),'bloque':([4,5,59,73,],[6,9,68,74,]),'declaracion':([7,44,],[10,63,]),'nombre':([7,22,44,],[11,31,11,]),'estatutos':([8,14,],[13,24,]),'estatuto':([8,14,],[14,14,]),'asignacion':([8,14,],[15,15,]),'condicion':([8,14,],[16,16,]),'escritura':([8,14,],[17,17,]),'tipo':([21,],[28,]),'expresion':([25,26,27,37,61,62,],[32,40,43,58,43,43,]),'exp':([25,26,27,37,46,50,61,62,],[33,33,33,33,64,65,33,33,]),'termino':([25,26,27,37,46,50,55,61,62,],[34,34,34,34,34,34,66,34,34,]),'addop':([25,26,27,34,37,46,50,55,61,62,],[35,35,35,50,35,35,35,35,35,35,]),'factor':([25,26,27,37,46,50,55,61,62,],[36,36,36,36,36,36,36,36,36,]),'contenido':([27,61,62,],[41,70,71,]),'relop':([33,],[46,]),'varcte':([35,],[51,]),'mulop':([36,],[55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SCOLON vars bloque','programa',5,'p_programa','32.py',124),
  ('programa -> PROGRAM ID SCOLON bloque','programa',4,'p_programa','32.py',125),
  ('vars -> VAR declaracion','vars',2,'p_vars','32.py',129),
  ('declaracion -> nombre COLON tipo SCOLON','declaracion',4,'p_declaracion','32.py',133),
  ('declaracion -> nombre COLON tipo SCOLON declaracion','declaracion',5,'p_declaracion','32.py',134),
  ('tipo -> INT','tipo',1,'p_tipo','32.py',137),
  ('tipo -> FLOAT','tipo',1,'p_tipo','32.py',138),
  ('bloque -> LBRACKET estatutos RBRACKET','bloque',3,'p_bloque','32.py',141),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','32.py',144),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','32.py',145),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','32.py',149),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','32.py',150),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','32.py',151),
  ('asignacion -> ID ASSIGN expresion SCOLON','asignacion',4,'p_asignacion','32.py',154),
  ('escritura -> PRINT LPAREN contenido RPAREN SCOLON','escritura',5,'p_escritura','32.py',157),
  ('contenido -> CTESTRING','contenido',1,'p_contenido','32.py',160),
  ('contenido -> expresion','contenido',1,'p_contenido','32.py',161),
  ('contenido -> CTESTRING COMMA contenido','contenido',3,'p_contenido','32.py',162),
  ('contenido -> expresion COMMA contenido','contenido',3,'p_contenido','32.py',163),
  ('expresion -> exp relop exp','expresion',3,'p_expresion','32.py',166),
  ('expresion -> exp','expresion',1,'p_expresion','32.py',167),
  ('nombre -> ID','nombre',1,'p_nombre','32.py',170),
  ('nombre -> ID COMMA nombre','nombre',3,'p_nombre','32.py',171),
  ('condicion -> IF LPAREN expresion RPAREN bloque SCOLON','condicion',6,'p_condicion','32.py',174),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SCOLON','condicion',8,'p_condicion','32.py',175),
  ('relop -> LT','relop',1,'p_relop','32.py',178),
  ('relop -> GT','relop',1,'p_relop','32.py',179),
  ('relop -> NE','relop',1,'p_relop','32.py',180),
  ('exp -> termino','exp',1,'p_exp','32.py',183),
  ('exp -> termino addop exp','exp',3,'p_exp','32.py',184),
  ('addop -> PLUS','addop',1,'p_addop','32.py',187),
  ('addop -> MINUS','addop',1,'p_addop','32.py',188),
  ('termino -> factor','termino',1,'p_termino','32.py',191),
  ('termino -> factor mulop termino','termino',3,'p_termino','32.py',192),
  ('mulop -> TIMES','mulop',1,'p_mulop','32.py',195),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','32.py',196),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','32.py',199),
  ('factor -> addop varcte','factor',2,'p_factor','32.py',200),
  ('varcte -> ID','varcte',1,'p_varcte','32.py',203),
  ('varcte -> CTEF','varcte',1,'p_varcte','32.py',204),
  ('varcte -> CTEI','varcte',1,'p_varcte','32.py',205),
]
